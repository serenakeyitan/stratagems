[
  {
    "type": "deployment",
    "partialDeployment": {
      "_format": "hh-sol-artifact-1",
      "contractName": "StratagemsSetters",
      "sourceName": "src/game/routes/StratagemsSetters.sol",
      "abi": [
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "contract IERC20WithIERC2612",
                  "name": "tokens",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "burnAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "commitPhaseDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "revealPhaseDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "maxLife",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "numTokensPerGems",
                  "type": "uint256"
                },
                {
                  "internalType": "contract ITime",
                  "name": "time",
                  "type": "address"
                }
              ],
              "internalType": "struct UsingStratagemsTypes.Config",
              "name": "config",
              "type": "tuple"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "name": "CanStillReveal",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "CommitmentHashNotMatching",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "GameNotStarted",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "InCommitmentPhase",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "InRevealPhase",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "InvalidEpoch",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "InvalidFurtherMoves",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "NothingToReveal",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "PreviousCommitmentNotRevealed",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "inReserve",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expected",
              "type": "uint256"
            }
          ],
          "name": "ReserveTooLow",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint24",
              "name": "epoch",
              "type": "uint24"
            }
          ],
          "name": "CommitmentCancelled",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint24",
              "name": "epoch",
              "type": "uint24"
            },
            {
              "indexed": false,
              "internalType": "bytes24",
              "name": "commitmentHash",
              "type": "bytes24"
            }
          ],
          "name": "CommitmentMade",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint24",
              "name": "epoch",
              "type": "uint24"
            },
            {
              "indexed": true,
              "internalType": "bytes24",
              "name": "commitmentHash",
              "type": "bytes24"
            },
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "position",
                  "type": "uint64"
                },
                {
                  "internalType": "enum UsingStratagemsTypes.Color",
                  "name": "color",
                  "type": "uint8"
                }
              ],
              "indexed": false,
              "internalType": "struct UsingStratagemsTypes.Move[]",
              "name": "moves",
              "type": "tuple[]"
            },
            {
              "indexed": false,
              "internalType": "bytes24",
              "name": "furtherMoves",
              "type": "bytes24"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newReserveAmount",
              "type": "uint256"
            }
          ],
          "name": "CommitmentRevealed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint24",
              "name": "epoch",
              "type": "uint24"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountBurnt",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bytes24",
              "name": "furtherMoves",
              "type": "bytes24"
            }
          ],
          "name": "CommitmentVoid",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint64",
              "name": "position",
              "type": "uint64"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "enum UsingStratagemsTypes.Color",
              "name": "oldColor",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "enum UsingStratagemsTypes.Color",
              "name": "newColor",
              "type": "uint8"
            }
          ],
          "name": "MoveProcessed",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountDeposited",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newAmount",
              "type": "uint256"
            }
          ],
          "name": "ReserveDeposited",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountWithdrawn",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newAmount",
              "type": "uint256"
            }
          ],
          "name": "ReserveWithdrawn",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "secret",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "position",
                  "type": "uint64"
                },
                {
                  "internalType": "enum UsingStratagemsTypes.Color",
                  "name": "color",
                  "type": "uint8"
                }
              ],
              "internalType": "struct UsingStratagemsTypes.Move[]",
              "name": "moves",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes24",
              "name": "furtherMoves",
              "type": "bytes24"
            }
          ],
          "name": "acknowledgeMissedReveal",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "acknowledgeMissedRevealByBurningAllReserve",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokensAmountToAdd",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct UsingStratagemsTypes.Permit",
              "name": "permit",
              "type": "tuple"
            }
          ],
          "name": "addToReserve",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "cancelCommitment",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes24",
              "name": "commitmentHash",
              "type": "bytes24"
            },
            {
              "internalType": "address payable",
              "name": "payee",
              "type": "address"
            }
          ],
          "name": "makeCommitment",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes24",
              "name": "commitmentHash",
              "type": "bytes24"
            },
            {
              "internalType": "uint256",
              "name": "tokensAmountToAdd",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct UsingStratagemsTypes.Permit",
              "name": "permit",
              "type": "tuple"
            },
            {
              "internalType": "address payable",
              "name": "payee",
              "type": "address"
            }
          ],
          "name": "makeCommitmentWithExtraReserve",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "position",
              "type": "uint64"
            }
          ],
          "name": "poke",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint64[]",
              "name": "positions",
              "type": "uint64[]"
            }
          ],
          "name": "pokeMultiple",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "secret",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "position",
                  "type": "uint64"
                },
                {
                  "internalType": "enum UsingStratagemsTypes.Color",
                  "name": "color",
                  "type": "uint8"
                }
              ],
              "internalType": "struct UsingStratagemsTypes.Move[]",
              "name": "moves",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes24",
              "name": "furtherMoves",
              "type": "bytes24"
            },
            {
              "internalType": "bool",
              "name": "useReserve",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "payee",
              "type": "address"
            }
          ],
          "name": "reveal",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "withdrawFromReserve",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x6101806040523480156200001257600080fd5b5060405162005b3938038062005b398339810160408190526200003591620000be565b60e0808201516001600160a01b0390811660809081528351821660a0908152602085015190921661016052604084015160c090815260608501519093528301516101005282015160ff16610120520151610140526200017e565b80516001600160a01b0381168114620000a757600080fd5b919050565b805160ff81168114620000a757600080fd5b6000610100808385031215620000d357600080fd5b604051908101906001600160401b03821181831017156200010457634e487b7160e01b600052604160045260246000fd5b8160405262000113846200008f565b815262000123602085016200008f565b60208201526040840151604082015260608401516060820152608084015160808201526200015460a08501620000ac565b60a082015260c084015160c08201526200017160e085016200008f565b60e0820152949350505050565b60805160a05160c05160e0516101005161012051610140516101605161587c620002bd600039600081816107ed01528181610b9301526122770152600081816117a1015281816117f6015281816119ef01528181611aaa015281816131f50152818161324e015281816132ad015281816133ec015281816134360152818161430001526143c501526000818161316d015281816139ab015281816139e301528181613a510152613a7f01526000611516015260008181611537015261160a01526000818161156b01526115ca0152600081816103430152818161044b0152818161057b0152818161081c0152818161093001528181610bc201528181610d8c015281816113200152818161144a0152818161203d015281816121b2015281816122a701526123740152600081816123f30152612433015261587c6000f3fe6080604052600436106100b15760003560e01c80638b8fc3a111610069578063afa1e2d11161004e578063afa1e2d114610173578063d401978314610188578063d67101121461019b57600080fd5b80638b8fc3a114610140578063ae37a62d1461016057600080fd5b80631fdd8a691161009a5780631fdd8a69146100eb5780634dd3ab2314610100578063599a71c61461012057600080fd5b80630a8bcdb9146100b657806310837a39146100d8575b600080fd5b3480156100c257600080fd5b506100d66100d13660046149d2565b6101bb565b005b6100d66100e6366004614a55565b6103f3565b3480156100f757600080fd5b506100d66106a1565b34801561010c57600080fd5b506100d661011b366004614abe565b6108d1565b34801561012c57600080fd5b506100d661013b366004614b2c565b610959565b34801561014c57600080fd5b506100d661015b366004614b9d565b610cb4565b6100d661016e366004614c12565b610db7565b34801561017f57600080fd5b506100d6610e36565b6100d6610196366004614c57565b610f45565b3480156101a757600080fd5b506100d66101b6366004614cef565b6112ce565b33600090815260036020526040812090806101d461150d565b845491935091507801000000000000000000000000000000000000000000000000900462ffffff161580159061023757508015806102375750825462ffffff83811678010000000000000000000000000000000000000000000000009092041614155b1561026e576040517f0aafb74c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600260205260409020546001850161028f57935060006102e5565b848110156102d8576040517f78fe52a600000000000000000000000000000000000000000000000000000000815260048101829052602481018690526044015b60405180910390fd5b6102e28582614d4b565b90505b3360008181526002602052604090819020839055517fa9059cbb00000000000000000000000000000000000000000000000000000000815260048101919091526024810186905273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af115801561038c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b09190614d5e565b50604080518681526020810183905233917ff7aeb382a1e87f84aa69637a22868c2e12be1261273f04cdf40a262a8b890031910160405180910390a25050505050565b3360009081526002602052604090205461040d8482614d7b565b33600081815260026020526040902082905590915061042d908683611658565b82351561053a5773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663d505accf33308635602088013561048960608a0160408b01614d8e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815273ffffffffffffffffffffffffffffffffffffffff95861660048201529490931660248501526044840191909152606483015260ff166084820152606086013560a4820152608086013560c482015260e401600060405180830381600087803b15801561052157600080fd5b505af1158015610535573d6000803e3d6000fd5b505050505b831561063a576040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018590527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906323b872dd906064016020604051808303816000875af11580156105d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fd9190614d5e565b50604080518581526020810183905233917f9705a8ff16374359785d31b0f1862c27f983645496f40760d180a9830eeaf2e8910160405180910390a25b73ffffffffffffffffffffffffffffffffffffffff82161561069a5760405173ffffffffffffffffffffffffffffffffffffffff8316903480156108fc02916000818181858888f19350505050158015610698573d6000803e3d6000fd5b505b5050505050565b336000908152600360205260408120906106b961150d565b5082549091507801000000000000000000000000000000000000000000000000900462ffffff16600003610719576040517f6599c9aa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815462ffffff80831678010000000000000000000000000000000000000000000000009092041603610777576040517f175868d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81547fffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffff168255336000908152600260205260408082208054929055517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610865573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108899190614d5e565b50604080518281526000602082015262ffffff84169133917f6337d70daadadd11f8be7f6e7b38e6c04d28710b1f2a2894bb14d8e3eaa8cdb6910160405180910390a3505050565b60408051600581830181815261010083019093526000928291816020015b60408051808201909152600080825260208201528152602001906001900390816108ef57505081526000602090910152905061092b818361189e565b6109557f000000000000000000000000000000000000000000000000000000000000000082611c8a565b5050565b73ffffffffffffffffffffffffffffffffffffffff851660009081526003602052604081209061098761150d565b5082549091507801000000000000000000000000000000000000000000000000900462ffffff1615806109de5750815462ffffff828116780100000000000000000000000000000000000000000000000090920416145b15610a15576040517f175868d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81546040805160208088028201810183528782528793610a76931b918a918a908690819060009085015b82821015610a6b57610a5c60408302860136819003810190614def565b81526020019060010190610a3f565b505050505087611d8d565b7fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000841615610b095760208114610ad8576040517fcc586b4500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82547fffffffffffffffff00000000000000000000000000000000000000000000000016604085901c178355610b30565b82547fffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffff1683555b33600090815260026020526040812080548792839291610b51908490614d4b565b90915550506040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610c0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2f9190614d5e565b50604080518281527fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008716602082015262ffffff85169173ffffffffffffffffffffffffffffffffffffffff8c16917f6337d70daadadd11f8be7f6e7b38e6c04d28710b1f2a2894bb14d8e3eaa8cdb6910160405180910390a3505050505050505050565b60408051808201909152819060009080610ccf846005614e71565b67ffffffffffffffff811115610ce757610ce7614db1565b604051908082528060200260200182016040528015610d2c57816020015b6040805180820190915260008082526020820152815260200190600190039081610d055790505b5081526020016000815250905060005b82811015610d8657610d7482868684818110610d5a57610d5a614e88565b9050602002016020810190610d6f9190614abe565b61189e565b80610d7e81614eb7565b915050610d3c565b50610db17f000000000000000000000000000000000000000000000000000000000000000082611c8a565b50505050565b33600081815260026020526040902054610dd391908490611658565b73ffffffffffffffffffffffffffffffffffffffff8116156109555760405173ffffffffffffffffffffffffffffffffffffffff8216903480156108fc02916000818181858888f19350505050158015610e31573d6000803e3d6000fd5b505050565b3360009081526003602052604081209080610e4f61150d565b9150915080610e8a576040517fdc12c97300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825462ffffff83811678010000000000000000000000000000000000000000000000009092041614610ee8576040517f0aafb74c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82547fffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffff16835560405162ffffff83169033907f619ef9650648da30c9647d0b77a0de24a51da0630c3533d54cc1eb3d798e1eaa90600090a3505050565b73ffffffffffffffffffffffffffffffffffffffff871660009081526003602052604081209080610f7461150d565b915091508015610fb0576040517f24f7f40f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82547801000000000000000000000000000000000000000000000000900462ffffff1660000361100c576040517f6599c9aa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825462ffffff8381167801000000000000000000000000000000000000000000000000909204161461106a576040517fd5b25b6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8254604080516020808b028201810183528a82526110cc9390921b918c91908c908c90819060009085015b828210156110c1576110b260408302860136819003810190614def565b81526020019060010190611095565b505050505089611d8d565b60006111388b848b8b808060200260200160405190810160405280939291908181526020016000905b828210156111215761111260408302860136819003810190614def565b815260200190600101906110f5565b505050505089611131578e611eb5565b6000611eb5565b845490915060401b7fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008816156111d357602089146111a2576040517fcc586b4500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffff00000000000000000000000000000000000000000000000016604089901c1785556111fa565b84547fffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffff1685555b8067ffffffffffffffff19168462ffffff168d73ffffffffffffffffffffffffffffffffffffffff167ffab312c5020dc7093e590463878dbfd0567314a7c155b164a60430ebcc7b38038d8d8d886040516112589493929190614f59565b60405180910390a473ffffffffffffffffffffffffffffffffffffffff8616156112c05760405173ffffffffffffffffffffffffffffffffffffffff8716903480156108fc02916000818181858888f193505050501580156112be573d6000803e3d6000fd5b505b505050505050505050505050565b811561095557336000908152600260205260409020546112ee8382614d7b565b336000908152600260205260409020819055905081351561140f5773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663d505accf33308535602087013561135e6060890160408a01614d8e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815273ffffffffffffffffffffffffffffffffffffffff95861660048201529490931660248501526044840191909152606483015260ff166084820152606085013560a4820152608085013560c482015260e401600060405180830381600087803b1580156113f657600080fd5b505af115801561140a573d6000803e3d6000fd5b505050505b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906323b872dd906064016020604051808303816000875af11580156114a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114cc9190614d5e565b50604080518481526020810183905233917f9705a8ff16374359785d31b0f1862c27f983645496f40760d180a9830eeaf2e8910160405180910390a2505050565b6000808061155b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000614d7b565b905060006115676123ef565b90507f00000000000000000000000000000000000000000000000000000000000000008110156115c3576040517f3a5f7b5700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006115ef7f000000000000000000000000000000000000000000000000000000000000000083614d4b565b90506115fb838261501d565b611606906002614d7b565b94507f000000000000000000000000000000000000000000000000000000000000000083611635600288615031565b62ffffff166116449190614e71565b61164e9083614d4b565b1093505050509091565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260408120908061168761150d565b91509150806116c2576040517fdc12c97300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82547801000000000000000000000000000000000000000000000000900462ffffff16158015906117185750825462ffffff83811678010000000000000000000000000000000000000000000000009092041614155b1561174f576040517f0aafb74c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825462ffffff83167801000000000000000000000000000000000000000000000000027fffffffffff000000000000000000000000000000000000000000000000000000909116604087901c171783557f0000000000000000000000000000000000000000000000000000000000000000841015611822576040517f78fe52a6000000000000000000000000000000000000000000000000000000008152600481018590527f000000000000000000000000000000000000000000000000000000000000000060248201526044016102cf565b6040517fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008616815262ffffff83169073ffffffffffffffffffffffffffffffffffffffff8816907fe3c45ded79e3db74b160b9a697d75f465f68d287a678532ed0a9fb691553b93d9060200160405180910390a3505050505050565b60006118a861150d565b50905060006118b783836124c5565b905061192a60006118cc8462ffffff16612623565b6040516020016118dc9190615078565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291815267ffffffffffffffff8716600090815260016020522054869085906126e1565b60c0810151606082015160ff161580156119495750815162ffffff1615155b156119785761195b8260a00151612b2c565b60048360a0015160ff16901b61197191906150bd565b6000835290505b60008061199086868660400151876040015187612b5e565b9094509250505060ff821615611a1e57611a1e8760405180604001604052806119cf8a67ffffffffffffffff1660009081526001602052604090205490565b73ffffffffffffffffffffffffffffffffffffffff168152602001611a177f000000000000000000000000000000000000000000000000000000000000000060ff8816614e71565b9052612f24565b60005b60048160ff161015611ae35760008260ff831660048110611a4457611a44614e88565b602002015173ffffffffffffffffffffffffffffffffffffffff1614611ad157611ad1886040518060400160405280858560ff1660048110611a8857611a88614e88565b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020017f0000000000000000000000000000000000000000000000000000000000000000815250612f24565b80611adb816150d6565b915050611a21565b50600060c0850181905267ffffffffffffffff871681526020818152604091829020865181549288015162ffffff9081166301000000027fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000009094169116179190911780825591860151869282907fffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffff166601000000000000836006811115611b8c57611b8c614eef565b021790555060608201518154608084015160a085015160c0909501517fffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff90921667010000000000000060ff948516027fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16176801000000000000000091841691909102177fffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffff166901000000000000000000948316949094027fffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffff16939093176a0100000000000000000000919093160291909117905550505050505050565b60005b8160200151811015610e31578273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83600001518381518110611ccb57611ccb614e88565b60200260200101516000015184600001518481518110611ced57611ced614e88565b6020026020010151602001516040518363ffffffff1660e01b8152600401611d3792919073ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6020604051808303816000875af1158015611d56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7a9190614d5e565b5080611d8581614eb7565b915050611c8d565b7fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000811615611e39576000838383604051602001611dcc9392919061514f565b6040516020818303038152906040528051906020012090508067ffffffffffffffff19168567ffffffffffffffff191614611e33576040517fd13415b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610db1565b60008383604051602001611e4e92919061519a565b6040516020818303038152906040528051906020012090508067ffffffffffffffff19168567ffffffffffffffff19161461069a576040517fd13415b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080604051806040016040528085516005611ed19190614e71565b67ffffffffffffffff811115611ee957611ee9614db1565b604051908082528060200260200182016040528015611f2e57816020015b6040805180820190915260008082526020820152815260200190600190039081611f075790505b50815260200160008152509050611f5f60405180606001604052806000815260200160008152602001600081525090565b60005b8551811015611ff6576000806000611f95868c8c8c8881518110611f8857611f88614e88565b6020026020010151613076565b9250925092508285600001818151611fad9190614d7b565b905250602085018051839190611fc4908390614d7b565b905250604085018051829190611fdb908390614d7b565b905250839250611fee9150829050614eb7565b915050611f62565b5061203860006040518060400160405280600c81526020017f7265736f6c76654d6f7665730000000000000000000000000000000000000000815250846136f9565b6120627f000000000000000000000000000000000000000000000000000000000000000083611c8a565b73ffffffffffffffffffffffffffffffffffffffff871660009081526002602090815260409091205490820151825191945061209d91614d7b565b8310156120f1576020810151815184916120b691614d7b565b6040517f78fe52a6000000000000000000000000000000000000000000000000000000008152600481019290925260248201526044016102cf565b73ffffffffffffffffffffffffffffffffffffffff8416612156576020810151815161211d9190614d7b565b6121279084614d4b565b73ffffffffffffffffffffffffffffffffffffffff881660009081526002602052604090208190559250612318565b8051156122235780516040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015230602483015260448201929092527f0000000000000000000000000000000000000000000000000000000000000000909116906323b872dd906064016020604051808303816000875af11580156121fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122219190614d5e565b505b6020810151156123185760208101516040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301527f00000000000000000000000000000000000000000000000000000000000000008116602483015260448201929092527f0000000000000000000000000000000000000000000000000000000000000000909116906323b872dd906064016020604051808303816000875af11580156122f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123169190614d5e565b505b6040810151156123e55760408181015190517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff898116600483015260248201929092527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af11580156123bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123e39190614d5e565b505b5050949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661243157504290565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b80777ea6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561249c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124c091906151b3565b905090565b6040805160e0808201835260008083526020808401829052838501829052606084018290526080840182905260a0840182905260c0840182905267ffffffffffffffff871682528181529084902084519283018552805462ffffff808216855263010000008204169284019290925292939192918301906601000000000000900460ff16600681111561255a5761255a614eef565b600681111561256b5761256b614eef565b8152905460ff67010000000000000082048116602084015268010000000000000000820460000b60408401526901000000000000000000820481166060808501919091526a010000000000000000000090920416608092830152825191830151908301519293509091600162ffffff8416108015906125ed575060008160ff16115b1561261a57600080612606858760a0015186868b61390f565b60ff909116606088015262ffffff16865250505b50505092915050565b6060600061263083613b83565b600101905060008167ffffffffffffffff81111561265057612650614db1565b6040519080825280601f01601f19166020018201604052801561267a576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461268457509392505050565b600060ff8616156127b3578560ff16600114612778578560ff1660021461273d576040518060400160405280600c81526020017f20202020202020202020202000000000000000000000000000000000000000008152506127c4565b6040518060400160405280600881526020017f20202020202020200000000000000000000000000000000000000000000000008152506127c4565b6040518060400160405280600481526020017f20202020000000000000000000000000000000000000000000000000000000008152506127c4565b604051806020016040528060008152505b90506128066040518060400160405280600481526020017f25732573000000000000000000000000000000000000000000000000000000008152508287613c66565b6040805160608101909152603f80825263ffffffff86811692602088811c90921692612839926158089083013984613cf9565b6128906040518060400160405280600e81526020017f257363656c6c202825732c2573290000000000000000000000000000000000008152508461287f8560030b613d8a565b61288b8560030b613d8a565b613e18565b6128b26040518060600160405280603f8152602001615808603f913984613cf9565b6128fb6040518060400160405280601981526020017f2573202d206c61737445706f63685570646174653a202025730000000000000081525084876000015162ffffff16613ead565b6129446040518060400160405280601f81526020017f2573202d2065706f63685768656e546f6b656e497341646465643a202025730081525084876020015162ffffff16613ead565b61299c6040518060400160405280600f81526020017f2573202d20636f6c6f723a202025730000000000000000000000000000000000815250848760400151600681111561299457612994614eef565b60ff16613ead565b6129e36040518060400160405280600e81526020017f2573202d206c6966653a2020257300000000000000000000000000000000000081525084876060015160ff16613ead565b612a2a6040518060400160405280601681526020017f2573202d20646973747269627574696f6e3a2020257300000000000000000000815250848760c0015160ff16613ead565b612a6a6040518060400160405280600f81526020017f2573202d206f776e65723a2020257300000000000000000000000000000000008152508486613f40565b612ab96040518060400160405280600e81526020017f2573202d2064656c74613a20257300000000000000000000000000000000000081525084612ab4886080015160000b613d8a565b613c66565b612b006040518060400160405280601281526020017f2573202d20656e656d794d61703a202025730000000000000000000000000000815250848760a0015160ff16613ead565b612b226040518060600160405280603f8152602001615808603f913984613cf9565b5050505050505050565b60005b60ff821615612b5957612b436001836151cc565b9091169080612b51816150d6565b915050612b2f565b919050565b6000806000612b6b6149b4565b612baa6040518060400160405280600481526020017f66726f6d000000000000000000000000000000000000000000000000000000008152508a613fd3565b60008080612be367ffffffffffffffff8d16827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61402f565b9050612c246040518060400160405280600a81526020017f7570506f736974696f6e0000000000000000000000000000000000000000000081525082613fd3565b612c32818c60028d8d61407f565b9093509150600083810b1215612c49578560011795505b93810193600488811c81169003612c8d5767ffffffffffffffff811660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1684525b50948101946000612cc967ffffffffffffffff8d167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8361402f565b9050612d0a6040518060400160405280600c81526020017f6c656674506f736974696f6e000000000000000000000000000000000000000081525082613fd3565b612d18818c60038d8d61407f565b9093509150600083810b1215612d2f578560021795505b938101936008600489901c81169003612d785767ffffffffffffffff811660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1660208501525b50948101946000612d9567ffffffffffffffff8d1682600161402f565b9050612dd66040518060400160405280600c81526020017f646f776e506f736974696f6e000000000000000000000000000000000000000081525082613fd3565b612de4818c60008d8d61407f565b9093509150600083810b1215612dfb578560041795505b938101936001600489901c81169003612e445767ffffffffffffffff811660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1660408501525b50948101946000612e6167ffffffffffffffff8d1660018361402f565b9050612ea26040518060400160405280600d81526020017f7269676874506f736974696f6e0000000000000000000000000000000000000081525082613fd3565b612eb0818c60018d8d61407f565b9093509150600083810b1215612ec7578560081795505b938101936002600489901c81169003612f105767ffffffffffffffff811660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1660608501525b828701965050505095509550955095915050565b60005b8260200151811015612fd657816000015173ffffffffffffffffffffffffffffffffffffffff1683600001518281518110612f6457612f64614e88565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1603612fc45760208201518351805183908110612fa457612fa4614e88565b6020026020010151602001818151612fbc9190614d7b565b905250505050565b80612fce81614eb7565b915050612f27565b5080518251602084015181518110612ff057612ff0614e88565b60200260200101516000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508060200151826000015183602001518151811061304d5761304d614e88565b6020026020010151602001818152505081602001805180919061306f90614eb7565b9052505050565b60008060008061308a8560000151876124c5565b9050613100600061309f8862ffffff16612623565b6040516020016130af91906151e5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152885167ffffffffffffffff811660009081526001602052919091205485906126e1565b60c0810151606082015160ff1615801561311f5750815162ffffff1615155b1561314e576131318260a00151612b2c565b60048360a0015160ff16901b61314791906150bd565b6000835290505b60008660200151600681111561316657613166614eef565b0361327a577f000000000000000000000000000000000000000000000000000000000000000060ff16826060015160ff161415806131eb5750855167ffffffffffffffff1660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff89169073ffffffffffffffffffffffffffffffffffffffff1614155b15613221576000807f000000000000000000000000000000000000000000000000000000000000000094509450945050506136ef565b6132758960405180604001604052808b73ffffffffffffffffffffffffffffffffffffffff1681526020017f0000000000000000000000000000000000000000000000000000000000000000815250612f24565b6132d9565b8662ffffff16826020015162ffffff16036132d957606082015160ff16156132a857600660208701526132d9565b6000807f000000000000000000000000000000000000000000000000000000000000000094509450945050506136ef565b6000806132ed8b898b876040015187614279565b915091508973ffffffffffffffffffffffffffffffffffffffff16886000015167ffffffffffffffff167f17b85ded3fb12432ee427abc34a3026e1fbbb8bc431e3dbe51bc81215655c25c86604001518b6020015160405161335092919061522a565b60405180910390a387602001518460400190600681111561337357613373614eef565b9081600681111561338657613386614eef565b905250600060c0850181905262ffffff8a166020860152846040015160068111156133b3576133b3614eef565b03613412576000606085018190528085526080850181905260a08501819052885167ffffffffffffffff168152600160205260408120557f000000000000000000000000000000000000000000000000000000000000000094506134de565b60ff811660a0850152600082900b60808501526001606085015262ffffff891684527f0000000000000000000000000000000000000000000000000000000000000000965060068460400151600681111561346f5761346f614eef565b036134aa57875167ffffffffffffffff16600090815260016020526040902073ffffffffffffffffffffffffffffffffffffffff90556134de565b875167ffffffffffffffff16600090815260016020526040902073ffffffffffffffffffffffffffffffffffffffff8b1690555b875167ffffffffffffffff1660009081526020818152604091829020865181549288015162ffffff9081166301000000027fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000009094169116179190911780825591860151869282907fffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffff16660100000000000083600681111561358157613581614eef565b021790555060608201518154608084015160a085015160c0909501517fffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff90921667010000000000000060ff948516027fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16176801000000000000000091841691909102177fffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffff166901000000000000000000948316949094027fffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffff16939093176a010000000000000000000091909316029190911790556136ea600061368962ffffff8c16612623565b6040516020016136999190615245565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181528b5167ffffffffffffffff811660009081526001602052919091205488906126e1565b505050505b9450945094915050565b600060ff8416156137cb578360ff16600114613790578360ff16600214613755576040518060400160405280600c81526020017f20202020202020202020202000000000000000000000000000000000000000008152506137dc565b6040518060400160405280600881526020017f20202020202020200000000000000000000000000000000000000000000000008152506137dc565b6040518060400160405280600481526020017f20202020000000000000000000000000000000000000000000000000000000008152506137dc565b604051806020016040528060008152505b905061381e6040518060400160405280600481526020017f25732573000000000000000000000000000000000000000000000000000000008152508285613c66565b6138406040518060600160405280603f8152602001615808603f913982613cf9565b60005b82602001518110156138ec576138da6040518060400160405280601281526020017f25737472616e73666572202825732c2573290000000000000000000000000000815250838560000151848151811061389f5761389f614e88565b6020026020010151600001516138d5876000015186815181106138c4576138c4614e88565b602002602001015160200151612623565b614412565b806138e481614eb7565b915050613843565b50610db16040518060600160405280603f8152602001615808603f913982613cf9565b600085600162ffffff82161080159061392b575060008460ff16115b15613b7957600061393c8885615031565b62ffffff1690508015613b705760008660000b60000361397c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61397e565b865b905060008160000b128015613994575060ff8816155b1561399d575060005b60008160000b1315613ac1577f000000000000000000000000000000000000000000000000000000000000000060ff168660ff161015613ab657600081600181613a078a7f00000000000000000000000000000000000000000000000000000000000000006151cc565b613a1191906150bd565b613a1b91906151cc565b613a25919061528a565b90508060ff16831115613a39578060ff1692505b613a4382846152ac565b613a4d90886150bd565b96507f000000000000000000000000000000000000000000000000000000000000000060ff168760ff161115613aa1577f000000000000000000000000000000000000000000000000000000000000000096505b869450613aae838b6152c8565b935050613b6a565b859350889250613b6a565b60008160000b1215613b63576000613ad8826152e4565b6001613ae3846152e4565b613aed908a6150bd565b613af791906151cc565b613b01919061528a565b90508060ff16831115613b15578060ff1692505b6000613b20836152e4565b613b2a90856152ac565b90508760ff168160ff161115613b435760009550613b50565b613b4d81896151cc565b95505b613b5a848c6152c8565b94505050613b6a565b8593508492505b50613b77565b8492508791505b505b9550959350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310613bcc577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310613bf8576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310613c1657662386f26fc10000830492506010015b6305f5e1008310613c2e576305f5e100830492506008015b6127108310613c4257612710830492506004015b60648310613c54576064830492506002015b600a8310613c60576001015b92915050565b610e31838383604051602401613c7e9392919061536c565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f2ced7cef000000000000000000000000000000000000000000000000000000001790526144a3565b6109558282604051602401613d0f9291906153af565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f4b5c4277000000000000000000000000000000000000000000000000000000001790526144a3565b606060008212613da95760405180602001604052806000815250613de0565b6040518060400160405280600181526020017f2d000000000000000000000000000000000000000000000000000000000000008152505b613df1613dec846144af565b612623565b604051602001613e029291906153dd565b6040516020818303038152906040529050919050565b610db184848484604051602401613e32949392919061540c565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fde68f20a000000000000000000000000000000000000000000000000000000001790526144a3565b610e31838383604051602401613ec593929190615464565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f5821efa1000000000000000000000000000000000000000000000000000000001790526144a3565b610e31838383604051602401613f589392919061549a565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f95ed0195000000000000000000000000000000000000000000000000000000001790526144a3565b60008063ffffffff80841690602085901c1691509150610db16040518060400160405280600b81526020017f25733a202825732c2573290000000000000000000000000000000000000000008152508561287f8560030b613d8a565b60006140418363ffffffff86166154e6565b92506140578263ffffffff602087901c166154e6565b915061407763ffffffff841667ffffffff00000000602085901b16615528565b949350505050565b67ffffffffffffffff8516600090815260208181526040808320815160e081018352815462ffffff8082168352630100000082041694820194909452849384939192918301906601000000000000900460ff1660068111156140e3576140e3614eef565b60068111156140f4576140f4614eef565b8152905460ff670100000000000000820481166020840152680100000000000000008204600090810b60408086019190915269010000000000000000008404831660608601526a0100000000000000000000909304909116608090930192909252825190830151929350919081600681111561417257614172614eef565b146141cc5785600681111561418957614189614eef565b81600681111561419b5761419b614eef565b146141c6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6141c9565b60015b94505b60018262ffffff16101580156141f4575060008160068111156141f1576141f1614eef565b14155b1561426c576000836060015160ff1611801561421957508862ffffff168262ffffff16105b156142565760008061423a848660a00151876080015188606001518f61390f565b9150915061424d8c8684848e8e8e6144c6565b9550505061426c565b6142698a8485606001518c8c8c8c6144c6565b93505b5050509550959350505050565b6000806000806000806142978a600001518a8a8d602001518b612b5e565b935093509350935060008260ff161115614332576143328b60405180604001604052806142de8e6000015167ffffffffffffffff1660009081526001602052604090205490565b73ffffffffffffffffffffffffffffffffffffffff168152602001600c6143287f000000000000000000000000000000000000000000000000000000000000000060ff8916614e71565b611a17919061501d565b60005b60048160ff1610156144005760008260ff83166004811061435857614358614e88565b602002015173ffffffffffffffffffffffffffffffffffffffff16146143ee576143ee8c6040518060400160405280858560ff166004811061439c5761439c614e88565b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020018b600f1660ff167f0000000000000000000000000000000000000000000000000000000000000000611a17919061501d565b806143f8816150d6565b915050614335565b50929a91995090975050505050505050565b610db18484848460405160240161442c9493929190615549565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167feb1bff80000000000000000000000000000000000000000000000000000000001790525b6144ac81614993565b50565b6000808212156144c25781600003613c60565b5090565b600080876060015160ff161180156144df575060ff8616155b15614510576144f18760a00151612b2c565b60048860a0015160ff16901b61450791906150bd565b60ff1660c08801525b61457f60006145218660ff16612623565b604051602001614531919061559e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291815267ffffffffffffffff8c166000908152600160205220548b908b906126e1565b61458a846002615703565b614595856002615703565b60c089015160041c16600f16036145fd5760c08701516145b990600f16600c61528a565b60c0880151909150600f1660046145d460ff87166002615712565b1960048a60c0015160ff16901c60ff161660ff16901b6145f491906150bd565b60ff1660c08801525b81600681111561460f5761460f614eef565b83600681111561462157614621614eef565b146147bd57600082600681111561463a5761463a614eef565b036146c15782600681111561465157614651614eef565b8760400151600681111561466757614667614eef565b0361468a5760018760800181815161467f919061571e565b60000b9052506147bd565b60018760800181815161469d919061575d565b60000b90525060a087018051600160ff8781169190911b81189091161690526147bd565b8260068111156146d3576146d3614eef565b876040015160068111156146e9576146e9614eef565b0361471a5760a087018051600160ff8781169190911b9091171690526080870180516002919061467f90839061571e565b81600681111561472c5761472c614eef565b8760400151600681111561474257614742614eef565b0361477357600083600681111561475b5761475b614eef565b1461468a5760028760800181815161469d919061575d565b600083600681111561478757614787614eef565b036147bd5760018760800181815161479f919061571e565b60000b90525060a087018051600160ff8781169190911b9091171690525b62ffffff8516875260ff80871660608901526147f1906000906147e1908716612623565b604051602001614531919061579c565b67ffffffffffffffff88166000908152602081815260409182902089518154928b015162ffffff9081166301000000027fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000009094169116179190911780825591890151899282907fffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffff16660100000000000083600681111561489357614893614eef565b021790555060608201518154608084015160a085015160c0909501517fffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff90921667010000000000000060ff948516027fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16176801000000000000000091841691909102177fffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffff166901000000000000000000948316949094027fffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffff16939093176a01000000000000000000009190931602919091179055979650505050505050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b60405180608001604052806004906020820280368337509192915050565b6000602082840312156149e457600080fd5b5035919050565b80357fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000081168114612b5957600080fd5b600060a08284031215614a2d57600080fd5b50919050565b73ffffffffffffffffffffffffffffffffffffffff811681146144ac57600080fd5b6000806000806101008587031215614a6c57600080fd5b614a75856149eb565b935060208501359250614a8b8660408701614a1b565b915060e0850135614a9b81614a33565b939692955090935050565b803567ffffffffffffffff81168114612b5957600080fd5b600060208284031215614ad057600080fd5b614ad982614aa6565b9392505050565b60008083601f840112614af257600080fd5b50813567ffffffffffffffff811115614b0a57600080fd5b6020830191508360208260061b8501011115614b2557600080fd5b9250929050565b600080600080600060808688031215614b4457600080fd5b8535614b4f81614a33565b945060208601359350604086013567ffffffffffffffff811115614b7257600080fd5b614b7e88828901614ae0565b9094509250614b919050606087016149eb565b90509295509295909350565b60008060208385031215614bb057600080fd5b823567ffffffffffffffff80821115614bc857600080fd5b818501915085601f830112614bdc57600080fd5b813581811115614beb57600080fd5b8660208260051b8501011115614c0057600080fd5b60209290920196919550909350505050565b60008060408385031215614c2557600080fd5b614c2e836149eb565b91506020830135614c3e81614a33565b809150509250929050565b80151581146144ac57600080fd5b600080600080600080600060c0888a031215614c7257600080fd5b8735614c7d81614a33565b965060208801359550604088013567ffffffffffffffff811115614ca057600080fd5b614cac8a828b01614ae0565b9096509450614cbf9050606089016149eb565b92506080880135614ccf81614c49565b915060a0880135614cdf81614a33565b8091505092959891949750929550565b60008060c08385031215614d0257600080fd5b82359150614d138460208501614a1b565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115613c6057613c60614d1c565b600060208284031215614d7057600080fd5b8151614ad981614c49565b80820180821115613c6057613c60614d1c565b600060208284031215614da057600080fd5b813560ff81168114614ad957600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b803560078110612b5957600080fd5b600060408284031215614e0157600080fd5b6040516040810181811067ffffffffffffffff82111715614e4b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604052614e5783614aa6565b8152614e6560208401614de0565b60208201529392505050565b8082028115828204841417613c6057613c60614d1c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614ee857614ee8614d1c565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60078110614f55577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6060808252810184905260008560808301825b87811015614fb75767ffffffffffffffff614f8684614aa6565b1682526020614f96818501614de0565b614fa282850182614f1e565b50506040928301929190910190600101614f6c565b507fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000095909516602084015250506040015292915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261502c5761502c614fee565b500490565b62ffffff82811682821603908082111561504d5761504d614d1c565b5092915050565b60005b8381101561506f578181015183820152602001615057565b50506000910152565b7f5f706f6b652061742065706f63682000000000000000000000000000000000008152600082516150b081600f850160208701615054565b91909101600f0192915050565b60ff8181168382160190811115613c6057613c60614d1c565b600060ff821660ff81036150ec576150ec614d1c565b60010192915050565b600081518084526020808501945080840160005b83811015615144578151805167ffffffffffffffff16885283015161513084890182614f1e565b506040969096019590820190600101615109565b509495945050505050565b83815260606020820152600061516860608301856150f5565b90507fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000083166040830152949350505050565b82815260406020820152600061407760408301846150f5565b6000602082840312156151c557600080fd5b5051919050565b60ff8281168282160390811115613c6057613c60614d1c565b7f5f636f6d707574654d6f76652061742065706f6368200000000000000000000081526000825161521d816016850160208701615054565b9190910160160192915050565b604081016152388285614f1e565b614ad96020830184614f1e565b7f414654455220000000000000000000000000000000000000000000000000000081526000825161527d816006850160208701615054565b9190910160060192915050565b600060ff83168061529d5761529d614fee565b8060ff84160491505092915050565b60ff818116838216029081169081811461504d5761504d614d1c565b62ffffff81811683821601908082111561504d5761504d614d1c565b60008160000b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80810361531957615319614d1c565b60000392915050565b6000815180845261533a816020860160208601615054565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60608152600061537f6060830186615322565b82810360208401526153918186615322565b905082810360408401526153a58185615322565b9695505050505050565b6040815260006153c26040830185615322565b82810360208401526153d48185615322565b95945050505050565b600083516153ef818460208801615054565b835190830190615403818360208801615054565b01949350505050565b60808152600061541f6080830187615322565b82810360208401526154318187615322565b905082810360408401526154458186615322565b905082810360608401526154598185615322565b979650505050505050565b6060815260006154776060830186615322565b82810360208401526154898186615322565b915050826040830152949350505050565b6060815260006154ad6060830186615322565b82810360208401526154bf8186615322565b91505073ffffffffffffffffffffffffffffffffffffffff83166040830152949350505050565b600381810b9083900b01637fffffff81137fffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000082121715613c6057613c60614d1c565b67ffffffffffffffff81811683821601908082111561504d5761504d614d1c565b60808152600061555c6080830187615322565b828103602084015261556e8187615322565b905073ffffffffffffffffffffffffffffffffffffffff8516604084015282810360608401526154598185615322565b7f5f75706461746543656c6c46726f6d4e65696768626f722020696e64657800008152600082516155d681601e850160208701615054565b91909101601e0192915050565b600181815b8085111561563c57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561562257615622614d1c565b8085161561562f57918102915b93841c93908002906155e8565b509250929050565b60008261565357506001613c60565b8161566057506000613c60565b816001811461567657600281146156805761569c565b6001915050613c60565b60ff84111561569157615691614d1c565b50506001821b613c60565b5060208310610133831016604e8410600b84101617156156bf575081810a613c60565b6156c983836155e3565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156156fb576156fb614d1c565b029392505050565b6000614ad960ff841683615644565b6000614ad98383615644565b600082810b9082900b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808112607f82131715613c6057613c60614d1c565b600081810b9083900b01607f81137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8082121715613c6057613c60614d1c565b7f4146544552205f75706461746543656c6c46726f6d4e65696768626f7220206981527f6e646578000000000000000000000000000000000000000000000000000000006020820152600082516157fa816024850160208701615054565b919091016024019291505056fe25732d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2da2646970667358221220ecda87f921969d7a103543fbe1ca369059783797101234648f7e52c1e086f7e364736f6c63430008140033",
      "deployedBytecode": "0x6080604052600436106100b15760003560e01c80638b8fc3a111610069578063afa1e2d11161004e578063afa1e2d114610173578063d401978314610188578063d67101121461019b57600080fd5b80638b8fc3a114610140578063ae37a62d1461016057600080fd5b80631fdd8a691161009a5780631fdd8a69146100eb5780634dd3ab2314610100578063599a71c61461012057600080fd5b80630a8bcdb9146100b657806310837a39146100d8575b600080fd5b3480156100c257600080fd5b506100d66100d13660046149d2565b6101bb565b005b6100d66100e6366004614a55565b6103f3565b3480156100f757600080fd5b506100d66106a1565b34801561010c57600080fd5b506100d661011b366004614abe565b6108d1565b34801561012c57600080fd5b506100d661013b366004614b2c565b610959565b34801561014c57600080fd5b506100d661015b366004614b9d565b610cb4565b6100d661016e366004614c12565b610db7565b34801561017f57600080fd5b506100d6610e36565b6100d6610196366004614c57565b610f45565b3480156101a757600080fd5b506100d66101b6366004614cef565b6112ce565b33600090815260036020526040812090806101d461150d565b845491935091507801000000000000000000000000000000000000000000000000900462ffffff161580159061023757508015806102375750825462ffffff83811678010000000000000000000000000000000000000000000000009092041614155b1561026e576040517f0aafb74c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600260205260409020546001850161028f57935060006102e5565b848110156102d8576040517f78fe52a600000000000000000000000000000000000000000000000000000000815260048101829052602481018690526044015b60405180910390fd5b6102e28582614d4b565b90505b3360008181526002602052604090819020839055517fa9059cbb00000000000000000000000000000000000000000000000000000000815260048101919091526024810186905273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af115801561038c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b09190614d5e565b50604080518681526020810183905233917ff7aeb382a1e87f84aa69637a22868c2e12be1261273f04cdf40a262a8b890031910160405180910390a25050505050565b3360009081526002602052604090205461040d8482614d7b565b33600081815260026020526040902082905590915061042d908683611658565b82351561053a5773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663d505accf33308635602088013561048960608a0160408b01614d8e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815273ffffffffffffffffffffffffffffffffffffffff95861660048201529490931660248501526044840191909152606483015260ff166084820152606086013560a4820152608086013560c482015260e401600060405180830381600087803b15801561052157600080fd5b505af1158015610535573d6000803e3d6000fd5b505050505b831561063a576040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018590527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906323b872dd906064016020604051808303816000875af11580156105d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fd9190614d5e565b50604080518581526020810183905233917f9705a8ff16374359785d31b0f1862c27f983645496f40760d180a9830eeaf2e8910160405180910390a25b73ffffffffffffffffffffffffffffffffffffffff82161561069a5760405173ffffffffffffffffffffffffffffffffffffffff8316903480156108fc02916000818181858888f19350505050158015610698573d6000803e3d6000fd5b505b5050505050565b336000908152600360205260408120906106b961150d565b5082549091507801000000000000000000000000000000000000000000000000900462ffffff16600003610719576040517f6599c9aa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815462ffffff80831678010000000000000000000000000000000000000000000000009092041603610777576040517f175868d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81547fffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffff168255336000908152600260205260408082208054929055517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610865573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108899190614d5e565b50604080518281526000602082015262ffffff84169133917f6337d70daadadd11f8be7f6e7b38e6c04d28710b1f2a2894bb14d8e3eaa8cdb6910160405180910390a3505050565b60408051600581830181815261010083019093526000928291816020015b60408051808201909152600080825260208201528152602001906001900390816108ef57505081526000602090910152905061092b818361189e565b6109557f000000000000000000000000000000000000000000000000000000000000000082611c8a565b5050565b73ffffffffffffffffffffffffffffffffffffffff851660009081526003602052604081209061098761150d565b5082549091507801000000000000000000000000000000000000000000000000900462ffffff1615806109de5750815462ffffff828116780100000000000000000000000000000000000000000000000090920416145b15610a15576040517f175868d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81546040805160208088028201810183528782528793610a76931b918a918a908690819060009085015b82821015610a6b57610a5c60408302860136819003810190614def565b81526020019060010190610a3f565b505050505087611d8d565b7fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000841615610b095760208114610ad8576040517fcc586b4500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82547fffffffffffffffff00000000000000000000000000000000000000000000000016604085901c178355610b30565b82547fffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffff1683555b33600090815260026020526040812080548792839291610b51908490614d4b565b90915550506040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610c0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2f9190614d5e565b50604080518281527fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008716602082015262ffffff85169173ffffffffffffffffffffffffffffffffffffffff8c16917f6337d70daadadd11f8be7f6e7b38e6c04d28710b1f2a2894bb14d8e3eaa8cdb6910160405180910390a3505050505050505050565b60408051808201909152819060009080610ccf846005614e71565b67ffffffffffffffff811115610ce757610ce7614db1565b604051908082528060200260200182016040528015610d2c57816020015b6040805180820190915260008082526020820152815260200190600190039081610d055790505b5081526020016000815250905060005b82811015610d8657610d7482868684818110610d5a57610d5a614e88565b9050602002016020810190610d6f9190614abe565b61189e565b80610d7e81614eb7565b915050610d3c565b50610db17f000000000000000000000000000000000000000000000000000000000000000082611c8a565b50505050565b33600081815260026020526040902054610dd391908490611658565b73ffffffffffffffffffffffffffffffffffffffff8116156109555760405173ffffffffffffffffffffffffffffffffffffffff8216903480156108fc02916000818181858888f19350505050158015610e31573d6000803e3d6000fd5b505050565b3360009081526003602052604081209080610e4f61150d565b9150915080610e8a576040517fdc12c97300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825462ffffff83811678010000000000000000000000000000000000000000000000009092041614610ee8576040517f0aafb74c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82547fffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffff16835560405162ffffff83169033907f619ef9650648da30c9647d0b77a0de24a51da0630c3533d54cc1eb3d798e1eaa90600090a3505050565b73ffffffffffffffffffffffffffffffffffffffff871660009081526003602052604081209080610f7461150d565b915091508015610fb0576040517f24f7f40f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82547801000000000000000000000000000000000000000000000000900462ffffff1660000361100c576040517f6599c9aa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825462ffffff8381167801000000000000000000000000000000000000000000000000909204161461106a576040517fd5b25b6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8254604080516020808b028201810183528a82526110cc9390921b918c91908c908c90819060009085015b828210156110c1576110b260408302860136819003810190614def565b81526020019060010190611095565b505050505089611d8d565b60006111388b848b8b808060200260200160405190810160405280939291908181526020016000905b828210156111215761111260408302860136819003810190614def565b815260200190600101906110f5565b505050505089611131578e611eb5565b6000611eb5565b845490915060401b7fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008816156111d357602089146111a2576040517fcc586b4500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffff00000000000000000000000000000000000000000000000016604089901c1785556111fa565b84547fffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffff1685555b8067ffffffffffffffff19168462ffffff168d73ffffffffffffffffffffffffffffffffffffffff167ffab312c5020dc7093e590463878dbfd0567314a7c155b164a60430ebcc7b38038d8d8d886040516112589493929190614f59565b60405180910390a473ffffffffffffffffffffffffffffffffffffffff8616156112c05760405173ffffffffffffffffffffffffffffffffffffffff8716903480156108fc02916000818181858888f193505050501580156112be573d6000803e3d6000fd5b505b505050505050505050505050565b811561095557336000908152600260205260409020546112ee8382614d7b565b336000908152600260205260409020819055905081351561140f5773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663d505accf33308535602087013561135e6060890160408a01614d8e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815273ffffffffffffffffffffffffffffffffffffffff95861660048201529490931660248501526044840191909152606483015260ff166084820152606085013560a4820152608085013560c482015260e401600060405180830381600087803b1580156113f657600080fd5b505af115801561140a573d6000803e3d6000fd5b505050505b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906323b872dd906064016020604051808303816000875af11580156114a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114cc9190614d5e565b50604080518481526020810183905233917f9705a8ff16374359785d31b0f1862c27f983645496f40760d180a9830eeaf2e8910160405180910390a2505050565b6000808061155b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000614d7b565b905060006115676123ef565b90507f00000000000000000000000000000000000000000000000000000000000000008110156115c3576040517f3a5f7b5700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006115ef7f000000000000000000000000000000000000000000000000000000000000000083614d4b565b90506115fb838261501d565b611606906002614d7b565b94507f000000000000000000000000000000000000000000000000000000000000000083611635600288615031565b62ffffff166116449190614e71565b61164e9083614d4b565b1093505050509091565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260408120908061168761150d565b91509150806116c2576040517fdc12c97300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82547801000000000000000000000000000000000000000000000000900462ffffff16158015906117185750825462ffffff83811678010000000000000000000000000000000000000000000000009092041614155b1561174f576040517f0aafb74c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825462ffffff83167801000000000000000000000000000000000000000000000000027fffffffffff000000000000000000000000000000000000000000000000000000909116604087901c171783557f0000000000000000000000000000000000000000000000000000000000000000841015611822576040517f78fe52a6000000000000000000000000000000000000000000000000000000008152600481018590527f000000000000000000000000000000000000000000000000000000000000000060248201526044016102cf565b6040517fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008616815262ffffff83169073ffffffffffffffffffffffffffffffffffffffff8816907fe3c45ded79e3db74b160b9a697d75f465f68d287a678532ed0a9fb691553b93d9060200160405180910390a3505050505050565b60006118a861150d565b50905060006118b783836124c5565b905061192a60006118cc8462ffffff16612623565b6040516020016118dc9190615078565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291815267ffffffffffffffff8716600090815260016020522054869085906126e1565b60c0810151606082015160ff161580156119495750815162ffffff1615155b156119785761195b8260a00151612b2c565b60048360a0015160ff16901b61197191906150bd565b6000835290505b60008061199086868660400151876040015187612b5e565b9094509250505060ff821615611a1e57611a1e8760405180604001604052806119cf8a67ffffffffffffffff1660009081526001602052604090205490565b73ffffffffffffffffffffffffffffffffffffffff168152602001611a177f000000000000000000000000000000000000000000000000000000000000000060ff8816614e71565b9052612f24565b60005b60048160ff161015611ae35760008260ff831660048110611a4457611a44614e88565b602002015173ffffffffffffffffffffffffffffffffffffffff1614611ad157611ad1886040518060400160405280858560ff1660048110611a8857611a88614e88565b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020017f0000000000000000000000000000000000000000000000000000000000000000815250612f24565b80611adb816150d6565b915050611a21565b50600060c0850181905267ffffffffffffffff871681526020818152604091829020865181549288015162ffffff9081166301000000027fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000009094169116179190911780825591860151869282907fffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffff166601000000000000836006811115611b8c57611b8c614eef565b021790555060608201518154608084015160a085015160c0909501517fffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff90921667010000000000000060ff948516027fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16176801000000000000000091841691909102177fffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffff166901000000000000000000948316949094027fffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffff16939093176a0100000000000000000000919093160291909117905550505050505050565b60005b8160200151811015610e31578273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83600001518381518110611ccb57611ccb614e88565b60200260200101516000015184600001518481518110611ced57611ced614e88565b6020026020010151602001516040518363ffffffff1660e01b8152600401611d3792919073ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6020604051808303816000875af1158015611d56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7a9190614d5e565b5080611d8581614eb7565b915050611c8d565b7fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000811615611e39576000838383604051602001611dcc9392919061514f565b6040516020818303038152906040528051906020012090508067ffffffffffffffff19168567ffffffffffffffff191614611e33576040517fd13415b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610db1565b60008383604051602001611e4e92919061519a565b6040516020818303038152906040528051906020012090508067ffffffffffffffff19168567ffffffffffffffff19161461069a576040517fd13415b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080604051806040016040528085516005611ed19190614e71565b67ffffffffffffffff811115611ee957611ee9614db1565b604051908082528060200260200182016040528015611f2e57816020015b6040805180820190915260008082526020820152815260200190600190039081611f075790505b50815260200160008152509050611f5f60405180606001604052806000815260200160008152602001600081525090565b60005b8551811015611ff6576000806000611f95868c8c8c8881518110611f8857611f88614e88565b6020026020010151613076565b9250925092508285600001818151611fad9190614d7b565b905250602085018051839190611fc4908390614d7b565b905250604085018051829190611fdb908390614d7b565b905250839250611fee9150829050614eb7565b915050611f62565b5061203860006040518060400160405280600c81526020017f7265736f6c76654d6f7665730000000000000000000000000000000000000000815250846136f9565b6120627f000000000000000000000000000000000000000000000000000000000000000083611c8a565b73ffffffffffffffffffffffffffffffffffffffff871660009081526002602090815260409091205490820151825191945061209d91614d7b565b8310156120f1576020810151815184916120b691614d7b565b6040517f78fe52a6000000000000000000000000000000000000000000000000000000008152600481019290925260248201526044016102cf565b73ffffffffffffffffffffffffffffffffffffffff8416612156576020810151815161211d9190614d7b565b6121279084614d4b565b73ffffffffffffffffffffffffffffffffffffffff881660009081526002602052604090208190559250612318565b8051156122235780516040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015230602483015260448201929092527f0000000000000000000000000000000000000000000000000000000000000000909116906323b872dd906064016020604051808303816000875af11580156121fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122219190614d5e565b505b6020810151156123185760208101516040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301527f00000000000000000000000000000000000000000000000000000000000000008116602483015260448201929092527f0000000000000000000000000000000000000000000000000000000000000000909116906323b872dd906064016020604051808303816000875af11580156122f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123169190614d5e565b505b6040810151156123e55760408181015190517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff898116600483015260248201929092527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af11580156123bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123e39190614d5e565b505b5050949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661243157504290565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b80777ea6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561249c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124c091906151b3565b905090565b6040805160e0808201835260008083526020808401829052838501829052606084018290526080840182905260a0840182905260c0840182905267ffffffffffffffff871682528181529084902084519283018552805462ffffff808216855263010000008204169284019290925292939192918301906601000000000000900460ff16600681111561255a5761255a614eef565b600681111561256b5761256b614eef565b8152905460ff67010000000000000082048116602084015268010000000000000000820460000b60408401526901000000000000000000820481166060808501919091526a010000000000000000000090920416608092830152825191830151908301519293509091600162ffffff8416108015906125ed575060008160ff16115b1561261a57600080612606858760a0015186868b61390f565b60ff909116606088015262ffffff16865250505b50505092915050565b6060600061263083613b83565b600101905060008167ffffffffffffffff81111561265057612650614db1565b6040519080825280601f01601f19166020018201604052801561267a576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461268457509392505050565b600060ff8616156127b3578560ff16600114612778578560ff1660021461273d576040518060400160405280600c81526020017f20202020202020202020202000000000000000000000000000000000000000008152506127c4565b6040518060400160405280600881526020017f20202020202020200000000000000000000000000000000000000000000000008152506127c4565b6040518060400160405280600481526020017f20202020000000000000000000000000000000000000000000000000000000008152506127c4565b604051806020016040528060008152505b90506128066040518060400160405280600481526020017f25732573000000000000000000000000000000000000000000000000000000008152508287613c66565b6040805160608101909152603f80825263ffffffff86811692602088811c90921692612839926158089083013984613cf9565b6128906040518060400160405280600e81526020017f257363656c6c202825732c2573290000000000000000000000000000000000008152508461287f8560030b613d8a565b61288b8560030b613d8a565b613e18565b6128b26040518060600160405280603f8152602001615808603f913984613cf9565b6128fb6040518060400160405280601981526020017f2573202d206c61737445706f63685570646174653a202025730000000000000081525084876000015162ffffff16613ead565b6129446040518060400160405280601f81526020017f2573202d2065706f63685768656e546f6b656e497341646465643a202025730081525084876020015162ffffff16613ead565b61299c6040518060400160405280600f81526020017f2573202d20636f6c6f723a202025730000000000000000000000000000000000815250848760400151600681111561299457612994614eef565b60ff16613ead565b6129e36040518060400160405280600e81526020017f2573202d206c6966653a2020257300000000000000000000000000000000000081525084876060015160ff16613ead565b612a2a6040518060400160405280601681526020017f2573202d20646973747269627574696f6e3a2020257300000000000000000000815250848760c0015160ff16613ead565b612a6a6040518060400160405280600f81526020017f2573202d206f776e65723a2020257300000000000000000000000000000000008152508486613f40565b612ab96040518060400160405280600e81526020017f2573202d2064656c74613a20257300000000000000000000000000000000000081525084612ab4886080015160000b613d8a565b613c66565b612b006040518060400160405280601281526020017f2573202d20656e656d794d61703a202025730000000000000000000000000000815250848760a0015160ff16613ead565b612b226040518060600160405280603f8152602001615808603f913984613cf9565b5050505050505050565b60005b60ff821615612b5957612b436001836151cc565b9091169080612b51816150d6565b915050612b2f565b919050565b6000806000612b6b6149b4565b612baa6040518060400160405280600481526020017f66726f6d000000000000000000000000000000000000000000000000000000008152508a613fd3565b60008080612be367ffffffffffffffff8d16827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61402f565b9050612c246040518060400160405280600a81526020017f7570506f736974696f6e0000000000000000000000000000000000000000000081525082613fd3565b612c32818c60028d8d61407f565b9093509150600083810b1215612c49578560011795505b93810193600488811c81169003612c8d5767ffffffffffffffff811660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1684525b50948101946000612cc967ffffffffffffffff8d167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8361402f565b9050612d0a6040518060400160405280600c81526020017f6c656674506f736974696f6e000000000000000000000000000000000000000081525082613fd3565b612d18818c60038d8d61407f565b9093509150600083810b1215612d2f578560021795505b938101936008600489901c81169003612d785767ffffffffffffffff811660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1660208501525b50948101946000612d9567ffffffffffffffff8d1682600161402f565b9050612dd66040518060400160405280600c81526020017f646f776e506f736974696f6e000000000000000000000000000000000000000081525082613fd3565b612de4818c60008d8d61407f565b9093509150600083810b1215612dfb578560041795505b938101936001600489901c81169003612e445767ffffffffffffffff811660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1660408501525b50948101946000612e6167ffffffffffffffff8d1660018361402f565b9050612ea26040518060400160405280600d81526020017f7269676874506f736974696f6e0000000000000000000000000000000000000081525082613fd3565b612eb0818c60018d8d61407f565b9093509150600083810b1215612ec7578560081795505b938101936002600489901c81169003612f105767ffffffffffffffff811660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1660608501525b828701965050505095509550955095915050565b60005b8260200151811015612fd657816000015173ffffffffffffffffffffffffffffffffffffffff1683600001518281518110612f6457612f64614e88565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1603612fc45760208201518351805183908110612fa457612fa4614e88565b6020026020010151602001818151612fbc9190614d7b565b905250505050565b80612fce81614eb7565b915050612f27565b5080518251602084015181518110612ff057612ff0614e88565b60200260200101516000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508060200151826000015183602001518151811061304d5761304d614e88565b6020026020010151602001818152505081602001805180919061306f90614eb7565b9052505050565b60008060008061308a8560000151876124c5565b9050613100600061309f8862ffffff16612623565b6040516020016130af91906151e5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152885167ffffffffffffffff811660009081526001602052919091205485906126e1565b60c0810151606082015160ff1615801561311f5750815162ffffff1615155b1561314e576131318260a00151612b2c565b60048360a0015160ff16901b61314791906150bd565b6000835290505b60008660200151600681111561316657613166614eef565b0361327a577f000000000000000000000000000000000000000000000000000000000000000060ff16826060015160ff161415806131eb5750855167ffffffffffffffff1660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff89169073ffffffffffffffffffffffffffffffffffffffff1614155b15613221576000807f000000000000000000000000000000000000000000000000000000000000000094509450945050506136ef565b6132758960405180604001604052808b73ffffffffffffffffffffffffffffffffffffffff1681526020017f0000000000000000000000000000000000000000000000000000000000000000815250612f24565b6132d9565b8662ffffff16826020015162ffffff16036132d957606082015160ff16156132a857600660208701526132d9565b6000807f000000000000000000000000000000000000000000000000000000000000000094509450945050506136ef565b6000806132ed8b898b876040015187614279565b915091508973ffffffffffffffffffffffffffffffffffffffff16886000015167ffffffffffffffff167f17b85ded3fb12432ee427abc34a3026e1fbbb8bc431e3dbe51bc81215655c25c86604001518b6020015160405161335092919061522a565b60405180910390a387602001518460400190600681111561337357613373614eef565b9081600681111561338657613386614eef565b905250600060c0850181905262ffffff8a166020860152846040015160068111156133b3576133b3614eef565b03613412576000606085018190528085526080850181905260a08501819052885167ffffffffffffffff168152600160205260408120557f000000000000000000000000000000000000000000000000000000000000000094506134de565b60ff811660a0850152600082900b60808501526001606085015262ffffff891684527f0000000000000000000000000000000000000000000000000000000000000000965060068460400151600681111561346f5761346f614eef565b036134aa57875167ffffffffffffffff16600090815260016020526040902073ffffffffffffffffffffffffffffffffffffffff90556134de565b875167ffffffffffffffff16600090815260016020526040902073ffffffffffffffffffffffffffffffffffffffff8b1690555b875167ffffffffffffffff1660009081526020818152604091829020865181549288015162ffffff9081166301000000027fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000009094169116179190911780825591860151869282907fffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffff16660100000000000083600681111561358157613581614eef565b021790555060608201518154608084015160a085015160c0909501517fffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff90921667010000000000000060ff948516027fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16176801000000000000000091841691909102177fffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffff166901000000000000000000948316949094027fffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffff16939093176a010000000000000000000091909316029190911790556136ea600061368962ffffff8c16612623565b6040516020016136999190615245565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181528b5167ffffffffffffffff811660009081526001602052919091205488906126e1565b505050505b9450945094915050565b600060ff8416156137cb578360ff16600114613790578360ff16600214613755576040518060400160405280600c81526020017f20202020202020202020202000000000000000000000000000000000000000008152506137dc565b6040518060400160405280600881526020017f20202020202020200000000000000000000000000000000000000000000000008152506137dc565b6040518060400160405280600481526020017f20202020000000000000000000000000000000000000000000000000000000008152506137dc565b604051806020016040528060008152505b905061381e6040518060400160405280600481526020017f25732573000000000000000000000000000000000000000000000000000000008152508285613c66565b6138406040518060600160405280603f8152602001615808603f913982613cf9565b60005b82602001518110156138ec576138da6040518060400160405280601281526020017f25737472616e73666572202825732c2573290000000000000000000000000000815250838560000151848151811061389f5761389f614e88565b6020026020010151600001516138d5876000015186815181106138c4576138c4614e88565b602002602001015160200151612623565b614412565b806138e481614eb7565b915050613843565b50610db16040518060600160405280603f8152602001615808603f913982613cf9565b600085600162ffffff82161080159061392b575060008460ff16115b15613b7957600061393c8885615031565b62ffffff1690508015613b705760008660000b60000361397c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61397e565b865b905060008160000b128015613994575060ff8816155b1561399d575060005b60008160000b1315613ac1577f000000000000000000000000000000000000000000000000000000000000000060ff168660ff161015613ab657600081600181613a078a7f00000000000000000000000000000000000000000000000000000000000000006151cc565b613a1191906150bd565b613a1b91906151cc565b613a25919061528a565b90508060ff16831115613a39578060ff1692505b613a4382846152ac565b613a4d90886150bd565b96507f000000000000000000000000000000000000000000000000000000000000000060ff168760ff161115613aa1577f000000000000000000000000000000000000000000000000000000000000000096505b869450613aae838b6152c8565b935050613b6a565b859350889250613b6a565b60008160000b1215613b63576000613ad8826152e4565b6001613ae3846152e4565b613aed908a6150bd565b613af791906151cc565b613b01919061528a565b90508060ff16831115613b15578060ff1692505b6000613b20836152e4565b613b2a90856152ac565b90508760ff168160ff161115613b435760009550613b50565b613b4d81896151cc565b95505b613b5a848c6152c8565b94505050613b6a565b8593508492505b50613b77565b8492508791505b505b9550959350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310613bcc577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310613bf8576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310613c1657662386f26fc10000830492506010015b6305f5e1008310613c2e576305f5e100830492506008015b6127108310613c4257612710830492506004015b60648310613c54576064830492506002015b600a8310613c60576001015b92915050565b610e31838383604051602401613c7e9392919061536c565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f2ced7cef000000000000000000000000000000000000000000000000000000001790526144a3565b6109558282604051602401613d0f9291906153af565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f4b5c4277000000000000000000000000000000000000000000000000000000001790526144a3565b606060008212613da95760405180602001604052806000815250613de0565b6040518060400160405280600181526020017f2d000000000000000000000000000000000000000000000000000000000000008152505b613df1613dec846144af565b612623565b604051602001613e029291906153dd565b6040516020818303038152906040529050919050565b610db184848484604051602401613e32949392919061540c565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fde68f20a000000000000000000000000000000000000000000000000000000001790526144a3565b610e31838383604051602401613ec593929190615464565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f5821efa1000000000000000000000000000000000000000000000000000000001790526144a3565b610e31838383604051602401613f589392919061549a565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f95ed0195000000000000000000000000000000000000000000000000000000001790526144a3565b60008063ffffffff80841690602085901c1691509150610db16040518060400160405280600b81526020017f25733a202825732c2573290000000000000000000000000000000000000000008152508561287f8560030b613d8a565b60006140418363ffffffff86166154e6565b92506140578263ffffffff602087901c166154e6565b915061407763ffffffff841667ffffffff00000000602085901b16615528565b949350505050565b67ffffffffffffffff8516600090815260208181526040808320815160e081018352815462ffffff8082168352630100000082041694820194909452849384939192918301906601000000000000900460ff1660068111156140e3576140e3614eef565b60068111156140f4576140f4614eef565b8152905460ff670100000000000000820481166020840152680100000000000000008204600090810b60408086019190915269010000000000000000008404831660608601526a0100000000000000000000909304909116608090930192909252825190830151929350919081600681111561417257614172614eef565b146141cc5785600681111561418957614189614eef565b81600681111561419b5761419b614eef565b146141c6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6141c9565b60015b94505b60018262ffffff16101580156141f4575060008160068111156141f1576141f1614eef565b14155b1561426c576000836060015160ff1611801561421957508862ffffff168262ffffff16105b156142565760008061423a848660a00151876080015188606001518f61390f565b9150915061424d8c8684848e8e8e6144c6565b9550505061426c565b6142698a8485606001518c8c8c8c6144c6565b93505b5050509550959350505050565b6000806000806000806142978a600001518a8a8d602001518b612b5e565b935093509350935060008260ff161115614332576143328b60405180604001604052806142de8e6000015167ffffffffffffffff1660009081526001602052604090205490565b73ffffffffffffffffffffffffffffffffffffffff168152602001600c6143287f000000000000000000000000000000000000000000000000000000000000000060ff8916614e71565b611a17919061501d565b60005b60048160ff1610156144005760008260ff83166004811061435857614358614e88565b602002015173ffffffffffffffffffffffffffffffffffffffff16146143ee576143ee8c6040518060400160405280858560ff166004811061439c5761439c614e88565b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020018b600f1660ff167f0000000000000000000000000000000000000000000000000000000000000000611a17919061501d565b806143f8816150d6565b915050614335565b50929a91995090975050505050505050565b610db18484848460405160240161442c9493929190615549565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167feb1bff80000000000000000000000000000000000000000000000000000000001790525b6144ac81614993565b50565b6000808212156144c25781600003613c60565b5090565b600080876060015160ff161180156144df575060ff8616155b15614510576144f18760a00151612b2c565b60048860a0015160ff16901b61450791906150bd565b60ff1660c08801525b61457f60006145218660ff16612623565b604051602001614531919061559e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291815267ffffffffffffffff8c166000908152600160205220548b908b906126e1565b61458a846002615703565b614595856002615703565b60c089015160041c16600f16036145fd5760c08701516145b990600f16600c61528a565b60c0880151909150600f1660046145d460ff87166002615712565b1960048a60c0015160ff16901c60ff161660ff16901b6145f491906150bd565b60ff1660c08801525b81600681111561460f5761460f614eef565b83600681111561462157614621614eef565b146147bd57600082600681111561463a5761463a614eef565b036146c15782600681111561465157614651614eef565b8760400151600681111561466757614667614eef565b0361468a5760018760800181815161467f919061571e565b60000b9052506147bd565b60018760800181815161469d919061575d565b60000b90525060a087018051600160ff8781169190911b81189091161690526147bd565b8260068111156146d3576146d3614eef565b876040015160068111156146e9576146e9614eef565b0361471a5760a087018051600160ff8781169190911b9091171690526080870180516002919061467f90839061571e565b81600681111561472c5761472c614eef565b8760400151600681111561474257614742614eef565b0361477357600083600681111561475b5761475b614eef565b1461468a5760028760800181815161469d919061575d565b600083600681111561478757614787614eef565b036147bd5760018760800181815161479f919061571e565b60000b90525060a087018051600160ff8781169190911b9091171690525b62ffffff8516875260ff80871660608901526147f1906000906147e1908716612623565b604051602001614531919061579c565b67ffffffffffffffff88166000908152602081815260409182902089518154928b015162ffffff9081166301000000027fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000009094169116179190911780825591890151899282907fffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffff16660100000000000083600681111561489357614893614eef565b021790555060608201518154608084015160a085015160c0909501517fffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff90921667010000000000000060ff948516027fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16176801000000000000000091841691909102177fffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffff166901000000000000000000948316949094027fffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffff16939093176a01000000000000000000009190931602919091179055979650505050505050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b60405180608001604052806004906020820280368337509192915050565b6000602082840312156149e457600080fd5b5035919050565b80357fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000081168114612b5957600080fd5b600060a08284031215614a2d57600080fd5b50919050565b73ffffffffffffffffffffffffffffffffffffffff811681146144ac57600080fd5b6000806000806101008587031215614a6c57600080fd5b614a75856149eb565b935060208501359250614a8b8660408701614a1b565b915060e0850135614a9b81614a33565b939692955090935050565b803567ffffffffffffffff81168114612b5957600080fd5b600060208284031215614ad057600080fd5b614ad982614aa6565b9392505050565b60008083601f840112614af257600080fd5b50813567ffffffffffffffff811115614b0a57600080fd5b6020830191508360208260061b8501011115614b2557600080fd5b9250929050565b600080600080600060808688031215614b4457600080fd5b8535614b4f81614a33565b945060208601359350604086013567ffffffffffffffff811115614b7257600080fd5b614b7e88828901614ae0565b9094509250614b919050606087016149eb565b90509295509295909350565b60008060208385031215614bb057600080fd5b823567ffffffffffffffff80821115614bc857600080fd5b818501915085601f830112614bdc57600080fd5b813581811115614beb57600080fd5b8660208260051b8501011115614c0057600080fd5b60209290920196919550909350505050565b60008060408385031215614c2557600080fd5b614c2e836149eb565b91506020830135614c3e81614a33565b809150509250929050565b80151581146144ac57600080fd5b600080600080600080600060c0888a031215614c7257600080fd5b8735614c7d81614a33565b965060208801359550604088013567ffffffffffffffff811115614ca057600080fd5b614cac8a828b01614ae0565b9096509450614cbf9050606089016149eb565b92506080880135614ccf81614c49565b915060a0880135614cdf81614a33565b8091505092959891949750929550565b60008060c08385031215614d0257600080fd5b82359150614d138460208501614a1b565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115613c6057613c60614d1c565b600060208284031215614d7057600080fd5b8151614ad981614c49565b80820180821115613c6057613c60614d1c565b600060208284031215614da057600080fd5b813560ff81168114614ad957600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b803560078110612b5957600080fd5b600060408284031215614e0157600080fd5b6040516040810181811067ffffffffffffffff82111715614e4b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604052614e5783614aa6565b8152614e6560208401614de0565b60208201529392505050565b8082028115828204841417613c6057613c60614d1c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614ee857614ee8614d1c565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60078110614f55577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6060808252810184905260008560808301825b87811015614fb75767ffffffffffffffff614f8684614aa6565b1682526020614f96818501614de0565b614fa282850182614f1e565b50506040928301929190910190600101614f6c565b507fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000095909516602084015250506040015292915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261502c5761502c614fee565b500490565b62ffffff82811682821603908082111561504d5761504d614d1c565b5092915050565b60005b8381101561506f578181015183820152602001615057565b50506000910152565b7f5f706f6b652061742065706f63682000000000000000000000000000000000008152600082516150b081600f850160208701615054565b91909101600f0192915050565b60ff8181168382160190811115613c6057613c60614d1c565b600060ff821660ff81036150ec576150ec614d1c565b60010192915050565b600081518084526020808501945080840160005b83811015615144578151805167ffffffffffffffff16885283015161513084890182614f1e565b506040969096019590820190600101615109565b509495945050505050565b83815260606020820152600061516860608301856150f5565b90507fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000083166040830152949350505050565b82815260406020820152600061407760408301846150f5565b6000602082840312156151c557600080fd5b5051919050565b60ff8281168282160390811115613c6057613c60614d1c565b7f5f636f6d707574654d6f76652061742065706f6368200000000000000000000081526000825161521d816016850160208701615054565b9190910160160192915050565b604081016152388285614f1e565b614ad96020830184614f1e565b7f414654455220000000000000000000000000000000000000000000000000000081526000825161527d816006850160208701615054565b9190910160060192915050565b600060ff83168061529d5761529d614fee565b8060ff84160491505092915050565b60ff818116838216029081169081811461504d5761504d614d1c565b62ffffff81811683821601908082111561504d5761504d614d1c565b60008160000b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80810361531957615319614d1c565b60000392915050565b6000815180845261533a816020860160208601615054565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60608152600061537f6060830186615322565b82810360208401526153918186615322565b905082810360408401526153a58185615322565b9695505050505050565b6040815260006153c26040830185615322565b82810360208401526153d48185615322565b95945050505050565b600083516153ef818460208801615054565b835190830190615403818360208801615054565b01949350505050565b60808152600061541f6080830187615322565b82810360208401526154318187615322565b905082810360408401526154458186615322565b905082810360608401526154598185615322565b979650505050505050565b6060815260006154776060830186615322565b82810360208401526154898186615322565b915050826040830152949350505050565b6060815260006154ad6060830186615322565b82810360208401526154bf8186615322565b91505073ffffffffffffffffffffffffffffffffffffffff83166040830152949350505050565b600381810b9083900b01637fffffff81137fffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000082121715613c6057613c60614d1c565b67ffffffffffffffff81811683821601908082111561504d5761504d614d1c565b60808152600061555c6080830187615322565b828103602084015261556e8187615322565b905073ffffffffffffffffffffffffffffffffffffffff8516604084015282810360608401526154598185615322565b7f5f75706461746543656c6c46726f6d4e65696768626f722020696e64657800008152600082516155d681601e850160208701615054565b91909101601e0192915050565b600181815b8085111561563c57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561562257615622614d1c565b8085161561562f57918102915b93841c93908002906155e8565b509250929050565b60008261565357506001613c60565b8161566057506000613c60565b816001811461567657600281146156805761569c565b6001915050613c60565b60ff84111561569157615691614d1c565b50506001821b613c60565b5060208310610133831016604e8410600b84101617156156bf575081810a613c60565b6156c983836155e3565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156156fb576156fb614d1c565b029392505050565b6000614ad960ff841683615644565b6000614ad98383615644565b600082810b9082900b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808112607f82131715613c6057613c60614d1c565b600081810b9083900b01607f81137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8082121715613c6057613c60614d1c565b7f4146544552205f75706461746543656c6c46726f6d4e65696768626f7220206981527f6e646578000000000000000000000000000000000000000000000000000000006020820152600082516157fa816024850160208701615054565b919091016024019291505056fe25732d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2da2646970667358221220ecda87f921969d7a103543fbe1ca369059783797101234648f7e52c1e086f7e364736f6c63430008140033",
      "linkReferences": {},
      "deployedLinkReferences": {},
      "devdoc": {
        "errors": {
          "ReserveTooLow(uint256,uint256)": [
            {
              "params": {
                "expected": "amount required to proceed",
                "inReserve": "amount in reserver as the time of the call"
              }
            }
          ]
        },
        "events": {
          "CommitmentCancelled(address,uint24)": {
            "params": {
              "epoch": "epoch number on which this commit belongs to",
              "player": "account taking the staking risk (can be a different account than the one controlling the gems)"
            }
          },
          "CommitmentMade(address,uint24,bytes24)": {
            "params": {
              "commitmentHash": "the hash of moves",
              "epoch": "epoch number on which this commit belongs to",
              "player": "account taking the staking risk (can be a different account than the one controlling the gems)"
            }
          },
          "CommitmentRevealed(address,uint24,bytes24,(uint64,uint8)[],bytes24,uint256)": {
            "params": {
              "commitmentHash": "the hash of the moves",
              "epoch": "epoch number on which this commit belongs to",
              "furtherMoves": "hash of further moves, unless bytes32(0) which indicate end.",
              "moves": "the moves",
              "player": "account who commited"
            }
          },
          "CommitmentVoid(address,uint24,uint256,bytes24)": {
            "params": {
              "amountBurnt": "amount of token to burn",
              "epoch": "epoch number on which this commit belongs to",
              "furtherMoves": "hash of further moves, unless bytes32(0) which indicate end.",
              "player": "the account that made the commitment"
            }
          },
          "MoveProcessed(uint64,address,uint8,uint8)": {
            "params": {
              "newColor": "color that takes over",
              "oldColor": "previous color of the cell",
              "player": "account making the move",
              "position": "cell at which the move take place"
            }
          },
          "ReserveDeposited(address,uint256,uint256)": {
            "params": {
              "amountDeposited": "the number of tokens deposited",
              "newAmount": "the number of tokens in reserver as a result",
              "player": "account receiving the token in the reserve"
            }
          },
          "ReserveWithdrawn(address,uint256,uint256)": {
            "params": {
              "amountWithdrawn": "the number of tokens withdrawnn",
              "newAmount": "the number of tokens in reserver as a result",
              "player": "account withdrawing the tokens"
            }
          }
        },
        "kind": "dev",
        "methods": {
          "acknowledgeMissedReveal(address,bytes32,(uint64,uint8)[],bytes24)": {
            "params": {
              "furtherMoves": "if moves cannot be contained in one tx, further moves are represented by a hash to reveal too",
              "moves": "the actual moves",
              "player": "the account who committed the move",
              "secret": "the secret used to make the commit"
            }
          },
          "addToReserve(uint256,(uint256,uint256,uint8,bytes32,bytes32))": {
            "params": {
              "permit": "permit EIP2612, .value = zero if not needed",
              "tokensAmountToAdd": "amount of tokens to add"
            }
          },
          "makeCommitment(bytes24,address)": {
            "params": {
              "commitmentHash": "the hash of the moves",
              "payee": "address to send ETH to along the commitment. Can be used to pay for reveal"
            }
          },
          "makeCommitmentWithExtraReserve(bytes24,uint256,(uint256,uint256,uint8,bytes32,bytes32),address)": {
            "params": {
              "commitmentHash": "the has of the moves",
              "payee": "address to send ETH to along the commitment. Can be used to pay for reveal",
              "permit": "permit EIP2612, value = zero if not needed",
              "tokensAmountToAdd": "amount of tokens to add to the reserve. the resulting total must be enough to cover the moves"
            }
          },
          "poke(uint64)": {
            "params": {
              "position": "the cell position"
            }
          },
          "pokeMultiple(uint64[])": {
            "params": {
              "positions": "cell positions to collect from"
            }
          },
          "reveal(address,bytes32,(uint64,uint8)[],bytes24,bool,address)": {
            "params": {
              "furtherMoves": "if moves cannot be contained in one tx, further moves are represented by a hash to reveal too  Note that you have to that have enough moves (specified by MAX_NUM_MOVES_PER_HASH = 32)",
              "moves": "the actual moves",
              "payee": "address to send ETH to along the reveal",
              "player": "the account who committed the move",
              "secret": "the secret used to make the commit",
              "useReserve": "whether the tokens are taken from the reserve or from approvals.  This allow player to keep their reserve intact and use it on their next move.  Note that this require the Stratagems contract to have enough allowance."
            }
          },
          "withdrawFromReserve(uint256)": {
            "params": {
              "amount": "number of tokens to withdraw"
            }
          }
        },
        "version": 1
      },
      "evm": {
        "bytecode": {
          "functionDebugData": {
            "@_12748": {
              "entryPoint": null,
              "id": 12748,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@_14780": {
              "entryPoint": null,
              "id": 14780,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@_15398": {
              "entryPoint": null,
              "id": 15398,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@_16622": {
              "entryPoint": null,
              "id": 16622,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "abi_decode_contract_IERC20WithIERC2612_fromMemory": {
              "entryPoint": 143,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_struct$_Config_$12665_memory_ptr_fromMemory": {
              "entryPoint": 190,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_uint8_fromMemory": {
              "entryPoint": 172,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            }
          },
          "generatedSources": [
            {
              "ast": {
                "nodeType": "YulBlock",
                "src": "0:1519:48",
                "statements": [
                  {
                    "nodeType": "YulBlock",
                    "src": "6:3:48",
                    "statements": []
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "94:117:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "104:22:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "119:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "113:5:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "113:13:48"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "104:5:48"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "189:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "198:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "201:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "191:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "191:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "191:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "148:5:48"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "159:5:48"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "174:3:48",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "179:1:48",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "170:3:48"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "170:11:48"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "183:1:48",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "166:3:48"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "166:19:48"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "155:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "155:31:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "145:2:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "145:42:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "138:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "138:50:48"
                          },
                          "nodeType": "YulIf",
                          "src": "135:70:48"
                        }
                      ]
                    },
                    "name": "abi_decode_contract_IERC20WithIERC2612_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "73:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "84:5:48",
                        "type": ""
                      }
                    ],
                    "src": "14:197:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "274:102:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "284:22:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "299:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "293:5:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "293:13:48"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "284:5:48"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "354:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "363:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "366:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "356:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "356:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "356:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "328:5:48"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "339:5:48"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "346:4:48",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "335:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "335:16:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "325:2:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "325:27:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "318:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "318:35:48"
                          },
                          "nodeType": "YulIf",
                          "src": "315:55:48"
                        }
                      ]
                    },
                    "name": "abi_decode_uint8_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "253:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "264:5:48",
                        "type": ""
                      }
                    ],
                    "src": "216:160:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "487:1030:48",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "497:13:48",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "507:3:48",
                            "type": "",
                            "value": "256"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "501:2:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "555:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "564:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "567:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "557:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "557:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "557:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "530:7:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "539:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "526:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "526:23:48"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "551:2:48"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "522:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "522:32:48"
                          },
                          "nodeType": "YulIf",
                          "src": "519:52:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "580:23:48",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "600:2:48",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "594:5:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "594:9:48"
                          },
                          "variables": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulTypedName",
                              "src": "584:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "612:33:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "634:6:48"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "642:2:48"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "630:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "630:15:48"
                          },
                          "variables": [
                            {
                              "name": "newFreePtr",
                              "nodeType": "YulTypedName",
                              "src": "616:10:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "728:111:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "749:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "756:3:48",
                                          "type": "",
                                          "value": "224"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "761:10:48",
                                          "type": "",
                                          "value": "0x4e487b71"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "752:3:48"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "752:20:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "742:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "742:31:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "742:31:48"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "793:1:48",
                                      "type": "",
                                      "value": "4"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "796:4:48",
                                      "type": "",
                                      "value": "0x41"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "786:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "786:15:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "786:15:48"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "821:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "824:4:48",
                                      "type": "",
                                      "value": "0x24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "814:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "814:15:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "814:15:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "663:10:48"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "683:2:48",
                                            "type": "",
                                            "value": "64"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "687:1:48",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "679:3:48"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "679:10:48"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "691:1:48",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "675:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "675:18:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "660:2:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "660:34:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "699:10:48"
                                  },
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "711:6:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "696:2:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "696:22:48"
                              }
                            ],
                            "functionName": {
                              "name": "or",
                              "nodeType": "YulIdentifier",
                              "src": "657:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "657:62:48"
                          },
                          "nodeType": "YulIf",
                          "src": "654:185:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "855:2:48",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "859:10:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "848:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "848:22:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "848:22:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "886:6:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "944:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_contract_IERC20WithIERC2612_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "894:49:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "894:60:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "879:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "879:76:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "879:76:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "975:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "983:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "971:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "971:15:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1042:9:48"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1053:2:48",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1038:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1038:18:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_contract_IERC20WithIERC2612_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "988:49:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "988:69:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "964:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "964:94:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "964:94:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1078:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1086:2:48",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1074:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1074:15:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1101:9:48"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1112:2:48",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1097:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1097:18:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1091:5:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1091:25:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "1067:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1067:50:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1067:50:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1137:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1145:2:48",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1133:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1133:15:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1160:9:48"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1171:2:48",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1156:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1156:18:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1150:5:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1150:25:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "1126:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1126:50:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1126:50:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1196:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1204:3:48",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1192:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1192:16:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1220:9:48"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1231:3:48",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1216:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1216:19:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1210:5:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1210:26:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "1185:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1185:52:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1185:52:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1257:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1265:3:48",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1253:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1253:16:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1303:9:48"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1314:3:48",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1299:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1299:19:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint8_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1271:27:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1271:48:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "1246:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1246:74:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1246:74:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1340:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1348:3:48",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1336:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1336:16:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1364:9:48"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1375:3:48",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1360:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1360:19:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1354:5:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1354:26:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "1329:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1329:52:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1329:52:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1401:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1409:3:48",
                                    "type": "",
                                    "value": "224"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1397:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1397:16:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1469:9:48"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1480:3:48",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1465:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1465:19:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_contract_IERC20WithIERC2612_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1415:49:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1415:70:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "1390:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1390:96:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1390:96:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1495:16:48",
                          "value": {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1505:6:48"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1495:6:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_struct$_Config_$12665_memory_ptr_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "453:9:48",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "464:7:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "476:6:48",
                        "type": ""
                      }
                    ],
                    "src": "381:1136:48"
                  }
                ]
              },
              "contents": "{\n    { }\n    function abi_decode_contract_IERC20WithIERC2612_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_uint8_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_Config_$12665_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 256\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, _1)\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n        mstore(memPtr, abi_decode_contract_IERC20WithIERC2612_fromMemory(headStart))\n        mstore(add(memPtr, 32), abi_decode_contract_IERC20WithIERC2612_fromMemory(add(headStart, 32)))\n        mstore(add(memPtr, 64), mload(add(headStart, 64)))\n        mstore(add(memPtr, 96), mload(add(headStart, 96)))\n        mstore(add(memPtr, 128), mload(add(headStart, 128)))\n        mstore(add(memPtr, 160), abi_decode_uint8_fromMemory(add(headStart, 160)))\n        mstore(add(memPtr, 192), mload(add(headStart, 192)))\n        mstore(add(memPtr, 224), abi_decode_contract_IERC20WithIERC2612_fromMemory(add(headStart, 224)))\n        value0 := memPtr\n    }\n}",
              "id": 48,
              "language": "Yul",
              "name": "#utility.yul"
            }
          ],
          "linkReferences": {},
          "object": "6101806040523480156200001257600080fd5b5060405162005b3938038062005b398339810160408190526200003591620000be565b60e0808201516001600160a01b0390811660809081528351821660a0908152602085015190921661016052604084015160c090815260608501519093528301516101005282015160ff16610120520151610140526200017e565b80516001600160a01b0381168114620000a757600080fd5b919050565b805160ff81168114620000a757600080fd5b6000610100808385031215620000d357600080fd5b604051908101906001600160401b03821181831017156200010457634e487b7160e01b600052604160045260246000fd5b8160405262000113846200008f565b815262000123602085016200008f565b60208201526040840151604082015260608401516060820152608084015160808201526200015460a08501620000ac565b60a082015260c084015160c08201526200017160e085016200008f565b60e0820152949350505050565b60805160a05160c05160e0516101005161012051610140516101605161587c620002bd600039600081816107ed01528181610b9301526122770152600081816117a1015281816117f6015281816119ef01528181611aaa015281816131f50152818161324e015281816132ad015281816133ec015281816134360152818161430001526143c501526000818161316d015281816139ab015281816139e301528181613a510152613a7f01526000611516015260008181611537015261160a01526000818161156b01526115ca0152600081816103430152818161044b0152818161057b0152818161081c0152818161093001528181610bc201528181610d8c015281816113200152818161144a0152818161203d015281816121b2015281816122a701526123740152600081816123f30152612433015261587c6000f3fe6080604052600436106100b15760003560e01c80638b8fc3a111610069578063afa1e2d11161004e578063afa1e2d114610173578063d401978314610188578063d67101121461019b57600080fd5b80638b8fc3a114610140578063ae37a62d1461016057600080fd5b80631fdd8a691161009a5780631fdd8a69146100eb5780634dd3ab2314610100578063599a71c61461012057600080fd5b80630a8bcdb9146100b657806310837a39146100d8575b600080fd5b3480156100c257600080fd5b506100d66100d13660046149d2565b6101bb565b005b6100d66100e6366004614a55565b6103f3565b3480156100f757600080fd5b506100d66106a1565b34801561010c57600080fd5b506100d661011b366004614abe565b6108d1565b34801561012c57600080fd5b506100d661013b366004614b2c565b610959565b34801561014c57600080fd5b506100d661015b366004614b9d565b610cb4565b6100d661016e366004614c12565b610db7565b34801561017f57600080fd5b506100d6610e36565b6100d6610196366004614c57565b610f45565b3480156101a757600080fd5b506100d66101b6366004614cef565b6112ce565b33600090815260036020526040812090806101d461150d565b845491935091507801000000000000000000000000000000000000000000000000900462ffffff161580159061023757508015806102375750825462ffffff83811678010000000000000000000000000000000000000000000000009092041614155b1561026e576040517f0aafb74c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600260205260409020546001850161028f57935060006102e5565b848110156102d8576040517f78fe52a600000000000000000000000000000000000000000000000000000000815260048101829052602481018690526044015b60405180910390fd5b6102e28582614d4b565b90505b3360008181526002602052604090819020839055517fa9059cbb00000000000000000000000000000000000000000000000000000000815260048101919091526024810186905273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af115801561038c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b09190614d5e565b50604080518681526020810183905233917ff7aeb382a1e87f84aa69637a22868c2e12be1261273f04cdf40a262a8b890031910160405180910390a25050505050565b3360009081526002602052604090205461040d8482614d7b565b33600081815260026020526040902082905590915061042d908683611658565b82351561053a5773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663d505accf33308635602088013561048960608a0160408b01614d8e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815273ffffffffffffffffffffffffffffffffffffffff95861660048201529490931660248501526044840191909152606483015260ff166084820152606086013560a4820152608086013560c482015260e401600060405180830381600087803b15801561052157600080fd5b505af1158015610535573d6000803e3d6000fd5b505050505b831561063a576040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018590527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906323b872dd906064016020604051808303816000875af11580156105d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fd9190614d5e565b50604080518581526020810183905233917f9705a8ff16374359785d31b0f1862c27f983645496f40760d180a9830eeaf2e8910160405180910390a25b73ffffffffffffffffffffffffffffffffffffffff82161561069a5760405173ffffffffffffffffffffffffffffffffffffffff8316903480156108fc02916000818181858888f19350505050158015610698573d6000803e3d6000fd5b505b5050505050565b336000908152600360205260408120906106b961150d565b5082549091507801000000000000000000000000000000000000000000000000900462ffffff16600003610719576040517f6599c9aa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815462ffffff80831678010000000000000000000000000000000000000000000000009092041603610777576040517f175868d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81547fffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffff168255336000908152600260205260408082208054929055517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610865573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108899190614d5e565b50604080518281526000602082015262ffffff84169133917f6337d70daadadd11f8be7f6e7b38e6c04d28710b1f2a2894bb14d8e3eaa8cdb6910160405180910390a3505050565b60408051600581830181815261010083019093526000928291816020015b60408051808201909152600080825260208201528152602001906001900390816108ef57505081526000602090910152905061092b818361189e565b6109557f000000000000000000000000000000000000000000000000000000000000000082611c8a565b5050565b73ffffffffffffffffffffffffffffffffffffffff851660009081526003602052604081209061098761150d565b5082549091507801000000000000000000000000000000000000000000000000900462ffffff1615806109de5750815462ffffff828116780100000000000000000000000000000000000000000000000090920416145b15610a15576040517f175868d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81546040805160208088028201810183528782528793610a76931b918a918a908690819060009085015b82821015610a6b57610a5c60408302860136819003810190614def565b81526020019060010190610a3f565b505050505087611d8d565b7fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000841615610b095760208114610ad8576040517fcc586b4500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82547fffffffffffffffff00000000000000000000000000000000000000000000000016604085901c178355610b30565b82547fffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffff1683555b33600090815260026020526040812080548792839291610b51908490614d4b565b90915550506040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610c0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2f9190614d5e565b50604080518281527fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008716602082015262ffffff85169173ffffffffffffffffffffffffffffffffffffffff8c16917f6337d70daadadd11f8be7f6e7b38e6c04d28710b1f2a2894bb14d8e3eaa8cdb6910160405180910390a3505050505050505050565b60408051808201909152819060009080610ccf846005614e71565b67ffffffffffffffff811115610ce757610ce7614db1565b604051908082528060200260200182016040528015610d2c57816020015b6040805180820190915260008082526020820152815260200190600190039081610d055790505b5081526020016000815250905060005b82811015610d8657610d7482868684818110610d5a57610d5a614e88565b9050602002016020810190610d6f9190614abe565b61189e565b80610d7e81614eb7565b915050610d3c565b50610db17f000000000000000000000000000000000000000000000000000000000000000082611c8a565b50505050565b33600081815260026020526040902054610dd391908490611658565b73ffffffffffffffffffffffffffffffffffffffff8116156109555760405173ffffffffffffffffffffffffffffffffffffffff8216903480156108fc02916000818181858888f19350505050158015610e31573d6000803e3d6000fd5b505050565b3360009081526003602052604081209080610e4f61150d565b9150915080610e8a576040517fdc12c97300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825462ffffff83811678010000000000000000000000000000000000000000000000009092041614610ee8576040517f0aafb74c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82547fffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffff16835560405162ffffff83169033907f619ef9650648da30c9647d0b77a0de24a51da0630c3533d54cc1eb3d798e1eaa90600090a3505050565b73ffffffffffffffffffffffffffffffffffffffff871660009081526003602052604081209080610f7461150d565b915091508015610fb0576040517f24f7f40f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82547801000000000000000000000000000000000000000000000000900462ffffff1660000361100c576040517f6599c9aa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825462ffffff8381167801000000000000000000000000000000000000000000000000909204161461106a576040517fd5b25b6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8254604080516020808b028201810183528a82526110cc9390921b918c91908c908c90819060009085015b828210156110c1576110b260408302860136819003810190614def565b81526020019060010190611095565b505050505089611d8d565b60006111388b848b8b808060200260200160405190810160405280939291908181526020016000905b828210156111215761111260408302860136819003810190614def565b815260200190600101906110f5565b505050505089611131578e611eb5565b6000611eb5565b845490915060401b7fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008816156111d357602089146111a2576040517fcc586b4500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffff00000000000000000000000000000000000000000000000016604089901c1785556111fa565b84547fffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffff1685555b8067ffffffffffffffff19168462ffffff168d73ffffffffffffffffffffffffffffffffffffffff167ffab312c5020dc7093e590463878dbfd0567314a7c155b164a60430ebcc7b38038d8d8d886040516112589493929190614f59565b60405180910390a473ffffffffffffffffffffffffffffffffffffffff8616156112c05760405173ffffffffffffffffffffffffffffffffffffffff8716903480156108fc02916000818181858888f193505050501580156112be573d6000803e3d6000fd5b505b505050505050505050505050565b811561095557336000908152600260205260409020546112ee8382614d7b565b336000908152600260205260409020819055905081351561140f5773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663d505accf33308535602087013561135e6060890160408a01614d8e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815273ffffffffffffffffffffffffffffffffffffffff95861660048201529490931660248501526044840191909152606483015260ff166084820152606085013560a4820152608085013560c482015260e401600060405180830381600087803b1580156113f657600080fd5b505af115801561140a573d6000803e3d6000fd5b505050505b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906323b872dd906064016020604051808303816000875af11580156114a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114cc9190614d5e565b50604080518481526020810183905233917f9705a8ff16374359785d31b0f1862c27f983645496f40760d180a9830eeaf2e8910160405180910390a2505050565b6000808061155b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000614d7b565b905060006115676123ef565b90507f00000000000000000000000000000000000000000000000000000000000000008110156115c3576040517f3a5f7b5700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006115ef7f000000000000000000000000000000000000000000000000000000000000000083614d4b565b90506115fb838261501d565b611606906002614d7b565b94507f000000000000000000000000000000000000000000000000000000000000000083611635600288615031565b62ffffff166116449190614e71565b61164e9083614d4b565b1093505050509091565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260408120908061168761150d565b91509150806116c2576040517fdc12c97300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82547801000000000000000000000000000000000000000000000000900462ffffff16158015906117185750825462ffffff83811678010000000000000000000000000000000000000000000000009092041614155b1561174f576040517f0aafb74c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825462ffffff83167801000000000000000000000000000000000000000000000000027fffffffffff000000000000000000000000000000000000000000000000000000909116604087901c171783557f0000000000000000000000000000000000000000000000000000000000000000841015611822576040517f78fe52a6000000000000000000000000000000000000000000000000000000008152600481018590527f000000000000000000000000000000000000000000000000000000000000000060248201526044016102cf565b6040517fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008616815262ffffff83169073ffffffffffffffffffffffffffffffffffffffff8816907fe3c45ded79e3db74b160b9a697d75f465f68d287a678532ed0a9fb691553b93d9060200160405180910390a3505050505050565b60006118a861150d565b50905060006118b783836124c5565b905061192a60006118cc8462ffffff16612623565b6040516020016118dc9190615078565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291815267ffffffffffffffff8716600090815260016020522054869085906126e1565b60c0810151606082015160ff161580156119495750815162ffffff1615155b156119785761195b8260a00151612b2c565b60048360a0015160ff16901b61197191906150bd565b6000835290505b60008061199086868660400151876040015187612b5e565b9094509250505060ff821615611a1e57611a1e8760405180604001604052806119cf8a67ffffffffffffffff1660009081526001602052604090205490565b73ffffffffffffffffffffffffffffffffffffffff168152602001611a177f000000000000000000000000000000000000000000000000000000000000000060ff8816614e71565b9052612f24565b60005b60048160ff161015611ae35760008260ff831660048110611a4457611a44614e88565b602002015173ffffffffffffffffffffffffffffffffffffffff1614611ad157611ad1886040518060400160405280858560ff1660048110611a8857611a88614e88565b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020017f0000000000000000000000000000000000000000000000000000000000000000815250612f24565b80611adb816150d6565b915050611a21565b50600060c0850181905267ffffffffffffffff871681526020818152604091829020865181549288015162ffffff9081166301000000027fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000009094169116179190911780825591860151869282907fffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffff166601000000000000836006811115611b8c57611b8c614eef565b021790555060608201518154608084015160a085015160c0909501517fffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff90921667010000000000000060ff948516027fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16176801000000000000000091841691909102177fffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffff166901000000000000000000948316949094027fffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffff16939093176a0100000000000000000000919093160291909117905550505050505050565b60005b8160200151811015610e31578273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83600001518381518110611ccb57611ccb614e88565b60200260200101516000015184600001518481518110611ced57611ced614e88565b6020026020010151602001516040518363ffffffff1660e01b8152600401611d3792919073ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6020604051808303816000875af1158015611d56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7a9190614d5e565b5080611d8581614eb7565b915050611c8d565b7fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000811615611e39576000838383604051602001611dcc9392919061514f565b6040516020818303038152906040528051906020012090508067ffffffffffffffff19168567ffffffffffffffff191614611e33576040517fd13415b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610db1565b60008383604051602001611e4e92919061519a565b6040516020818303038152906040528051906020012090508067ffffffffffffffff19168567ffffffffffffffff19161461069a576040517fd13415b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080604051806040016040528085516005611ed19190614e71565b67ffffffffffffffff811115611ee957611ee9614db1565b604051908082528060200260200182016040528015611f2e57816020015b6040805180820190915260008082526020820152815260200190600190039081611f075790505b50815260200160008152509050611f5f60405180606001604052806000815260200160008152602001600081525090565b60005b8551811015611ff6576000806000611f95868c8c8c8881518110611f8857611f88614e88565b6020026020010151613076565b9250925092508285600001818151611fad9190614d7b565b905250602085018051839190611fc4908390614d7b565b905250604085018051829190611fdb908390614d7b565b905250839250611fee9150829050614eb7565b915050611f62565b5061203860006040518060400160405280600c81526020017f7265736f6c76654d6f7665730000000000000000000000000000000000000000815250846136f9565b6120627f000000000000000000000000000000000000000000000000000000000000000083611c8a565b73ffffffffffffffffffffffffffffffffffffffff871660009081526002602090815260409091205490820151825191945061209d91614d7b565b8310156120f1576020810151815184916120b691614d7b565b6040517f78fe52a6000000000000000000000000000000000000000000000000000000008152600481019290925260248201526044016102cf565b73ffffffffffffffffffffffffffffffffffffffff8416612156576020810151815161211d9190614d7b565b6121279084614d4b565b73ffffffffffffffffffffffffffffffffffffffff881660009081526002602052604090208190559250612318565b8051156122235780516040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015230602483015260448201929092527f0000000000000000000000000000000000000000000000000000000000000000909116906323b872dd906064016020604051808303816000875af11580156121fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122219190614d5e565b505b6020810151156123185760208101516040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301527f00000000000000000000000000000000000000000000000000000000000000008116602483015260448201929092527f0000000000000000000000000000000000000000000000000000000000000000909116906323b872dd906064016020604051808303816000875af11580156122f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123169190614d5e565b505b6040810151156123e55760408181015190517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff898116600483015260248201929092527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af11580156123bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123e39190614d5e565b505b5050949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661243157504290565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b80777ea6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561249c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124c091906151b3565b905090565b6040805160e0808201835260008083526020808401829052838501829052606084018290526080840182905260a0840182905260c0840182905267ffffffffffffffff871682528181529084902084519283018552805462ffffff808216855263010000008204169284019290925292939192918301906601000000000000900460ff16600681111561255a5761255a614eef565b600681111561256b5761256b614eef565b8152905460ff67010000000000000082048116602084015268010000000000000000820460000b60408401526901000000000000000000820481166060808501919091526a010000000000000000000090920416608092830152825191830151908301519293509091600162ffffff8416108015906125ed575060008160ff16115b1561261a57600080612606858760a0015186868b61390f565b60ff909116606088015262ffffff16865250505b50505092915050565b6060600061263083613b83565b600101905060008167ffffffffffffffff81111561265057612650614db1565b6040519080825280601f01601f19166020018201604052801561267a576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461268457509392505050565b600060ff8616156127b3578560ff16600114612778578560ff1660021461273d576040518060400160405280600c81526020017f20202020202020202020202000000000000000000000000000000000000000008152506127c4565b6040518060400160405280600881526020017f20202020202020200000000000000000000000000000000000000000000000008152506127c4565b6040518060400160405280600481526020017f20202020000000000000000000000000000000000000000000000000000000008152506127c4565b604051806020016040528060008152505b90506128066040518060400160405280600481526020017f25732573000000000000000000000000000000000000000000000000000000008152508287613c66565b6040805160608101909152603f80825263ffffffff86811692602088811c90921692612839926158089083013984613cf9565b6128906040518060400160405280600e81526020017f257363656c6c202825732c2573290000000000000000000000000000000000008152508461287f8560030b613d8a565b61288b8560030b613d8a565b613e18565b6128b26040518060600160405280603f8152602001615808603f913984613cf9565b6128fb6040518060400160405280601981526020017f2573202d206c61737445706f63685570646174653a202025730000000000000081525084876000015162ffffff16613ead565b6129446040518060400160405280601f81526020017f2573202d2065706f63685768656e546f6b656e497341646465643a202025730081525084876020015162ffffff16613ead565b61299c6040518060400160405280600f81526020017f2573202d20636f6c6f723a202025730000000000000000000000000000000000815250848760400151600681111561299457612994614eef565b60ff16613ead565b6129e36040518060400160405280600e81526020017f2573202d206c6966653a2020257300000000000000000000000000000000000081525084876060015160ff16613ead565b612a2a6040518060400160405280601681526020017f2573202d20646973747269627574696f6e3a2020257300000000000000000000815250848760c0015160ff16613ead565b612a6a6040518060400160405280600f81526020017f2573202d206f776e65723a2020257300000000000000000000000000000000008152508486613f40565b612ab96040518060400160405280600e81526020017f2573202d2064656c74613a20257300000000000000000000000000000000000081525084612ab4886080015160000b613d8a565b613c66565b612b006040518060400160405280601281526020017f2573202d20656e656d794d61703a202025730000000000000000000000000000815250848760a0015160ff16613ead565b612b226040518060600160405280603f8152602001615808603f913984613cf9565b5050505050505050565b60005b60ff821615612b5957612b436001836151cc565b9091169080612b51816150d6565b915050612b2f565b919050565b6000806000612b6b6149b4565b612baa6040518060400160405280600481526020017f66726f6d000000000000000000000000000000000000000000000000000000008152508a613fd3565b60008080612be367ffffffffffffffff8d16827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61402f565b9050612c246040518060400160405280600a81526020017f7570506f736974696f6e0000000000000000000000000000000000000000000081525082613fd3565b612c32818c60028d8d61407f565b9093509150600083810b1215612c49578560011795505b93810193600488811c81169003612c8d5767ffffffffffffffff811660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1684525b50948101946000612cc967ffffffffffffffff8d167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8361402f565b9050612d0a6040518060400160405280600c81526020017f6c656674506f736974696f6e000000000000000000000000000000000000000081525082613fd3565b612d18818c60038d8d61407f565b9093509150600083810b1215612d2f578560021795505b938101936008600489901c81169003612d785767ffffffffffffffff811660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1660208501525b50948101946000612d9567ffffffffffffffff8d1682600161402f565b9050612dd66040518060400160405280600c81526020017f646f776e506f736974696f6e000000000000000000000000000000000000000081525082613fd3565b612de4818c60008d8d61407f565b9093509150600083810b1215612dfb578560041795505b938101936001600489901c81169003612e445767ffffffffffffffff811660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1660408501525b50948101946000612e6167ffffffffffffffff8d1660018361402f565b9050612ea26040518060400160405280600d81526020017f7269676874506f736974696f6e0000000000000000000000000000000000000081525082613fd3565b612eb0818c60018d8d61407f565b9093509150600083810b1215612ec7578560081795505b938101936002600489901c81169003612f105767ffffffffffffffff811660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1660608501525b828701965050505095509550955095915050565b60005b8260200151811015612fd657816000015173ffffffffffffffffffffffffffffffffffffffff1683600001518281518110612f6457612f64614e88565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1603612fc45760208201518351805183908110612fa457612fa4614e88565b6020026020010151602001818151612fbc9190614d7b565b905250505050565b80612fce81614eb7565b915050612f27565b5080518251602084015181518110612ff057612ff0614e88565b60200260200101516000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508060200151826000015183602001518151811061304d5761304d614e88565b6020026020010151602001818152505081602001805180919061306f90614eb7565b9052505050565b60008060008061308a8560000151876124c5565b9050613100600061309f8862ffffff16612623565b6040516020016130af91906151e5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152885167ffffffffffffffff811660009081526001602052919091205485906126e1565b60c0810151606082015160ff1615801561311f5750815162ffffff1615155b1561314e576131318260a00151612b2c565b60048360a0015160ff16901b61314791906150bd565b6000835290505b60008660200151600681111561316657613166614eef565b0361327a577f000000000000000000000000000000000000000000000000000000000000000060ff16826060015160ff161415806131eb5750855167ffffffffffffffff1660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff89169073ffffffffffffffffffffffffffffffffffffffff1614155b15613221576000807f000000000000000000000000000000000000000000000000000000000000000094509450945050506136ef565b6132758960405180604001604052808b73ffffffffffffffffffffffffffffffffffffffff1681526020017f0000000000000000000000000000000000000000000000000000000000000000815250612f24565b6132d9565b8662ffffff16826020015162ffffff16036132d957606082015160ff16156132a857600660208701526132d9565b6000807f000000000000000000000000000000000000000000000000000000000000000094509450945050506136ef565b6000806132ed8b898b876040015187614279565b915091508973ffffffffffffffffffffffffffffffffffffffff16886000015167ffffffffffffffff167f17b85ded3fb12432ee427abc34a3026e1fbbb8bc431e3dbe51bc81215655c25c86604001518b6020015160405161335092919061522a565b60405180910390a387602001518460400190600681111561337357613373614eef565b9081600681111561338657613386614eef565b905250600060c0850181905262ffffff8a166020860152846040015160068111156133b3576133b3614eef565b03613412576000606085018190528085526080850181905260a08501819052885167ffffffffffffffff168152600160205260408120557f000000000000000000000000000000000000000000000000000000000000000094506134de565b60ff811660a0850152600082900b60808501526001606085015262ffffff891684527f0000000000000000000000000000000000000000000000000000000000000000965060068460400151600681111561346f5761346f614eef565b036134aa57875167ffffffffffffffff16600090815260016020526040902073ffffffffffffffffffffffffffffffffffffffff90556134de565b875167ffffffffffffffff16600090815260016020526040902073ffffffffffffffffffffffffffffffffffffffff8b1690555b875167ffffffffffffffff1660009081526020818152604091829020865181549288015162ffffff9081166301000000027fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000009094169116179190911780825591860151869282907fffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffff16660100000000000083600681111561358157613581614eef565b021790555060608201518154608084015160a085015160c0909501517fffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff90921667010000000000000060ff948516027fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16176801000000000000000091841691909102177fffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffff166901000000000000000000948316949094027fffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffff16939093176a010000000000000000000091909316029190911790556136ea600061368962ffffff8c16612623565b6040516020016136999190615245565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181528b5167ffffffffffffffff811660009081526001602052919091205488906126e1565b505050505b9450945094915050565b600060ff8416156137cb578360ff16600114613790578360ff16600214613755576040518060400160405280600c81526020017f20202020202020202020202000000000000000000000000000000000000000008152506137dc565b6040518060400160405280600881526020017f20202020202020200000000000000000000000000000000000000000000000008152506137dc565b6040518060400160405280600481526020017f20202020000000000000000000000000000000000000000000000000000000008152506137dc565b604051806020016040528060008152505b905061381e6040518060400160405280600481526020017f25732573000000000000000000000000000000000000000000000000000000008152508285613c66565b6138406040518060600160405280603f8152602001615808603f913982613cf9565b60005b82602001518110156138ec576138da6040518060400160405280601281526020017f25737472616e73666572202825732c2573290000000000000000000000000000815250838560000151848151811061389f5761389f614e88565b6020026020010151600001516138d5876000015186815181106138c4576138c4614e88565b602002602001015160200151612623565b614412565b806138e481614eb7565b915050613843565b50610db16040518060600160405280603f8152602001615808603f913982613cf9565b600085600162ffffff82161080159061392b575060008460ff16115b15613b7957600061393c8885615031565b62ffffff1690508015613b705760008660000b60000361397c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61397e565b865b905060008160000b128015613994575060ff8816155b1561399d575060005b60008160000b1315613ac1577f000000000000000000000000000000000000000000000000000000000000000060ff168660ff161015613ab657600081600181613a078a7f00000000000000000000000000000000000000000000000000000000000000006151cc565b613a1191906150bd565b613a1b91906151cc565b613a25919061528a565b90508060ff16831115613a39578060ff1692505b613a4382846152ac565b613a4d90886150bd565b96507f000000000000000000000000000000000000000000000000000000000000000060ff168760ff161115613aa1577f000000000000000000000000000000000000000000000000000000000000000096505b869450613aae838b6152c8565b935050613b6a565b859350889250613b6a565b60008160000b1215613b63576000613ad8826152e4565b6001613ae3846152e4565b613aed908a6150bd565b613af791906151cc565b613b01919061528a565b90508060ff16831115613b15578060ff1692505b6000613b20836152e4565b613b2a90856152ac565b90508760ff168160ff161115613b435760009550613b50565b613b4d81896151cc565b95505b613b5a848c6152c8565b94505050613b6a565b8593508492505b50613b77565b8492508791505b505b9550959350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310613bcc577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310613bf8576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310613c1657662386f26fc10000830492506010015b6305f5e1008310613c2e576305f5e100830492506008015b6127108310613c4257612710830492506004015b60648310613c54576064830492506002015b600a8310613c60576001015b92915050565b610e31838383604051602401613c7e9392919061536c565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f2ced7cef000000000000000000000000000000000000000000000000000000001790526144a3565b6109558282604051602401613d0f9291906153af565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f4b5c4277000000000000000000000000000000000000000000000000000000001790526144a3565b606060008212613da95760405180602001604052806000815250613de0565b6040518060400160405280600181526020017f2d000000000000000000000000000000000000000000000000000000000000008152505b613df1613dec846144af565b612623565b604051602001613e029291906153dd565b6040516020818303038152906040529050919050565b610db184848484604051602401613e32949392919061540c565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fde68f20a000000000000000000000000000000000000000000000000000000001790526144a3565b610e31838383604051602401613ec593929190615464565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f5821efa1000000000000000000000000000000000000000000000000000000001790526144a3565b610e31838383604051602401613f589392919061549a565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f95ed0195000000000000000000000000000000000000000000000000000000001790526144a3565b60008063ffffffff80841690602085901c1691509150610db16040518060400160405280600b81526020017f25733a202825732c2573290000000000000000000000000000000000000000008152508561287f8560030b613d8a565b60006140418363ffffffff86166154e6565b92506140578263ffffffff602087901c166154e6565b915061407763ffffffff841667ffffffff00000000602085901b16615528565b949350505050565b67ffffffffffffffff8516600090815260208181526040808320815160e081018352815462ffffff8082168352630100000082041694820194909452849384939192918301906601000000000000900460ff1660068111156140e3576140e3614eef565b60068111156140f4576140f4614eef565b8152905460ff670100000000000000820481166020840152680100000000000000008204600090810b60408086019190915269010000000000000000008404831660608601526a0100000000000000000000909304909116608090930192909252825190830151929350919081600681111561417257614172614eef565b146141cc5785600681111561418957614189614eef565b81600681111561419b5761419b614eef565b146141c6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6141c9565b60015b94505b60018262ffffff16101580156141f4575060008160068111156141f1576141f1614eef565b14155b1561426c576000836060015160ff1611801561421957508862ffffff168262ffffff16105b156142565760008061423a848660a00151876080015188606001518f61390f565b9150915061424d8c8684848e8e8e6144c6565b9550505061426c565b6142698a8485606001518c8c8c8c6144c6565b93505b5050509550959350505050565b6000806000806000806142978a600001518a8a8d602001518b612b5e565b935093509350935060008260ff161115614332576143328b60405180604001604052806142de8e6000015167ffffffffffffffff1660009081526001602052604090205490565b73ffffffffffffffffffffffffffffffffffffffff168152602001600c6143287f000000000000000000000000000000000000000000000000000000000000000060ff8916614e71565b611a17919061501d565b60005b60048160ff1610156144005760008260ff83166004811061435857614358614e88565b602002015173ffffffffffffffffffffffffffffffffffffffff16146143ee576143ee8c6040518060400160405280858560ff166004811061439c5761439c614e88565b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020018b600f1660ff167f0000000000000000000000000000000000000000000000000000000000000000611a17919061501d565b806143f8816150d6565b915050614335565b50929a91995090975050505050505050565b610db18484848460405160240161442c9493929190615549565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167feb1bff80000000000000000000000000000000000000000000000000000000001790525b6144ac81614993565b50565b6000808212156144c25781600003613c60565b5090565b600080876060015160ff161180156144df575060ff8616155b15614510576144f18760a00151612b2c565b60048860a0015160ff16901b61450791906150bd565b60ff1660c08801525b61457f60006145218660ff16612623565b604051602001614531919061559e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291815267ffffffffffffffff8c166000908152600160205220548b908b906126e1565b61458a846002615703565b614595856002615703565b60c089015160041c16600f16036145fd5760c08701516145b990600f16600c61528a565b60c0880151909150600f1660046145d460ff87166002615712565b1960048a60c0015160ff16901c60ff161660ff16901b6145f491906150bd565b60ff1660c08801525b81600681111561460f5761460f614eef565b83600681111561462157614621614eef565b146147bd57600082600681111561463a5761463a614eef565b036146c15782600681111561465157614651614eef565b8760400151600681111561466757614667614eef565b0361468a5760018760800181815161467f919061571e565b60000b9052506147bd565b60018760800181815161469d919061575d565b60000b90525060a087018051600160ff8781169190911b81189091161690526147bd565b8260068111156146d3576146d3614eef565b876040015160068111156146e9576146e9614eef565b0361471a5760a087018051600160ff8781169190911b9091171690526080870180516002919061467f90839061571e565b81600681111561472c5761472c614eef565b8760400151600681111561474257614742614eef565b0361477357600083600681111561475b5761475b614eef565b1461468a5760028760800181815161469d919061575d565b600083600681111561478757614787614eef565b036147bd5760018760800181815161479f919061571e565b60000b90525060a087018051600160ff8781169190911b9091171690525b62ffffff8516875260ff80871660608901526147f1906000906147e1908716612623565b604051602001614531919061579c565b67ffffffffffffffff88166000908152602081815260409182902089518154928b015162ffffff9081166301000000027fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000009094169116179190911780825591890151899282907fffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffff16660100000000000083600681111561489357614893614eef565b021790555060608201518154608084015160a085015160c0909501517fffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff90921667010000000000000060ff948516027fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16176801000000000000000091841691909102177fffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffff166901000000000000000000948316949094027fffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffff16939093176a01000000000000000000009190931602919091179055979650505050505050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b60405180608001604052806004906020820280368337509192915050565b6000602082840312156149e457600080fd5b5035919050565b80357fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000081168114612b5957600080fd5b600060a08284031215614a2d57600080fd5b50919050565b73ffffffffffffffffffffffffffffffffffffffff811681146144ac57600080fd5b6000806000806101008587031215614a6c57600080fd5b614a75856149eb565b935060208501359250614a8b8660408701614a1b565b915060e0850135614a9b81614a33565b939692955090935050565b803567ffffffffffffffff81168114612b5957600080fd5b600060208284031215614ad057600080fd5b614ad982614aa6565b9392505050565b60008083601f840112614af257600080fd5b50813567ffffffffffffffff811115614b0a57600080fd5b6020830191508360208260061b8501011115614b2557600080fd5b9250929050565b600080600080600060808688031215614b4457600080fd5b8535614b4f81614a33565b945060208601359350604086013567ffffffffffffffff811115614b7257600080fd5b614b7e88828901614ae0565b9094509250614b919050606087016149eb565b90509295509295909350565b60008060208385031215614bb057600080fd5b823567ffffffffffffffff80821115614bc857600080fd5b818501915085601f830112614bdc57600080fd5b813581811115614beb57600080fd5b8660208260051b8501011115614c0057600080fd5b60209290920196919550909350505050565b60008060408385031215614c2557600080fd5b614c2e836149eb565b91506020830135614c3e81614a33565b809150509250929050565b80151581146144ac57600080fd5b600080600080600080600060c0888a031215614c7257600080fd5b8735614c7d81614a33565b965060208801359550604088013567ffffffffffffffff811115614ca057600080fd5b614cac8a828b01614ae0565b9096509450614cbf9050606089016149eb565b92506080880135614ccf81614c49565b915060a0880135614cdf81614a33565b8091505092959891949750929550565b60008060c08385031215614d0257600080fd5b82359150614d138460208501614a1b565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115613c6057613c60614d1c565b600060208284031215614d7057600080fd5b8151614ad981614c49565b80820180821115613c6057613c60614d1c565b600060208284031215614da057600080fd5b813560ff81168114614ad957600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b803560078110612b5957600080fd5b600060408284031215614e0157600080fd5b6040516040810181811067ffffffffffffffff82111715614e4b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604052614e5783614aa6565b8152614e6560208401614de0565b60208201529392505050565b8082028115828204841417613c6057613c60614d1c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614ee857614ee8614d1c565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60078110614f55577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6060808252810184905260008560808301825b87811015614fb75767ffffffffffffffff614f8684614aa6565b1682526020614f96818501614de0565b614fa282850182614f1e565b50506040928301929190910190600101614f6c565b507fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000095909516602084015250506040015292915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261502c5761502c614fee565b500490565b62ffffff82811682821603908082111561504d5761504d614d1c565b5092915050565b60005b8381101561506f578181015183820152602001615057565b50506000910152565b7f5f706f6b652061742065706f63682000000000000000000000000000000000008152600082516150b081600f850160208701615054565b91909101600f0192915050565b60ff8181168382160190811115613c6057613c60614d1c565b600060ff821660ff81036150ec576150ec614d1c565b60010192915050565b600081518084526020808501945080840160005b83811015615144578151805167ffffffffffffffff16885283015161513084890182614f1e565b506040969096019590820190600101615109565b509495945050505050565b83815260606020820152600061516860608301856150f5565b90507fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000083166040830152949350505050565b82815260406020820152600061407760408301846150f5565b6000602082840312156151c557600080fd5b5051919050565b60ff8281168282160390811115613c6057613c60614d1c565b7f5f636f6d707574654d6f76652061742065706f6368200000000000000000000081526000825161521d816016850160208701615054565b9190910160160192915050565b604081016152388285614f1e565b614ad96020830184614f1e565b7f414654455220000000000000000000000000000000000000000000000000000081526000825161527d816006850160208701615054565b9190910160060192915050565b600060ff83168061529d5761529d614fee565b8060ff84160491505092915050565b60ff818116838216029081169081811461504d5761504d614d1c565b62ffffff81811683821601908082111561504d5761504d614d1c565b60008160000b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80810361531957615319614d1c565b60000392915050565b6000815180845261533a816020860160208601615054565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60608152600061537f6060830186615322565b82810360208401526153918186615322565b905082810360408401526153a58185615322565b9695505050505050565b6040815260006153c26040830185615322565b82810360208401526153d48185615322565b95945050505050565b600083516153ef818460208801615054565b835190830190615403818360208801615054565b01949350505050565b60808152600061541f6080830187615322565b82810360208401526154318187615322565b905082810360408401526154458186615322565b905082810360608401526154598185615322565b979650505050505050565b6060815260006154776060830186615322565b82810360208401526154898186615322565b915050826040830152949350505050565b6060815260006154ad6060830186615322565b82810360208401526154bf8186615322565b91505073ffffffffffffffffffffffffffffffffffffffff83166040830152949350505050565b600381810b9083900b01637fffffff81137fffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000082121715613c6057613c60614d1c565b67ffffffffffffffff81811683821601908082111561504d5761504d614d1c565b60808152600061555c6080830187615322565b828103602084015261556e8187615322565b905073ffffffffffffffffffffffffffffffffffffffff8516604084015282810360608401526154598185615322565b7f5f75706461746543656c6c46726f6d4e65696768626f722020696e64657800008152600082516155d681601e850160208701615054565b91909101601e0192915050565b600181815b8085111561563c57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561562257615622614d1c565b8085161561562f57918102915b93841c93908002906155e8565b509250929050565b60008261565357506001613c60565b8161566057506000613c60565b816001811461567657600281146156805761569c565b6001915050613c60565b60ff84111561569157615691614d1c565b50506001821b613c60565b5060208310610133831016604e8410600b84101617156156bf575081810a613c60565b6156c983836155e3565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156156fb576156fb614d1c565b029392505050565b6000614ad960ff841683615644565b6000614ad98383615644565b600082810b9082900b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808112607f82131715613c6057613c60614d1c565b600081810b9083900b01607f81137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8082121715613c6057613c60614d1c565b7f4146544552205f75706461746543656c6c46726f6d4e65696768626f7220206981527f6e646578000000000000000000000000000000000000000000000000000000006020820152600082516157fa816024850160208701615054565b919091016024019291505056fe25732d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2da2646970667358221220ecda87f921969d7a103543fbe1ca369059783797101234648f7e52c1e086f7e364736f6c63430008140033",
          "opcodes": "PUSH2 0x180 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x5B39 CODESIZE SUB DUP1 PUSH3 0x5B39 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0xBE JUMP JUMPDEST PUSH1 0xE0 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x80 SWAP1 DUP2 MSTORE DUP4 MLOAD DUP3 AND PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP3 AND PUSH2 0x160 MSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0xC0 SWAP1 DUP2 MSTORE PUSH1 0x60 DUP6 ADD MLOAD SWAP1 SWAP4 MSTORE DUP4 ADD MLOAD PUSH2 0x100 MSTORE DUP3 ADD MLOAD PUSH1 0xFF AND PUSH2 0x120 MSTORE ADD MLOAD PUSH2 0x140 MSTORE PUSH3 0x17E JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0xA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x104 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x40 MSTORE PUSH3 0x113 DUP5 PUSH3 0x8F JUMP JUMPDEST DUP2 MSTORE PUSH3 0x123 PUSH1 0x20 DUP6 ADD PUSH3 0x8F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH3 0x154 PUSH1 0xA0 DUP6 ADD PUSH3 0xAC JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH3 0x171 PUSH1 0xE0 DUP6 ADD PUSH3 0x8F JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x587C PUSH3 0x2BD PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x7ED ADD MSTORE DUP2 DUP2 PUSH2 0xB93 ADD MSTORE PUSH2 0x2277 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x17A1 ADD MSTORE DUP2 DUP2 PUSH2 0x17F6 ADD MSTORE DUP2 DUP2 PUSH2 0x19EF ADD MSTORE DUP2 DUP2 PUSH2 0x1AAA ADD MSTORE DUP2 DUP2 PUSH2 0x31F5 ADD MSTORE DUP2 DUP2 PUSH2 0x324E ADD MSTORE DUP2 DUP2 PUSH2 0x32AD ADD MSTORE DUP2 DUP2 PUSH2 0x33EC ADD MSTORE DUP2 DUP2 PUSH2 0x3436 ADD MSTORE DUP2 DUP2 PUSH2 0x4300 ADD MSTORE PUSH2 0x43C5 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x316D ADD MSTORE DUP2 DUP2 PUSH2 0x39AB ADD MSTORE DUP2 DUP2 PUSH2 0x39E3 ADD MSTORE DUP2 DUP2 PUSH2 0x3A51 ADD MSTORE PUSH2 0x3A7F ADD MSTORE PUSH1 0x0 PUSH2 0x1516 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1537 ADD MSTORE PUSH2 0x160A ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x156B ADD MSTORE PUSH2 0x15CA ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x343 ADD MSTORE DUP2 DUP2 PUSH2 0x44B ADD MSTORE DUP2 DUP2 PUSH2 0x57B ADD MSTORE DUP2 DUP2 PUSH2 0x81C ADD MSTORE DUP2 DUP2 PUSH2 0x930 ADD MSTORE DUP2 DUP2 PUSH2 0xBC2 ADD MSTORE DUP2 DUP2 PUSH2 0xD8C ADD MSTORE DUP2 DUP2 PUSH2 0x1320 ADD MSTORE DUP2 DUP2 PUSH2 0x144A ADD MSTORE DUP2 DUP2 PUSH2 0x203D ADD MSTORE DUP2 DUP2 PUSH2 0x21B2 ADD MSTORE DUP2 DUP2 PUSH2 0x22A7 ADD MSTORE PUSH2 0x2374 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x23F3 ADD MSTORE PUSH2 0x2433 ADD MSTORE PUSH2 0x587C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B8FC3A1 GT PUSH2 0x69 JUMPI DUP1 PUSH4 0xAFA1E2D1 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xAFA1E2D1 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xD4019783 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xD6710112 EQ PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B8FC3A1 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xAE37A62D EQ PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FDD8A69 GT PUSH2 0x9A JUMPI DUP1 PUSH4 0x1FDD8A69 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x4DD3AB23 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x599A71C6 EQ PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA8BCDB9 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x10837A39 EQ PUSH2 0xD8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x49D2 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A55 JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x6A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x4ABE JUMP JUMPDEST PUSH2 0x8D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x4B2C JUMP JUMPDEST PUSH2 0x959 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0x4B9D JUMP JUMPDEST PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0x4C12 JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C57 JUMP JUMPDEST PUSH2 0xF45 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4CEF JUMP JUMPDEST PUSH2 0x12CE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP1 PUSH2 0x1D4 PUSH2 0x150D JUMP JUMPDEST DUP5 SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH3 0xFFFFFF AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x237 JUMPI POP DUP1 ISZERO DUP1 PUSH2 0x237 JUMPI POP DUP3 SLOAD PUSH3 0xFFFFFF DUP4 DUP2 AND PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x26E JUMPI PUSH1 0x40 MLOAD PUSH32 0xAAFB74C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP6 ADD PUSH2 0x28F JUMPI SWAP4 POP PUSH1 0x0 PUSH2 0x2E5 JUMP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x78FE52A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2E2 DUP6 DUP3 PUSH2 0x4D4B JUMP JUMPDEST SWAP1 POP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x4D5E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xF7AEB382A1E87F84AA69637A22868C2E12BE1261273F04CDF40A262A8B890031 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x40D DUP5 DUP3 PUSH2 0x4D7B JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE SWAP1 SWAP2 POP PUSH2 0x42D SWAP1 DUP7 DUP4 PUSH2 0x1658 JUMP JUMPDEST DUP3 CALLDATALOAD ISZERO PUSH2 0x53A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND PUSH4 0xD505ACCF CALLER ADDRESS DUP7 CALLDATALOAD PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x489 PUSH1 0x60 DUP11 ADD PUSH1 0x40 DUP12 ADD PUSH2 0x4D8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP9 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0xC4 DUP3 ADD MSTORE PUSH1 0xE4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x535 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP4 ISZERO PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x4D5E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x9705A8FF16374359785D31B0F1862C27F983645496F40760D180A9830EEAF2E8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ISZERO PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x698 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x6B9 PUSH2 0x150D JUMP JUMPDEST POP DUP3 SLOAD SWAP1 SWAP2 POP PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0x0 SUB PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6599C9AA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SLOAD PUSH3 0xFFFFFF DUP1 DUP4 AND PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND SUB PUSH2 0x777 JUMPI PUSH1 0x40 MLOAD PUSH32 0x175868D700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SSTORE MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x865 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x889 SWAP2 SWAP1 PUSH2 0x4D5E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0xFFFFFF DUP5 AND SWAP2 CALLER SWAP2 PUSH32 0x6337D70DAADADD11F8BE7F6E7B38E6C04D28710B1F2A2894BB14D8E3EAA8CDB6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x5 DUP2 DUP4 ADD DUP2 DUP2 MSTORE PUSH2 0x100 DUP4 ADD SWAP1 SWAP4 MSTORE PUSH1 0x0 SWAP3 DUP3 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x8EF JUMPI POP POP DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 POP PUSH2 0x92B DUP2 DUP4 PUSH2 0x189E JUMP JUMPDEST PUSH2 0x955 PUSH32 0x0 DUP3 PUSH2 0x1C8A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x987 PUSH2 0x150D JUMP JUMPDEST POP DUP3 SLOAD SWAP1 SWAP2 POP PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH3 0xFFFFFF AND ISZERO DUP1 PUSH2 0x9DE JUMPI POP DUP2 SLOAD PUSH3 0xFFFFFF DUP3 DUP2 AND PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND EQ JUMPDEST ISZERO PUSH2 0xA15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x175868D700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP9 MUL DUP3 ADD DUP2 ADD DUP4 MSTORE DUP8 DUP3 MSTORE DUP8 SWAP4 PUSH2 0xA76 SWAP4 SHL SWAP2 DUP11 SWAP2 DUP11 SWAP1 DUP7 SWAP1 DUP2 SWAP1 PUSH1 0x0 SWAP1 DUP6 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xA6B JUMPI PUSH2 0xA5C PUSH1 0x40 DUP4 MUL DUP7 ADD CALLDATASIZE DUP2 SWAP1 SUB DUP2 ADD SWAP1 PUSH2 0x4DEF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA3F JUMP JUMPDEST POP POP POP POP POP DUP8 PUSH2 0x1D8D JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 DUP5 AND ISZERO PUSH2 0xB09 JUMPI PUSH1 0x20 DUP2 EQ PUSH2 0xAD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCC586B4500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 AND PUSH1 0x40 DUP6 SWAP1 SHR OR DUP4 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 SLOAD PUSH32 0xFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 DUP4 SWAP3 SWAP2 PUSH2 0xB51 SWAP1 DUP5 SWAP1 PUSH2 0x4D4B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC2F SWAP2 SWAP1 PUSH2 0x4D5E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0xFFFFFF DUP6 AND SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND SWAP2 PUSH32 0x6337D70DAADADD11F8BE7F6E7B38E6C04D28710B1F2A2894BB14D8E3EAA8CDB6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE DUP2 SWAP1 PUSH1 0x0 SWAP1 DUP1 PUSH2 0xCCF DUP5 PUSH1 0x5 PUSH2 0x4E71 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCE7 JUMPI PUSH2 0xCE7 PUSH2 0x4DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD2C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD05 JUMPI SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD86 JUMPI PUSH2 0xD74 DUP3 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0xD5A JUMPI PUSH2 0xD5A PUSH2 0x4E88 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD6F SWAP2 SWAP1 PUSH2 0x4ABE JUMP JUMPDEST PUSH2 0x189E JUMP JUMPDEST DUP1 PUSH2 0xD7E DUP2 PUSH2 0x4EB7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD3C JUMP JUMPDEST POP PUSH2 0xDB1 PUSH32 0x0 DUP3 PUSH2 0x1C8A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xDD3 SWAP2 SWAP1 DUP5 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x955 JUMPI PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xE31 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP1 PUSH2 0xE4F PUSH2 0x150D JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH2 0xE8A JUMPI PUSH1 0x40 MLOAD PUSH32 0xDC12C97300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH3 0xFFFFFF DUP4 DUP2 AND PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND EQ PUSH2 0xEE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAAFB74C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH32 0xFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 SSTORE PUSH1 0x40 MLOAD PUSH3 0xFFFFFF DUP4 AND SWAP1 CALLER SWAP1 PUSH32 0x619EF9650648DA30C9647D0B77A0DE24A51DA0630C3533D54CC1EB3D798E1EAA SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP1 PUSH2 0xF74 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 ISZERO PUSH2 0xFB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x24F7F40F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0x0 SUB PUSH2 0x100C JUMPI PUSH1 0x40 MLOAD PUSH32 0x6599C9AA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH3 0xFFFFFF DUP4 DUP2 AND PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND EQ PUSH2 0x106A JUMPI PUSH1 0x40 MLOAD PUSH32 0xD5B25B6300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP12 MUL DUP3 ADD DUP2 ADD DUP4 MSTORE DUP11 DUP3 MSTORE PUSH2 0x10CC SWAP4 SWAP1 SWAP3 SHL SWAP2 DUP13 SWAP2 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP2 SWAP1 PUSH1 0x0 SWAP1 DUP6 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x10C1 JUMPI PUSH2 0x10B2 PUSH1 0x40 DUP4 MUL DUP7 ADD CALLDATASIZE DUP2 SWAP1 SUB DUP2 ADD SWAP1 PUSH2 0x4DEF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1095 JUMP JUMPDEST POP POP POP POP POP DUP10 PUSH2 0x1D8D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1138 DUP12 DUP5 DUP12 DUP12 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1121 JUMPI PUSH2 0x1112 PUSH1 0x40 DUP4 MUL DUP7 ADD CALLDATASIZE DUP2 SWAP1 SUB DUP2 ADD SWAP1 PUSH2 0x4DEF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x10F5 JUMP JUMPDEST POP POP POP POP POP DUP10 PUSH2 0x1131 JUMPI DUP15 PUSH2 0x1EB5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB5 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP PUSH1 0x40 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 DUP9 AND ISZERO PUSH2 0x11D3 JUMPI PUSH1 0x20 DUP10 EQ PUSH2 0x11A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCC586B4500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 AND PUSH1 0x40 DUP10 SWAP1 SHR OR DUP6 SSTORE PUSH2 0x11FA JUMP JUMPDEST DUP5 SLOAD PUSH32 0xFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 SSTORE JUMPDEST DUP1 PUSH8 0xFFFFFFFFFFFFFFFF NOT AND DUP5 PUSH3 0xFFFFFF AND DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFAB312C5020DC7093E590463878DBFD0567314A7C155B164A60430EBCC7B3803 DUP14 DUP14 DUP14 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1258 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4F59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND ISZERO PUSH2 0x12C0 JUMPI PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x12BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 ISZERO PUSH2 0x955 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x12EE DUP4 DUP3 PUSH2 0x4D7B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE SWAP1 POP DUP2 CALLDATALOAD ISZERO PUSH2 0x140F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND PUSH4 0xD505ACCF CALLER ADDRESS DUP6 CALLDATALOAD PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x135E PUSH1 0x60 DUP10 ADD PUSH1 0x40 DUP11 ADD PUSH2 0x4D8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP9 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0x80 DUP6 ADD CALLDATALOAD PUSH1 0xC4 DUP3 ADD MSTORE PUSH1 0xE4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x140A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14CC SWAP2 SWAP1 PUSH2 0x4D5E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x9705A8FF16374359785D31B0F1862C27F983645496F40760D180A9830EEAF2E8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x155B PUSH32 0x0 PUSH32 0x0 PUSH2 0x4D7B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1567 PUSH2 0x23EF JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 LT ISZERO PUSH2 0x15C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3A5F7B5700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15EF PUSH32 0x0 DUP4 PUSH2 0x4D4B JUMP JUMPDEST SWAP1 POP PUSH2 0x15FB DUP4 DUP3 PUSH2 0x501D JUMP JUMPDEST PUSH2 0x1606 SWAP1 PUSH1 0x2 PUSH2 0x4D7B JUMP JUMPDEST SWAP5 POP PUSH32 0x0 DUP4 PUSH2 0x1635 PUSH1 0x2 DUP9 PUSH2 0x5031 JUMP JUMPDEST PUSH3 0xFFFFFF AND PUSH2 0x1644 SWAP2 SWAP1 PUSH2 0x4E71 JUMP JUMPDEST PUSH2 0x164E SWAP1 DUP4 PUSH2 0x4D4B JUMP JUMPDEST LT SWAP4 POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP1 PUSH2 0x1687 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH2 0x16C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDC12C97300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH3 0xFFFFFF AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1718 JUMPI POP DUP3 SLOAD PUSH3 0xFFFFFF DUP4 DUP2 AND PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x174F JUMPI PUSH1 0x40 MLOAD PUSH32 0xAAFB74C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH3 0xFFFFFF DUP4 AND PUSH25 0x1000000000000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFF000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND PUSH1 0x40 DUP8 SWAP1 SHR OR OR DUP4 SSTORE PUSH32 0x0 DUP5 LT ISZERO PUSH2 0x1822 JUMPI PUSH1 0x40 MLOAD PUSH32 0x78FE52A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 DUP7 AND DUP2 MSTORE PUSH3 0xFFFFFF DUP4 AND SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND SWAP1 PUSH32 0xE3C45DED79E3DB74B160B9A697D75F465F68D287A678532ED0A9FB691553B93D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A8 PUSH2 0x150D JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0x18B7 DUP4 DUP4 PUSH2 0x24C5 JUMP JUMPDEST SWAP1 POP PUSH2 0x192A PUSH1 0x0 PUSH2 0x18CC DUP5 PUSH3 0xFFFFFF AND PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18DC SWAP2 SWAP1 PUSH2 0x5078 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SLOAD DUP7 SWAP1 DUP6 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1949 JUMPI POP DUP2 MLOAD PUSH3 0xFFFFFF AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1978 JUMPI PUSH2 0x195B DUP3 PUSH1 0xA0 ADD MLOAD PUSH2 0x2B2C JUMP JUMPDEST PUSH1 0x4 DUP4 PUSH1 0xA0 ADD MLOAD PUSH1 0xFF AND SWAP1 SHL PUSH2 0x1971 SWAP2 SWAP1 PUSH2 0x50BD JUMP JUMPDEST PUSH1 0x0 DUP4 MSTORE SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1990 DUP7 DUP7 DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x40 ADD MLOAD DUP8 PUSH2 0x2B5E JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x1A1E JUMPI PUSH2 0x1A1E DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x19CF DUP11 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A17 PUSH32 0x0 PUSH1 0xFF DUP9 AND PUSH2 0x4E71 JUMP JUMPDEST SWAP1 MSTORE PUSH2 0x2F24 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x1AE3 JUMPI PUSH1 0x0 DUP3 PUSH1 0xFF DUP4 AND PUSH1 0x4 DUP2 LT PUSH2 0x1A44 JUMPI PUSH2 0x1A44 PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AD1 JUMPI PUSH2 0x1AD1 DUP9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP6 PUSH1 0xFF AND PUSH1 0x4 DUP2 LT PUSH2 0x1A88 JUMPI PUSH2 0x1A88 PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 DUP2 MSTORE POP PUSH2 0x2F24 JUMP JUMPDEST DUP1 PUSH2 0x1ADB DUP2 PUSH2 0x50D6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A21 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0xC0 DUP6 ADD DUP2 SWAP1 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP8 AND DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP7 MLOAD DUP2 SLOAD SWAP3 DUP9 ADD MLOAD PUSH3 0xFFFFFF SWAP1 DUP2 AND PUSH4 0x1000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000 SWAP1 SWAP5 AND SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR DUP1 DUP3 SSTORE SWAP2 DUP7 ADD MLOAD DUP7 SWAP3 DUP3 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFF AND PUSH7 0x1000000000000 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1B8C JUMPI PUSH2 0x1B8C PUSH2 0x4EEF JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 SLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 SWAP1 SWAP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH8 0x100000000000000 PUSH1 0xFF SWAP5 DUP6 AND MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND OR PUSH9 0x10000000000000000 SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 MUL OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFF AND PUSH10 0x1000000000000000000 SWAP5 DUP4 AND SWAP5 SWAP1 SWAP5 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFF AND SWAP4 SWAP1 SWAP4 OR PUSH11 0x100000000000000000000 SWAP2 SWAP1 SWAP4 AND MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0xE31 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 PUSH1 0x0 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1CCB JUMPI PUSH2 0x1CCB PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1CED JUMPI PUSH2 0x1CED PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D37 SWAP3 SWAP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D56 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D7A SWAP2 SWAP1 PUSH2 0x4D5E JUMP JUMPDEST POP DUP1 PUSH2 0x1D85 DUP2 PUSH2 0x4EB7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C8D JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 DUP2 AND ISZERO PUSH2 0x1E39 JUMPI PUSH1 0x0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1DCC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x514F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF NOT AND DUP6 PUSH8 0xFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1E33 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD13415B500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xDB1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E4E SWAP3 SWAP2 SWAP1 PUSH2 0x519A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF NOT AND DUP6 PUSH8 0xFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH32 0xD13415B500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 MLOAD PUSH1 0x5 PUSH2 0x1ED1 SWAP2 SWAP1 PUSH2 0x4E71 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EE9 JUMPI PUSH2 0x1EE9 PUSH2 0x4DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F2E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1F07 JUMPI SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1F5F PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x1FF6 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1F95 DUP7 DUP13 DUP13 DUP13 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x1F88 JUMPI PUSH2 0x1F88 PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3076 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 DUP6 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x1FAD SWAP2 SWAP1 PUSH2 0x4D7B JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x20 DUP6 ADD DUP1 MLOAD DUP4 SWAP2 SWAP1 PUSH2 0x1FC4 SWAP1 DUP4 SWAP1 PUSH2 0x4D7B JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x40 DUP6 ADD DUP1 MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x1FDB SWAP1 DUP4 SWAP1 PUSH2 0x4D7B JUMP JUMPDEST SWAP1 MSTORE POP DUP4 SWAP3 POP PUSH2 0x1FEE SWAP2 POP DUP3 SWAP1 POP PUSH2 0x4EB7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1F62 JUMP JUMPDEST POP PUSH2 0x2038 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7265736F6C76654D6F7665730000000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x36F9 JUMP JUMPDEST PUSH2 0x2062 PUSH32 0x0 DUP4 PUSH2 0x1C8A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 DUP3 ADD MLOAD DUP3 MLOAD SWAP2 SWAP5 POP PUSH2 0x209D SWAP2 PUSH2 0x4D7B JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x20F1 JUMPI PUSH1 0x20 DUP2 ADD MLOAD DUP2 MLOAD DUP5 SWAP2 PUSH2 0x20B6 SWAP2 PUSH2 0x4D7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x78FE52A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x2156 JUMPI PUSH1 0x20 DUP2 ADD MLOAD DUP2 MLOAD PUSH2 0x211D SWAP2 SWAP1 PUSH2 0x4D7B JUMP JUMPDEST PUSH2 0x2127 SWAP1 DUP5 PUSH2 0x4D4B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE SWAP3 POP PUSH2 0x2318 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2223 JUMPI DUP1 MLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2221 SWAP2 SWAP1 PUSH2 0x4D5E JUMP JUMPDEST POP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD ISZERO PUSH2 0x2318 JUMPI PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2316 SWAP2 SWAP1 PUSH2 0x4D5E JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD ISZERO PUSH2 0x23E5 JUMPI PUSH1 0x40 DUP2 DUP2 ADD MLOAD SWAP1 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23E3 SWAP2 SWAP1 PUSH2 0x4D5E JUMP JUMPDEST POP JUMPDEST POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2431 JUMPI POP TIMESTAMP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB80777EA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x249C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24C0 SWAP2 SWAP1 PUSH2 0x51B3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP4 DUP6 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP5 ADD DUP3 SWAP1 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP8 AND DUP3 MSTORE DUP2 DUP2 MSTORE SWAP1 DUP5 SWAP1 KECCAK256 DUP5 MLOAD SWAP3 DUP4 ADD DUP6 MSTORE DUP1 SLOAD PUSH3 0xFFFFFF DUP1 DUP3 AND DUP6 MSTORE PUSH4 0x1000000 DUP3 DIV AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 DUP4 ADD SWAP1 PUSH7 0x1000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x255A JUMPI PUSH2 0x255A PUSH2 0x4EEF JUMP JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x256B JUMPI PUSH2 0x256B PUSH2 0x4EEF JUMP JUMPDEST DUP2 MSTORE SWAP1 SLOAD PUSH1 0xFF PUSH8 0x100000000000000 DUP3 DIV DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH9 0x10000000000000000 DUP3 DIV PUSH1 0x0 SIGNEXTEND PUSH1 0x40 DUP5 ADD MSTORE PUSH10 0x1000000000000000000 DUP3 DIV DUP2 AND PUSH1 0x60 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH11 0x100000000000000000000 SWAP1 SWAP3 DIV AND PUSH1 0x80 SWAP3 DUP4 ADD MSTORE DUP3 MLOAD SWAP2 DUP4 ADD MLOAD SWAP1 DUP4 ADD MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH3 0xFFFFFF DUP5 AND LT DUP1 ISZERO SWAP1 PUSH2 0x25ED JUMPI POP PUSH1 0x0 DUP2 PUSH1 0xFF AND GT JUMPDEST ISZERO PUSH2 0x261A JUMPI PUSH1 0x0 DUP1 PUSH2 0x2606 DUP6 DUP8 PUSH1 0xA0 ADD MLOAD DUP7 DUP7 DUP12 PUSH2 0x390F JUMP JUMPDEST PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x60 DUP9 ADD MSTORE PUSH3 0xFFFFFF AND DUP7 MSTORE POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2630 DUP4 PUSH2 0x3B83 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2650 JUMPI PUSH2 0x2650 PUSH2 0x4DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x267A JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x2684 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP7 AND ISZERO PUSH2 0x27B3 JUMPI DUP6 PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x2778 JUMPI DUP6 PUSH1 0xFF AND PUSH1 0x2 EQ PUSH2 0x273D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2020202020202020202020200000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x27C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2020202020202020000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x27C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2020202000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x27C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP JUMPDEST SWAP1 POP PUSH2 0x2806 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2573257300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP3 DUP8 PUSH2 0x3C66 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3F DUP1 DUP3 MSTORE PUSH4 0xFFFFFFFF DUP7 DUP2 AND SWAP3 PUSH1 0x20 DUP9 DUP2 SHR SWAP1 SWAP3 AND SWAP3 PUSH2 0x2839 SWAP3 PUSH2 0x5808 SWAP1 DUP4 ADD CODECOPY DUP5 PUSH2 0x3CF9 JUMP JUMPDEST PUSH2 0x2890 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x257363656C6C202825732C257329000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x287F DUP6 PUSH1 0x3 SIGNEXTEND PUSH2 0x3D8A JUMP JUMPDEST PUSH2 0x288B DUP6 PUSH1 0x3 SIGNEXTEND PUSH2 0x3D8A JUMP JUMPDEST PUSH2 0x3E18 JUMP JUMPDEST PUSH2 0x28B2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5808 PUSH1 0x3F SWAP2 CODECOPY DUP5 PUSH2 0x3CF9 JUMP JUMPDEST PUSH2 0x28FB PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2573202D206C61737445706F63685570646174653A2020257300000000000000 DUP2 MSTORE POP DUP5 DUP8 PUSH1 0x0 ADD MLOAD PUSH3 0xFFFFFF AND PUSH2 0x3EAD JUMP JUMPDEST PUSH2 0x2944 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2573202D2065706F63685768656E546F6B656E497341646465643A2020257300 DUP2 MSTORE POP DUP5 DUP8 PUSH1 0x20 ADD MLOAD PUSH3 0xFFFFFF AND PUSH2 0x3EAD JUMP JUMPDEST PUSH2 0x299C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2573202D20636F6C6F723A202025730000000000000000000000000000000000 DUP2 MSTORE POP DUP5 DUP8 PUSH1 0x40 ADD MLOAD PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2994 JUMPI PUSH2 0x2994 PUSH2 0x4EEF JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x3EAD JUMP JUMPDEST PUSH2 0x29E3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2573202D206C6966653A20202573000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 DUP8 PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND PUSH2 0x3EAD JUMP JUMPDEST PUSH2 0x2A2A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2573202D20646973747269627574696F6E3A2020257300000000000000000000 DUP2 MSTORE POP DUP5 DUP8 PUSH1 0xC0 ADD MLOAD PUSH1 0xFF AND PUSH2 0x3EAD JUMP JUMPDEST PUSH2 0x2A6A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2573202D206F776E65723A202025730000000000000000000000000000000000 DUP2 MSTORE POP DUP5 DUP7 PUSH2 0x3F40 JUMP JUMPDEST PUSH2 0x2AB9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2573202D2064656C74613A202573000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x2AB4 DUP9 PUSH1 0x80 ADD MLOAD PUSH1 0x0 SIGNEXTEND PUSH2 0x3D8A JUMP JUMPDEST PUSH2 0x3C66 JUMP JUMPDEST PUSH2 0x2B00 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2573202D20656E656D794D61703A202025730000000000000000000000000000 DUP2 MSTORE POP DUP5 DUP8 PUSH1 0xA0 ADD MLOAD PUSH1 0xFF AND PUSH2 0x3EAD JUMP JUMPDEST PUSH2 0x2B22 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5808 PUSH1 0x3F SWAP2 CODECOPY DUP5 PUSH2 0x3CF9 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x2B59 JUMPI PUSH2 0x2B43 PUSH1 0x1 DUP4 PUSH2 0x51CC JUMP JUMPDEST SWAP1 SWAP2 AND SWAP1 DUP1 PUSH2 0x2B51 DUP2 PUSH2 0x50D6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B2F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2B6B PUSH2 0x49B4 JUMP JUMPDEST PUSH2 0x2BAA PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x66726F6D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP11 PUSH2 0x3FD3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x2BE3 PUSH8 0xFFFFFFFFFFFFFFFF DUP14 AND DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x402F JUMP JUMPDEST SWAP1 POP PUSH2 0x2C24 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7570506F736974696F6E00000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP3 PUSH2 0x3FD3 JUMP JUMPDEST PUSH2 0x2C32 DUP2 DUP13 PUSH1 0x2 DUP14 DUP14 PUSH2 0x407F JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x0 DUP4 DUP2 SIGNEXTEND SLT ISZERO PUSH2 0x2C49 JUMPI DUP6 PUSH1 0x1 OR SWAP6 POP JUMPDEST SWAP4 DUP2 ADD SWAP4 PUSH1 0x4 DUP9 DUP2 SHR DUP2 AND SWAP1 SUB PUSH2 0x2C8D JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 MSTORE JUMPDEST POP SWAP5 DUP2 ADD SWAP5 PUSH1 0x0 PUSH2 0x2CC9 PUSH8 0xFFFFFFFFFFFFFFFF DUP14 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH2 0x402F JUMP JUMPDEST SWAP1 POP PUSH2 0x2D0A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6C656674506F736974696F6E0000000000000000000000000000000000000000 DUP2 MSTORE POP DUP3 PUSH2 0x3FD3 JUMP JUMPDEST PUSH2 0x2D18 DUP2 DUP13 PUSH1 0x3 DUP14 DUP14 PUSH2 0x407F JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x0 DUP4 DUP2 SIGNEXTEND SLT ISZERO PUSH2 0x2D2F JUMPI DUP6 PUSH1 0x2 OR SWAP6 POP JUMPDEST SWAP4 DUP2 ADD SWAP4 PUSH1 0x8 PUSH1 0x4 DUP10 SWAP1 SHR DUP2 AND SWAP1 SUB PUSH2 0x2D78 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP6 ADD MSTORE JUMPDEST POP SWAP5 DUP2 ADD SWAP5 PUSH1 0x0 PUSH2 0x2D95 PUSH8 0xFFFFFFFFFFFFFFFF DUP14 AND DUP3 PUSH1 0x1 PUSH2 0x402F JUMP JUMPDEST SWAP1 POP PUSH2 0x2DD6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646F776E506F736974696F6E0000000000000000000000000000000000000000 DUP2 MSTORE POP DUP3 PUSH2 0x3FD3 JUMP JUMPDEST PUSH2 0x2DE4 DUP2 DUP13 PUSH1 0x0 DUP14 DUP14 PUSH2 0x407F JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x0 DUP4 DUP2 SIGNEXTEND SLT ISZERO PUSH2 0x2DFB JUMPI DUP6 PUSH1 0x4 OR SWAP6 POP JUMPDEST SWAP4 DUP2 ADD SWAP4 PUSH1 0x1 PUSH1 0x4 DUP10 SWAP1 SHR DUP2 AND SWAP1 SUB PUSH2 0x2E44 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 DUP6 ADD MSTORE JUMPDEST POP SWAP5 DUP2 ADD SWAP5 PUSH1 0x0 PUSH2 0x2E61 PUSH8 0xFFFFFFFFFFFFFFFF DUP14 AND PUSH1 0x1 DUP4 PUSH2 0x402F JUMP JUMPDEST SWAP1 POP PUSH2 0x2EA2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7269676874506F736974696F6E00000000000000000000000000000000000000 DUP2 MSTORE POP DUP3 PUSH2 0x3FD3 JUMP JUMPDEST PUSH2 0x2EB0 DUP2 DUP13 PUSH1 0x1 DUP14 DUP14 PUSH2 0x407F JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x0 DUP4 DUP2 SIGNEXTEND SLT ISZERO PUSH2 0x2EC7 JUMPI DUP6 PUSH1 0x8 OR SWAP6 POP JUMPDEST SWAP4 DUP2 ADD SWAP4 PUSH1 0x2 PUSH1 0x4 DUP10 SWAP1 SHR DUP2 AND SWAP1 SUB PUSH2 0x2F10 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 DUP6 ADD MSTORE JUMPDEST DUP3 DUP8 ADD SWAP7 POP POP POP POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0x2FD6 JUMPI DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2F64 JUMPI PUSH2 0x2F64 PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2FC4 JUMPI PUSH1 0x20 DUP3 ADD MLOAD DUP4 MLOAD DUP1 MLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x2FA4 JUMPI PUSH2 0x2FA4 PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MLOAD PUSH2 0x2FBC SWAP2 SWAP1 PUSH2 0x4D7B JUMP JUMPDEST SWAP1 MSTORE POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x2FCE DUP2 PUSH2 0x4EB7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2F27 JUMP JUMPDEST POP DUP1 MLOAD DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x2FF0 JUMPI PUSH2 0x2FF0 PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x304D JUMPI PUSH2 0x304D PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x20 ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH2 0x306F SWAP1 PUSH2 0x4EB7 JUMP JUMPDEST SWAP1 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x308A DUP6 PUSH1 0x0 ADD MLOAD DUP8 PUSH2 0x24C5 JUMP JUMPDEST SWAP1 POP PUSH2 0x3100 PUSH1 0x0 PUSH2 0x309F DUP9 PUSH3 0xFFFFFF AND PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x30AF SWAP2 SWAP1 PUSH2 0x51E5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP9 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD DUP6 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x311F JUMPI POP DUP2 MLOAD PUSH3 0xFFFFFF AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x314E JUMPI PUSH2 0x3131 DUP3 PUSH1 0xA0 ADD MLOAD PUSH2 0x2B2C JUMP JUMPDEST PUSH1 0x4 DUP4 PUSH1 0xA0 ADD MLOAD PUSH1 0xFF AND SWAP1 SHL PUSH2 0x3147 SWAP2 SWAP1 PUSH2 0x50BD JUMP JUMPDEST PUSH1 0x0 DUP4 MSTORE SWAP1 POP JUMPDEST PUSH1 0x0 DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x3166 JUMPI PUSH2 0x3166 PUSH2 0x4EEF JUMP JUMPDEST SUB PUSH2 0x327A JUMPI PUSH32 0x0 PUSH1 0xFF AND DUP3 PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND EQ ISZERO DUP1 PUSH2 0x31EB JUMPI POP DUP6 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3221 JUMPI PUSH1 0x0 DUP1 PUSH32 0x0 SWAP5 POP SWAP5 POP SWAP5 POP POP POP PUSH2 0x36EF JUMP JUMPDEST PUSH2 0x3275 DUP10 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 DUP2 MSTORE POP PUSH2 0x2F24 JUMP JUMPDEST PUSH2 0x32D9 JUMP JUMPDEST DUP7 PUSH3 0xFFFFFF AND DUP3 PUSH1 0x20 ADD MLOAD PUSH3 0xFFFFFF AND SUB PUSH2 0x32D9 JUMPI PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0xFF AND ISZERO PUSH2 0x32A8 JUMPI PUSH1 0x6 PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x32D9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 SWAP5 POP SWAP5 POP SWAP5 POP POP POP PUSH2 0x36EF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x32ED DUP12 DUP10 DUP12 DUP8 PUSH1 0x40 ADD MLOAD DUP8 PUSH2 0x4279 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x17B85DED3FB12432EE427ABC34A3026E1FBBB8BC431E3DBE51BC81215655C25C DUP7 PUSH1 0x40 ADD MLOAD DUP12 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x3350 SWAP3 SWAP2 SWAP1 PUSH2 0x522A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP8 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD SWAP1 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x3373 JUMPI PUSH2 0x3373 PUSH2 0x4EEF JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x3386 JUMPI PUSH2 0x3386 PUSH2 0x4EEF JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x0 PUSH1 0xC0 DUP6 ADD DUP2 SWAP1 MSTORE PUSH3 0xFFFFFF DUP11 AND PUSH1 0x20 DUP7 ADD MSTORE DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x33B3 JUMPI PUSH2 0x33B3 PUSH2 0x4EEF JUMP JUMPDEST SUB PUSH2 0x3412 JUMPI PUSH1 0x0 PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE DUP1 DUP6 MSTORE PUSH1 0x80 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD DUP2 SWAP1 MSTORE DUP9 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH32 0x0 SWAP5 POP PUSH2 0x34DE JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x0 DUP3 SWAP1 SIGNEXTEND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP6 ADD MSTORE PUSH3 0xFFFFFF DUP10 AND DUP5 MSTORE PUSH32 0x0 SWAP7 POP PUSH1 0x6 DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x346F JUMPI PUSH2 0x346F PUSH2 0x4EEF JUMP JUMPDEST SUB PUSH2 0x34AA JUMPI DUP8 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SSTORE PUSH2 0x34DE JUMP JUMPDEST DUP8 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 AND SWAP1 SSTORE JUMPDEST DUP8 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP7 MLOAD DUP2 SLOAD SWAP3 DUP9 ADD MLOAD PUSH3 0xFFFFFF SWAP1 DUP2 AND PUSH4 0x1000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000 SWAP1 SWAP5 AND SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR DUP1 DUP3 SSTORE SWAP2 DUP7 ADD MLOAD DUP7 SWAP3 DUP3 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFF AND PUSH7 0x1000000000000 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x3581 JUMPI PUSH2 0x3581 PUSH2 0x4EEF JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 SLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 SWAP1 SWAP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH8 0x100000000000000 PUSH1 0xFF SWAP5 DUP6 AND MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND OR PUSH9 0x10000000000000000 SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 MUL OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFF AND PUSH10 0x1000000000000000000 SWAP5 DUP4 AND SWAP5 SWAP1 SWAP5 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFF AND SWAP4 SWAP1 SWAP4 OR PUSH11 0x100000000000000000000 SWAP2 SWAP1 SWAP4 AND MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x36EA PUSH1 0x0 PUSH2 0x3689 PUSH3 0xFFFFFF DUP13 AND PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3699 SWAP2 SWAP1 PUSH2 0x5245 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP12 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD DUP9 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST POP POP POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP5 AND ISZERO PUSH2 0x37CB JUMPI DUP4 PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x3790 JUMPI DUP4 PUSH1 0xFF AND PUSH1 0x2 EQ PUSH2 0x3755 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2020202020202020202020200000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x37DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2020202020202020000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x37DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2020202000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x37DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP JUMPDEST SWAP1 POP PUSH2 0x381E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2573257300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP3 DUP6 PUSH2 0x3C66 JUMP JUMPDEST PUSH2 0x3840 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5808 PUSH1 0x3F SWAP2 CODECOPY DUP3 PUSH2 0x3CF9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0x38EC JUMPI PUSH2 0x38DA PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x25737472616E73666572202825732C2573290000000000000000000000000000 DUP2 MSTORE POP DUP4 DUP6 PUSH1 0x0 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x389F JUMPI PUSH2 0x389F PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH2 0x38D5 DUP8 PUSH1 0x0 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x38C4 JUMPI PUSH2 0x38C4 PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x2623 JUMP JUMPDEST PUSH2 0x4412 JUMP JUMPDEST DUP1 PUSH2 0x38E4 DUP2 PUSH2 0x4EB7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3843 JUMP JUMPDEST POP PUSH2 0xDB1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5808 PUSH1 0x3F SWAP2 CODECOPY DUP3 PUSH2 0x3CF9 JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x1 PUSH3 0xFFFFFF DUP3 AND LT DUP1 ISZERO SWAP1 PUSH2 0x392B JUMPI POP PUSH1 0x0 DUP5 PUSH1 0xFF AND GT JUMPDEST ISZERO PUSH2 0x3B79 JUMPI PUSH1 0x0 PUSH2 0x393C DUP9 DUP6 PUSH2 0x5031 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 POP DUP1 ISZERO PUSH2 0x3B70 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 SIGNEXTEND PUSH1 0x0 SUB PUSH2 0x397C JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x397E JUMP JUMPDEST DUP7 JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0x3994 JUMPI POP PUSH1 0xFF DUP9 AND ISZERO JUMPDEST ISZERO PUSH2 0x399D JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SIGNEXTEND SGT ISZERO PUSH2 0x3AC1 JUMPI PUSH32 0x0 PUSH1 0xFF AND DUP7 PUSH1 0xFF AND LT ISZERO PUSH2 0x3AB6 JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 PUSH2 0x3A07 DUP11 PUSH32 0x0 PUSH2 0x51CC JUMP JUMPDEST PUSH2 0x3A11 SWAP2 SWAP1 PUSH2 0x50BD JUMP JUMPDEST PUSH2 0x3A1B SWAP2 SWAP1 PUSH2 0x51CC JUMP JUMPDEST PUSH2 0x3A25 SWAP2 SWAP1 PUSH2 0x528A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xFF AND DUP4 GT ISZERO PUSH2 0x3A39 JUMPI DUP1 PUSH1 0xFF AND SWAP3 POP JUMPDEST PUSH2 0x3A43 DUP3 DUP5 PUSH2 0x52AC JUMP JUMPDEST PUSH2 0x3A4D SWAP1 DUP9 PUSH2 0x50BD JUMP JUMPDEST SWAP7 POP PUSH32 0x0 PUSH1 0xFF AND DUP8 PUSH1 0xFF AND GT ISZERO PUSH2 0x3AA1 JUMPI PUSH32 0x0 SWAP7 POP JUMPDEST DUP7 SWAP5 POP PUSH2 0x3AAE DUP4 DUP12 PUSH2 0x52C8 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x3B6A JUMP JUMPDEST DUP6 SWAP4 POP DUP9 SWAP3 POP PUSH2 0x3B6A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SIGNEXTEND SLT ISZERO PUSH2 0x3B63 JUMPI PUSH1 0x0 PUSH2 0x3AD8 DUP3 PUSH2 0x52E4 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x3AE3 DUP5 PUSH2 0x52E4 JUMP JUMPDEST PUSH2 0x3AED SWAP1 DUP11 PUSH2 0x50BD JUMP JUMPDEST PUSH2 0x3AF7 SWAP2 SWAP1 PUSH2 0x51CC JUMP JUMPDEST PUSH2 0x3B01 SWAP2 SWAP1 PUSH2 0x528A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xFF AND DUP4 GT ISZERO PUSH2 0x3B15 JUMPI DUP1 PUSH1 0xFF AND SWAP3 POP JUMPDEST PUSH1 0x0 PUSH2 0x3B20 DUP4 PUSH2 0x52E4 JUMP JUMPDEST PUSH2 0x3B2A SWAP1 DUP6 PUSH2 0x52AC JUMP JUMPDEST SWAP1 POP DUP8 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x3B43 JUMPI PUSH1 0x0 SWAP6 POP PUSH2 0x3B50 JUMP JUMPDEST PUSH2 0x3B4D DUP2 DUP10 PUSH2 0x51CC JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH2 0x3B5A DUP5 DUP13 PUSH2 0x52C8 JUMP JUMPDEST SWAP5 POP POP POP PUSH2 0x3B6A JUMP JUMPDEST DUP6 SWAP4 POP DUP5 SWAP3 POP JUMPDEST POP PUSH2 0x3B77 JUMP JUMPDEST DUP5 SWAP3 POP DUP8 SWAP2 POP JUMPDEST POP JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x3BCC JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x3BF8 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x3C16 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x3C2E JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x3C42 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x3C54 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3C60 JUMPI PUSH1 0x1 ADD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE31 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3C7E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x536C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2CED7CEF00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x44A3 JUMP JUMPDEST PUSH2 0x955 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3D0F SWAP3 SWAP2 SWAP1 PUSH2 0x53AF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4B5C427700000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x44A3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SLT PUSH2 0x3DA9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x3DE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2D00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP JUMPDEST PUSH2 0x3DF1 PUSH2 0x3DEC DUP5 PUSH2 0x44AF JUMP JUMPDEST PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3E02 SWAP3 SWAP2 SWAP1 PUSH2 0x53DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB1 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3E32 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x540C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDE68F20A00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x44A3 JUMP JUMPDEST PUSH2 0xE31 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3EC5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5464 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5821EFA100000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x44A3 JUMP JUMPDEST PUSH2 0xE31 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3F58 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x549A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95ED019500000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x44A3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0xFFFFFFFF DUP1 DUP5 AND SWAP1 PUSH1 0x20 DUP6 SWAP1 SHR AND SWAP2 POP SWAP2 POP PUSH2 0xDB1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x25733A202825732C257329000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP6 PUSH2 0x287F DUP6 PUSH1 0x3 SIGNEXTEND PUSH2 0x3D8A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4041 DUP4 PUSH4 0xFFFFFFFF DUP7 AND PUSH2 0x54E6 JUMP JUMPDEST SWAP3 POP PUSH2 0x4057 DUP3 PUSH4 0xFFFFFFFF PUSH1 0x20 DUP8 SWAP1 SHR AND PUSH2 0x54E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4077 PUSH4 0xFFFFFFFF DUP5 AND PUSH8 0xFFFFFFFF00000000 PUSH1 0x20 DUP6 SWAP1 SHL AND PUSH2 0x5528 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH3 0xFFFFFF DUP1 DUP3 AND DUP4 MSTORE PUSH4 0x1000000 DUP3 DIV AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP5 SWAP4 DUP5 SWAP4 SWAP2 SWAP3 SWAP2 DUP4 ADD SWAP1 PUSH7 0x1000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x40E3 JUMPI PUSH2 0x40E3 PUSH2 0x4EEF JUMP JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x40F4 JUMPI PUSH2 0x40F4 PUSH2 0x4EEF JUMP JUMPDEST DUP2 MSTORE SWAP1 SLOAD PUSH1 0xFF PUSH8 0x100000000000000 DUP3 DIV DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH9 0x10000000000000000 DUP3 DIV PUSH1 0x0 SWAP1 DUP2 SIGNEXTEND PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH10 0x1000000000000000000 DUP5 DIV DUP4 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH11 0x100000000000000000000 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 MLOAD SWAP1 DUP4 ADD MLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 DUP2 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x4172 JUMPI PUSH2 0x4172 PUSH2 0x4EEF JUMP JUMPDEST EQ PUSH2 0x41CC JUMPI DUP6 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x4189 JUMPI PUSH2 0x4189 PUSH2 0x4EEF JUMP JUMPDEST DUP2 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x419B JUMPI PUSH2 0x419B PUSH2 0x4EEF JUMP JUMPDEST EQ PUSH2 0x41C6 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x41C9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP5 POP JUMPDEST PUSH1 0x1 DUP3 PUSH3 0xFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x41F4 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x41F1 JUMPI PUSH2 0x41F1 PUSH2 0x4EEF JUMP JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0x426C JUMPI PUSH1 0x0 DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND GT DUP1 ISZERO PUSH2 0x4219 JUMPI POP DUP9 PUSH3 0xFFFFFF AND DUP3 PUSH3 0xFFFFFF AND LT JUMPDEST ISZERO PUSH2 0x4256 JUMPI PUSH1 0x0 DUP1 PUSH2 0x423A DUP5 DUP7 PUSH1 0xA0 ADD MLOAD DUP8 PUSH1 0x80 ADD MLOAD DUP9 PUSH1 0x60 ADD MLOAD DUP16 PUSH2 0x390F JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x424D DUP13 DUP7 DUP5 DUP5 DUP15 DUP15 DUP15 PUSH2 0x44C6 JUMP JUMPDEST SWAP6 POP POP POP PUSH2 0x426C JUMP JUMPDEST PUSH2 0x4269 DUP11 DUP5 DUP6 PUSH1 0x60 ADD MLOAD DUP13 DUP13 DUP13 DUP13 PUSH2 0x44C6 JUMP JUMPDEST SWAP4 POP JUMPDEST POP POP POP SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x4297 DUP11 PUSH1 0x0 ADD MLOAD DUP11 DUP11 DUP14 PUSH1 0x20 ADD MLOAD DUP12 PUSH2 0x2B5E JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x0 DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0x4332 JUMPI PUSH2 0x4332 DUP12 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x42DE DUP15 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC PUSH2 0x4328 PUSH32 0x0 PUSH1 0xFF DUP10 AND PUSH2 0x4E71 JUMP JUMPDEST PUSH2 0x1A17 SWAP2 SWAP1 PUSH2 0x501D JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x4400 JUMPI PUSH1 0x0 DUP3 PUSH1 0xFF DUP4 AND PUSH1 0x4 DUP2 LT PUSH2 0x4358 JUMPI PUSH2 0x4358 PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x43EE JUMPI PUSH2 0x43EE DUP13 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP6 PUSH1 0xFF AND PUSH1 0x4 DUP2 LT PUSH2 0x439C JUMPI PUSH2 0x439C PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0xF AND PUSH1 0xFF AND PUSH32 0x0 PUSH2 0x1A17 SWAP2 SWAP1 PUSH2 0x501D JUMP JUMPDEST DUP1 PUSH2 0x43F8 DUP2 PUSH2 0x50D6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4335 JUMP JUMPDEST POP SWAP3 SWAP11 SWAP2 SWAP10 POP SWAP1 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDB1 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x442C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5549 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEB1BFF8000000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE JUMPDEST PUSH2 0x44AC DUP2 PUSH2 0x4993 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0x44C2 JUMPI DUP2 PUSH1 0x0 SUB PUSH2 0x3C60 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP8 PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND GT DUP1 ISZERO PUSH2 0x44DF JUMPI POP PUSH1 0xFF DUP7 AND ISZERO JUMPDEST ISZERO PUSH2 0x4510 JUMPI PUSH2 0x44F1 DUP8 PUSH1 0xA0 ADD MLOAD PUSH2 0x2B2C JUMP JUMPDEST PUSH1 0x4 DUP9 PUSH1 0xA0 ADD MLOAD PUSH1 0xFF AND SWAP1 SHL PUSH2 0x4507 SWAP2 SWAP1 PUSH2 0x50BD JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xC0 DUP9 ADD MSTORE JUMPDEST PUSH2 0x457F PUSH1 0x0 PUSH2 0x4521 DUP7 PUSH1 0xFF AND PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4531 SWAP2 SWAP1 PUSH2 0x559E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SLOAD DUP12 SWAP1 DUP12 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH2 0x458A DUP5 PUSH1 0x2 PUSH2 0x5703 JUMP JUMPDEST PUSH2 0x4595 DUP6 PUSH1 0x2 PUSH2 0x5703 JUMP JUMPDEST PUSH1 0xC0 DUP10 ADD MLOAD PUSH1 0x4 SHR AND PUSH1 0xF AND SUB PUSH2 0x45FD JUMPI PUSH1 0xC0 DUP8 ADD MLOAD PUSH2 0x45B9 SWAP1 PUSH1 0xF AND PUSH1 0xC PUSH2 0x528A JUMP JUMPDEST PUSH1 0xC0 DUP9 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0xF AND PUSH1 0x4 PUSH2 0x45D4 PUSH1 0xFF DUP8 AND PUSH1 0x2 PUSH2 0x5712 JUMP JUMPDEST NOT PUSH1 0x4 DUP11 PUSH1 0xC0 ADD MLOAD PUSH1 0xFF AND SWAP1 SHR PUSH1 0xFF AND AND PUSH1 0xFF AND SWAP1 SHL PUSH2 0x45F4 SWAP2 SWAP1 PUSH2 0x50BD JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xC0 DUP9 ADD MSTORE JUMPDEST DUP2 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x460F JUMPI PUSH2 0x460F PUSH2 0x4EEF JUMP JUMPDEST DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x4621 JUMPI PUSH2 0x4621 PUSH2 0x4EEF JUMP JUMPDEST EQ PUSH2 0x47BD JUMPI PUSH1 0x0 DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x463A JUMPI PUSH2 0x463A PUSH2 0x4EEF JUMP JUMPDEST SUB PUSH2 0x46C1 JUMPI DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x4651 JUMPI PUSH2 0x4651 PUSH2 0x4EEF JUMP JUMPDEST DUP8 PUSH1 0x40 ADD MLOAD PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x4667 JUMPI PUSH2 0x4667 PUSH2 0x4EEF JUMP JUMPDEST SUB PUSH2 0x468A JUMPI PUSH1 0x1 DUP8 PUSH1 0x80 ADD DUP2 DUP2 MLOAD PUSH2 0x467F SWAP2 SWAP1 PUSH2 0x571E JUMP JUMPDEST PUSH1 0x0 SIGNEXTEND SWAP1 MSTORE POP PUSH2 0x47BD JUMP JUMPDEST PUSH1 0x1 DUP8 PUSH1 0x80 ADD DUP2 DUP2 MLOAD PUSH2 0x469D SWAP2 SWAP1 PUSH2 0x575D JUMP JUMPDEST PUSH1 0x0 SIGNEXTEND SWAP1 MSTORE POP PUSH1 0xA0 DUP8 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0xFF DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 SHL DUP2 XOR SWAP1 SWAP2 AND AND SWAP1 MSTORE PUSH2 0x47BD JUMP JUMPDEST DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x46D3 JUMPI PUSH2 0x46D3 PUSH2 0x4EEF JUMP JUMPDEST DUP8 PUSH1 0x40 ADD MLOAD PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x46E9 JUMPI PUSH2 0x46E9 PUSH2 0x4EEF JUMP JUMPDEST SUB PUSH2 0x471A JUMPI PUSH1 0xA0 DUP8 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0xFF DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 SHL SWAP1 SWAP2 OR AND SWAP1 MSTORE PUSH1 0x80 DUP8 ADD DUP1 MLOAD PUSH1 0x2 SWAP2 SWAP1 PUSH2 0x467F SWAP1 DUP4 SWAP1 PUSH2 0x571E JUMP JUMPDEST DUP2 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x472C JUMPI PUSH2 0x472C PUSH2 0x4EEF JUMP JUMPDEST DUP8 PUSH1 0x40 ADD MLOAD PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x4742 JUMPI PUSH2 0x4742 PUSH2 0x4EEF JUMP JUMPDEST SUB PUSH2 0x4773 JUMPI PUSH1 0x0 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x475B JUMPI PUSH2 0x475B PUSH2 0x4EEF JUMP JUMPDEST EQ PUSH2 0x468A JUMPI PUSH1 0x2 DUP8 PUSH1 0x80 ADD DUP2 DUP2 MLOAD PUSH2 0x469D SWAP2 SWAP1 PUSH2 0x575D JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x4787 JUMPI PUSH2 0x4787 PUSH2 0x4EEF JUMP JUMPDEST SUB PUSH2 0x47BD JUMPI PUSH1 0x1 DUP8 PUSH1 0x80 ADD DUP2 DUP2 MLOAD PUSH2 0x479F SWAP2 SWAP1 PUSH2 0x571E JUMP JUMPDEST PUSH1 0x0 SIGNEXTEND SWAP1 MSTORE POP PUSH1 0xA0 DUP8 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0xFF DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 SHL SWAP1 SWAP2 OR AND SWAP1 MSTORE JUMPDEST PUSH3 0xFFFFFF DUP6 AND DUP8 MSTORE PUSH1 0xFF DUP1 DUP8 AND PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x47F1 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x47E1 SWAP1 DUP8 AND PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4531 SWAP2 SWAP1 PUSH2 0x579C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP10 MLOAD DUP2 SLOAD SWAP3 DUP12 ADD MLOAD PUSH3 0xFFFFFF SWAP1 DUP2 AND PUSH4 0x1000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000 SWAP1 SWAP5 AND SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR DUP1 DUP3 SSTORE SWAP2 DUP10 ADD MLOAD DUP10 SWAP3 DUP3 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFF AND PUSH7 0x1000000000000 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x4893 JUMPI PUSH2 0x4893 PUSH2 0x4EEF JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 SLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 SWAP1 SWAP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH8 0x100000000000000 PUSH1 0xFF SWAP5 DUP6 AND MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND OR PUSH9 0x10000000000000000 SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 MUL OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFF AND PUSH10 0x1000000000000000000 SWAP5 DUP4 AND SWAP5 SWAP1 SWAP5 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFF AND SWAP4 SWAP1 SWAP4 OR PUSH11 0x100000000000000000000 SWAP2 SWAP1 SWAP4 AND MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH11 0x636F6E736F6C652E6C6F67 SWAP1 POP PUSH1 0x0 DUP1 DUP4 MLOAD PUSH1 0x20 DUP6 ADD DUP5 GAS STATICCALL POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 DUP2 AND DUP2 EQ PUSH2 0x2B59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x44AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4A6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A75 DUP6 PUSH2 0x49EB JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x4A8B DUP7 PUSH1 0x40 DUP8 ADD PUSH2 0x4A1B JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP6 ADD CALLDATALOAD PUSH2 0x4A9B DUP2 PUSH2 0x4A33 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2B59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4AD9 DUP3 PUSH2 0x4AA6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4AF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x6 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x4B25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4B44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x4B4F DUP2 PUSH2 0x4A33 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B7E DUP9 DUP3 DUP10 ADD PUSH2 0x4AE0 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x4B91 SWAP1 POP PUSH1 0x60 DUP8 ADD PUSH2 0x49EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4BB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4BC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4BDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4BEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x4C00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4C25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C2E DUP4 PUSH2 0x49EB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4C3E DUP2 PUSH2 0x4A33 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x44AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4C72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x4C7D DUP2 PUSH2 0x4A33 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4CA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4CAC DUP11 DUP3 DUP12 ADD PUSH2 0x4AE0 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH2 0x4CBF SWAP1 POP PUSH1 0x60 DUP10 ADD PUSH2 0x49EB JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH2 0x4CCF DUP2 PUSH2 0x4C49 JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH2 0x4CDF DUP2 PUSH2 0x4A33 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC0 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4D02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x4D13 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x4A1B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3C60 JUMPI PUSH2 0x3C60 PUSH2 0x4D1C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x4AD9 DUP2 PUSH2 0x4C49 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3C60 JUMPI PUSH2 0x3C60 PUSH2 0x4D1C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4DA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x4AD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x7 DUP2 LT PUSH2 0x2B59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4E4B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x4E57 DUP4 PUSH2 0x4AA6 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x4E65 PUSH1 0x20 DUP5 ADD PUSH2 0x4DE0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3C60 JUMPI PUSH2 0x3C60 PUSH2 0x4D1C JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4EE8 JUMPI PUSH2 0x4EE8 PUSH2 0x4D1C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x4F55 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 DUP6 PUSH1 0x80 DUP4 ADD DUP3 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x4FB7 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x4F86 DUP5 PUSH2 0x4AA6 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x20 PUSH2 0x4F96 DUP2 DUP6 ADD PUSH2 0x4DE0 JUMP JUMPDEST PUSH2 0x4FA2 DUP3 DUP6 ADD DUP3 PUSH2 0x4F1E JUMP JUMPDEST POP POP PUSH1 0x40 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4F6C JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 SWAP6 SWAP1 SWAP6 AND PUSH1 0x20 DUP5 ADD MSTORE POP POP PUSH1 0x40 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x502C JUMPI PUSH2 0x502C PUSH2 0x4FEE JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH3 0xFFFFFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x504D JUMPI PUSH2 0x504D PUSH2 0x4D1C JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x506F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5057 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0x5F706F6B652061742065706F6368200000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x50B0 DUP2 PUSH1 0xF DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x5054 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0xF ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x3C60 JUMPI PUSH2 0x3C60 PUSH2 0x4D1C JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x50EC JUMPI PUSH2 0x50EC PUSH2 0x4D1C JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5144 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP9 MSTORE DUP4 ADD MLOAD PUSH2 0x5130 DUP5 DUP10 ADD DUP3 PUSH2 0x4F1E JUMP JUMPDEST POP PUSH1 0x40 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5109 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x5168 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x50F5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4077 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x50F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x3C60 JUMPI PUSH2 0x3C60 PUSH2 0x4D1C JUMP JUMPDEST PUSH32 0x5F636F6D707574654D6F76652061742065706F63682000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x521D DUP2 PUSH1 0x16 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x5054 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x16 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x5238 DUP3 DUP6 PUSH2 0x4F1E JUMP JUMPDEST PUSH2 0x4AD9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4F1E JUMP JUMPDEST PUSH32 0x4146544552200000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x527D DUP2 PUSH1 0x6 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x5054 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x6 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP4 AND DUP1 PUSH2 0x529D JUMPI PUSH2 0x529D PUSH2 0x4FEE JUMP JUMPDEST DUP1 PUSH1 0xFF DUP5 AND DIV SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND MUL SWAP1 DUP2 AND SWAP1 DUP2 DUP2 EQ PUSH2 0x504D JUMPI PUSH2 0x504D PUSH2 0x4D1C JUMP JUMPDEST PUSH3 0xFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x504D JUMPI PUSH2 0x504D PUSH2 0x4D1C JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SIGNEXTEND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 DUP2 SUB PUSH2 0x5319 JUMPI PUSH2 0x5319 PUSH2 0x4D1C JUMP JUMPDEST PUSH1 0x0 SUB SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x533A DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x5054 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x537F PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x5322 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x5391 DUP2 DUP7 PUSH2 0x5322 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x53A5 DUP2 DUP6 PUSH2 0x5322 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x53C2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x5322 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x53D4 DUP2 DUP6 PUSH2 0x5322 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x53EF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x5054 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x5403 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x5054 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x541F PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x5322 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x5431 DUP2 DUP8 PUSH2 0x5322 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x5445 DUP2 DUP7 PUSH2 0x5322 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x5459 DUP2 DUP6 PUSH2 0x5322 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5477 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x5322 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x5489 DUP2 DUP7 PUSH2 0x5322 JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x54AD PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x5322 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x54BF DUP2 DUP7 PUSH2 0x5322 JUMP JUMPDEST SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SIGNEXTEND SWAP1 DUP4 SWAP1 SIGNEXTEND ADD PUSH4 0x7FFFFFFF DUP2 SGT PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000 DUP3 SLT OR ISZERO PUSH2 0x3C60 JUMPI PUSH2 0x3C60 PUSH2 0x4D1C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x504D JUMPI PUSH2 0x504D PUSH2 0x4D1C JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x555C PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x5322 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x556E DUP2 DUP8 PUSH2 0x5322 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x5459 DUP2 DUP6 PUSH2 0x5322 JUMP JUMPDEST PUSH32 0x5F75706461746543656C6C46726F6D4E65696768626F722020696E6465780000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x55D6 DUP2 PUSH1 0x1E DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x5054 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1E ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x563C JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x5622 JUMPI PUSH2 0x5622 PUSH2 0x4D1C JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x562F JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x55E8 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5653 JUMPI POP PUSH1 0x1 PUSH2 0x3C60 JUMP JUMPDEST DUP2 PUSH2 0x5660 JUMPI POP PUSH1 0x0 PUSH2 0x3C60 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x5676 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x5680 JUMPI PUSH2 0x569C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x3C60 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x5691 JUMPI PUSH2 0x5691 PUSH2 0x4D1C JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x3C60 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x56BF JUMPI POP DUP2 DUP2 EXP PUSH2 0x3C60 JUMP JUMPDEST PUSH2 0x56C9 DUP4 DUP4 PUSH2 0x55E3 JUMP JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x56FB JUMPI PUSH2 0x56FB PUSH2 0x4D1C JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AD9 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x5644 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AD9 DUP4 DUP4 PUSH2 0x5644 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 DUP2 SLT PUSH1 0x7F DUP3 SGT OR ISZERO PUSH2 0x3C60 JUMPI PUSH2 0x3C60 PUSH2 0x4D1C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SIGNEXTEND SWAP1 DUP4 SWAP1 SIGNEXTEND ADD PUSH1 0x7F DUP2 SGT PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 DUP3 SLT OR ISZERO PUSH2 0x3C60 JUMPI PUSH2 0x3C60 PUSH2 0x4D1C JUMP JUMPDEST PUSH32 0x4146544552205F75706461746543656C6C46726F6D4E65696768626F72202069 DUP2 MSTORE PUSH32 0x6E64657800000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x57FA DUP2 PUSH1 0x24 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x5054 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x24 ADD SWAP3 SWAP2 POP POP JUMP INVALID 0x25 PUSH20 0x2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xDA DUP8 0xF9 0x21 SWAP7 SWAP14 PUSH27 0x103543FBE1CA369059783797101234648F7E52C1E086F7E364736F PUSH13 0x63430008140033000000000000 ",
          "sourceMap": "198:6925:42:-:0;;;274:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;276:11:39;;;;;-1:-1:-1;;;;;268:19:39;;;;;;;4282:13:36;;4273:22;::::1;;::::0;;;4314:18:::1;::::0;::::1;::::0;4299:33;;::::1;;::::0;4349:16:::1;::::0;::::1;::::0;4336:29:::1;::::0;;;-1:-1:-1;;;4393:26:36;4369:50;;;4447:26;::::1;::::0;4423:50:::1;::::0;4488:14;::::1;::::0;4477:25:::1;;;::::0;4528:23:::1;::::0;4506:45:::1;::::0;198:6925:42;;14:197:48;113:13;;-1:-1:-1;;;;;155:31:48;;145:42;;135:70;;201:1;198;191:12;135:70;14:197;;;:::o;216:160::-;293:13;;346:4;335:16;;325:27;;315:55;;366:1;363;356:12;381:1136;476:6;507:3;551:2;539:9;530:7;526:23;522:32;519:52;;;567:1;564;557:12;519:52;600:2;594:9;630:15;;;;-1:-1:-1;;;;;660:34:48;;696:22;;;657:62;654:185;;;761:10;756:3;752:20;749:1;742:31;796:4;793:1;786:15;824:4;821:1;814:15;654:185;859:10;855:2;848:22;894:60;944:9;894:60;:::i;:::-;886:6;879:76;988:69;1053:2;1042:9;1038:18;988:69;:::i;:::-;983:2;975:6;971:15;964:94;1112:2;1101:9;1097:18;1091:25;1086:2;1078:6;1074:15;1067:50;1171:2;1160:9;1156:18;1150:25;1145:2;1137:6;1133:15;1126:50;1231:3;1220:9;1216:19;1210:26;1204:3;1196:6;1192:16;1185:52;1271:48;1314:3;1303:9;1299:19;1271:48;:::i;:::-;1265:3;1257:6;1253:16;1246:74;1375:3;1364:9;1360:19;1354:26;1348:3;1340:6;1336:16;1329:52;1415:70;1480:3;1469:9;1465:19;1415:70;:::i;:::-;1409:3;1397:16;;1390:96;1401:6;381:1136;-1:-1:-1;;;;381:1136:48:o;:::-;198:6925:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
        },
        "deployedBytecode": {
          "functionDebugData": {
            "@_castToPure_1232": {
              "entryPoint": null,
              "id": 1232,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@_checkHash_15270": {
              "entryPoint": 7565,
              "id": 15270,
              "parameterSlots": 4,
              "returnSlots": 0
            },
            "@_collectTransfer_15341": {
              "entryPoint": 12068,
              "id": 15341,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_computeMove_13370": {
              "entryPoint": 12406,
              "id": 13370,
              "parameterSlots": 4,
              "returnSlots": 3
            },
            "@_computeNewLife_15074": {
              "entryPoint": 14607,
              "id": 15074,
              "parameterSlots": 5,
              "returnSlots": 2
            },
            "@_countBits_13035": {
              "entryPoint": 11052,
              "id": 13035,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@_epoch_14838": {
              "entryPoint": 5389,
              "id": 14838,
              "parameterSlots": 0,
              "returnSlots": 2
            },
            "@_getUpdatedCell_15140": {
              "entryPoint": 9413,
              "id": 15140,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@_makeCommitment_12821": {
              "entryPoint": 5720,
              "id": 12821,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@_multiTransfer_15379": {
              "entryPoint": 7306,
              "id": 15379,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_ownerOf_15161": {
              "entryPoint": null,
              "id": 15161,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@_poke_13650": {
              "entryPoint": 6302,
              "id": 13650,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_propagate_13484": {
              "entryPoint": 17017,
              "id": 13484,
              "parameterSlots": 5,
              "returnSlots": 2
            },
            "@_resolveMoves_13010": {
              "entryPoint": 7861,
              "id": 13010,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "@_sendLogPayloadImplementation_1215": {
              "entryPoint": 18835,
              "id": 1215,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@_sendLogPayload_1244": {
              "entryPoint": 17571,
              "id": 1244,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@_timestamp_15422": {
              "entryPoint": 9199,
              "id": 15422,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@_updateCellFromNeighbor_14393": {
              "entryPoint": 17606,
              "id": 14393,
              "parameterSlots": 7,
              "returnSlots": 1
            },
            "@_updateCell_14074": {
              "entryPoint": 16511,
              "id": 14074,
              "parameterSlots": 5,
              "returnSlots": 2
            },
            "@_updateNeighbours_13952": {
              "entryPoint": 11102,
              "id": 13952,
              "parameterSlots": 5,
              "returnSlots": 4
            },
            "@abs_1198": {
              "entryPoint": 17583,
              "id": 1198,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@acknowledgeMissedRevealByBurningAllReserve_17311": {
              "entryPoint": 1697,
              "id": 17311,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@acknowledgeMissedReveal_17237": {
              "entryPoint": 2393,
              "id": 17237,
              "parameterSlots": 5,
              "returnSlots": 0
            },
            "@addToReserve_16701": {
              "entryPoint": 4814,
              "id": 16701,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@cancelCommitment_16888": {
              "entryPoint": 3638,
              "id": 16888,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@log10_931": {
              "entryPoint": 15235,
              "id": 931,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@logCell_14614": {
              "entryPoint": 9953,
              "id": 14614,
              "parameterSlots": 5,
              "returnSlots": 0
            },
            "@logPosition_14451": {
              "entryPoint": 16339,
              "id": 14451,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@logTransfers_14699": {
              "entryPoint": 14073,
              "id": 14699,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@log_1945": {
              "entryPoint": 15609,
              "id": 1945,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@log_2535": {
              "entryPoint": 16045,
              "id": 2535,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@log_2555": {
              "entryPoint": 15462,
              "id": 2555,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@log_2595": {
              "entryPoint": 16192,
              "id": 2595,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@log_5373": {
              "entryPoint": 15896,
              "id": 5373,
              "parameterSlots": 4,
              "returnSlots": 0
            },
            "@log_5557": {
              "entryPoint": 17426,
              "id": 5557,
              "parameterSlots": 4,
              "returnSlots": 0
            },
            "@makeCommitmentWithExtraReserve_16840": {
              "entryPoint": 1011,
              "id": 16840,
              "parameterSlots": 4,
              "returnSlots": 0
            },
            "@makeCommitment_16735": {
              "entryPoint": 3511,
              "id": 16735,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@offset_18241": {
              "entryPoint": 16431,
              "id": 18241,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "@pokeMultiple_17393": {
              "entryPoint": 3252,
              "id": 17393,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@poke_17341": {
              "entryPoint": 2257,
              "id": 17341,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@reveal_17128": {
              "entryPoint": 3909,
              "id": 17128,
              "parameterSlots": 7,
              "returnSlots": 0
            },
            "@toString_58": {
              "entryPoint": 9763,
              "id": 58,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@toString_86": {
              "entryPoint": 15754,
              "id": 86,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@toXY_18180": {
              "entryPoint": null,
              "id": 18180,
              "parameterSlots": 1,
              "returnSlots": 2
            },
            "@withdrawFromReserve_16989": {
              "entryPoint": 443,
              "id": 16989,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "abi_decode_array_struct_Move_calldata_dyn_calldata": {
              "entryPoint": 19168,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_bytes24": {
              "entryPoint": 18923,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_decode_enum_Color": {
              "entryPoint": 19936,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_decode_struct_Permit_calldata": {
              "entryPoint": 18971,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_addresst_bytes32t_array$_t_struct$_Move_$12633_calldata_ptr_$dyn_calldata_ptrt_bytes24": {
              "entryPoint": 19244,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 5
            },
            "abi_decode_tuple_t_addresst_bytes32t_array$_t_struct$_Move_$12633_calldata_ptr_$dyn_calldata_ptrt_bytes24t_boolt_address_payable": {
              "entryPoint": 19543,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 7
            },
            "abi_decode_tuple_t_array$_t_uint64_$dyn_calldata_ptr": {
              "entryPoint": 19357,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_bool_fromMemory": {
              "entryPoint": 19806,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_bytes24t_address_payable": {
              "entryPoint": 19474,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_bytes24t_uint256t_struct$_Permit_$12645_calldata_ptrt_address_payable": {
              "entryPoint": 19029,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 4
            },
            "abi_decode_tuple_t_struct$_Move_$12633_memory_ptr": {
              "entryPoint": 19951,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_uint256": {
              "entryPoint": 18898,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_uint256_fromMemory": {
              "entryPoint": 20915,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_uint256t_struct$_Permit_$12645_calldata_ptr": {
              "entryPoint": 19695,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_uint64": {
              "entryPoint": 19134,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_uint8": {
              "entryPoint": 19854,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_uint64": {
              "entryPoint": 19110,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_array_struct_Move_dyn": {
              "entryPoint": 20725,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_enum_Color": {
              "entryPoint": 20254,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_string": {
              "entryPoint": 21282,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": 21469,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_stringliteral_30d0f8b600d49986f2563cddae7358e5e960c84838d9eb7c5e2f006cfd840a44_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": 22428,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_stringliteral_47bdf7542cae4a2c6900ad06b173220c96c9ee8faf7e705d885b196a83d0903a_t_string_memory_ptr__to_t_bytes15_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": 20600,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_stringliteral_5d04fd474fa228970c9c97f90488f421437db10ef6e0ef26ba9246ae5b066cd7_t_string_memory_ptr__to_t_bytes6_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": 21061,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_stringliteral_9140deff73f837047c9fea8fff4e31d847aa43a6d44d0069e92b56aadec3e42b_t_string_memory_ptr__to_t_bytes30_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": 21918,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_stringliteral_f7fc1ade9bcf7d123bf3dc6c144d6c2cc89a205c07e8ea010f4dadb3ae6cf187_t_string_memory_ptr__to_t_bytes22_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": 20965,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 8,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_array$_t_struct$_Move_$12633_calldata_ptr_$dyn_calldata_ptr_t_bytes24_t_uint256__to_t_array$_t_struct$_Move_$12633_memory_ptr_$dyn_memory_ptr_t_bytes24_t_uint256__fromStack_reversed": {
              "entryPoint": 20313,
              "id": null,
              "parameterSlots": 5,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_bytes24__to_t_bytes24__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_bytes32_t_array$_t_struct$_Move_$12633_memory_ptr_$dyn_memory_ptr__to_t_bytes32_t_array$_t_struct$_Move_$12633_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
              "entryPoint": 20890,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_bytes32_t_array$_t_struct$_Move_$12633_memory_ptr_$dyn_memory_ptr_t_bytes24__to_t_bytes32_t_array$_t_struct$_Move_$12633_memory_ptr_$dyn_memory_ptr_t_bytes24__fromStack_reversed": {
              "entryPoint": 20815,
              "id": null,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_enum$_Color_$12626_t_enum$_Color_$12626__to_t_uint8_t_uint8__fromStack_reversed": {
              "entryPoint": 21034,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 21423,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed": {
              "entryPoint": 21658,
              "id": null,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 21833,
              "id": null,
              "parameterSlots": 5,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 21356,
              "id": null,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 21516,
              "id": null,
              "parameterSlots": 5,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed": {
              "entryPoint": 21604,
              "id": null,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint256_t_bytes24__to_t_uint256_t_bytes24__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "checked_add_t_int32": {
              "entryPoint": 21734,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_add_t_int8": {
              "entryPoint": 22365,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_add_t_uint24": {
              "entryPoint": 21192,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_add_t_uint256": {
              "entryPoint": 19835,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_add_t_uint64": {
              "entryPoint": 21800,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_add_t_uint8": {
              "entryPoint": 20669,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_div_t_uint256": {
              "entryPoint": 20509,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_div_t_uint8": {
              "entryPoint": 21130,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_exp_helper": {
              "entryPoint": 21987,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "checked_exp_t_uint256_t_uint256": {
              "entryPoint": 22290,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_exp_t_uint256_t_uint8": {
              "entryPoint": 22275,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_exp_unsigned": {
              "entryPoint": 22084,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_mul_t_uint256": {
              "entryPoint": 20081,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_mul_t_uint8": {
              "entryPoint": 21164,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_sub_t_int8": {
              "entryPoint": 22302,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_sub_t_uint24": {
              "entryPoint": 20529,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_sub_t_uint256": {
              "entryPoint": 19787,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_sub_t_uint8": {
              "entryPoint": 20940,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "copy_memory_to_memory_with_cleanup": {
              "entryPoint": 20564,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "increment_t_uint256": {
              "entryPoint": 20151,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "increment_t_uint8": {
              "entryPoint": 20694,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "negate_t_int8": {
              "entryPoint": 21220,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "panic_error_0x11": {
              "entryPoint": 19740,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x12": {
              "entryPoint": 20462,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x21": {
              "entryPoint": 20207,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x32": {
              "entryPoint": 20104,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x41": {
              "entryPoint": 19889,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x51": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "validator_revert_address_payable": {
              "entryPoint": 18995,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "validator_revert_bool": {
              "entryPoint": 19529,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            }
          },
          "generatedSources": [
            {
              "ast": {
                "nodeType": "YulBlock",
                "src": "0:25567:48",
                "statements": [
                  {
                    "nodeType": "YulBlock",
                    "src": "6:3:48",
                    "statements": []
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "84:110:48",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "130:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "139:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "142:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "132:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "132:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "132:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "105:7:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "114:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "101:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "101:23:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "126:2:48",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "97:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "97:32:48"
                          },
                          "nodeType": "YulIf",
                          "src": "94:52:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "155:33:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "178:9:48"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "165:12:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "165:23:48"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "155:6:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "50:9:48",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "61:7:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "73:6:48",
                        "type": ""
                      }
                    ],
                    "src": "14:180:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "248:171:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "258:29:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "280:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "267:12:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "267:20:48"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "258:5:48"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "397:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "406:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "409:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "399:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "399:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "399:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "309:5:48"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "320:5:48"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "327:66:48",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "316:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "316:78:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "306:2:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "306:89:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "299:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "299:97:48"
                          },
                          "nodeType": "YulIf",
                          "src": "296:117:48"
                        }
                      ]
                    },
                    "name": "abi_decode_bytes24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "227:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "238:5:48",
                        "type": ""
                      }
                    ],
                    "src": "199:220:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "493:86:48",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "533:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "542:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "545:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "535:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "535:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "535:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "514:3:48"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "519:6:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "510:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "510:16:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "528:3:48",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "506:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "506:26:48"
                          },
                          "nodeType": "YulIf",
                          "src": "503:46:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "558:15:48",
                          "value": {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "567:6:48"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "558:5:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_struct_Permit_calldata",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "467:6:48",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "475:3:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "483:5:48",
                        "type": ""
                      }
                    ],
                    "src": "424:155:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "637:109:48",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "724:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "733:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "736:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "726:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "726:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "726:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "660:5:48"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "671:5:48"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "678:42:48",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "667:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "667:54:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "657:2:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "657:65:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "650:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "650:73:48"
                          },
                          "nodeType": "YulIf",
                          "src": "647:93:48"
                        }
                      ]
                    },
                    "name": "validator_revert_address_payable",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "626:5:48",
                        "type": ""
                      }
                    ],
                    "src": "584:162:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "907:376:48",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "954:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "963:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "966:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "956:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "956:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "956:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "928:7:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "937:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "924:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "924:23:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "949:3:48",
                                "type": "",
                                "value": "256"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "920:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "920:33:48"
                          },
                          "nodeType": "YulIf",
                          "src": "917:53:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "979:39:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1008:9:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_bytes24",
                              "nodeType": "YulIdentifier",
                              "src": "989:18:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "989:29:48"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "979:6:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1027:42:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1054:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1065:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1050:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1050:18:48"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "1037:12:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1037:32:48"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1027:6:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1078:72:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1126:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1137:2:48",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1122:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1122:18:48"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1142:7:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_struct_Permit_calldata",
                              "nodeType": "YulIdentifier",
                              "src": "1088:33:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1088:62:48"
                          },
                          "variableNames": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1078:6:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "1159:46:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1189:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1200:3:48",
                                    "type": "",
                                    "value": "224"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1185:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1185:19:48"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "1172:12:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1172:33:48"
                          },
                          "variables": [
                            {
                              "name": "value",
                              "nodeType": "YulTypedName",
                              "src": "1163:5:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1247:5:48"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "1214:32:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1214:39:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1214:39:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1262:15:48",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1272:5:48"
                          },
                          "variableNames": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1262:6:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes24t_uint256t_struct$_Permit_$12645_calldata_ptrt_address_payable",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "849:9:48",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "860:7:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "872:6:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "880:6:48",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "888:6:48",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "896:6:48",
                        "type": ""
                      }
                    ],
                    "src": "751:532:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1336:123:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1346:29:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1368:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "1355:12:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1355:20:48"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1346:5:48"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1437:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1446:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1449:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "1439:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1439:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1439:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1397:5:48"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1408:5:48"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1415:18:48",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1404:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1404:30:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "1394:2:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1394:41:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1387:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1387:49:48"
                          },
                          "nodeType": "YulIf",
                          "src": "1384:69:48"
                        }
                      ]
                    },
                    "name": "abi_decode_uint64",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "1315:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1326:5:48",
                        "type": ""
                      }
                    ],
                    "src": "1288:171:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1533:115:48",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1579:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1588:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1591:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "1581:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1581:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1581:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1554:7:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1563:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1550:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1550:23:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1575:2:48",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1546:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1546:32:48"
                          },
                          "nodeType": "YulIf",
                          "src": "1543:52:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1604:38:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1632:9:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_uint64",
                              "nodeType": "YulIdentifier",
                              "src": "1614:17:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1614:28:48"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1604:6:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint64",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "1499:9:48",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "1510:7:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "1522:6:48",
                        "type": ""
                      }
                    ],
                    "src": "1464:184:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1750:283:48",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1799:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1808:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1811:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "1801:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1801:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1801:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1778:6:48"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1786:4:48",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1774:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1774:17:48"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "1793:3:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1770:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1770:27:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1763:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1763:35:48"
                          },
                          "nodeType": "YulIf",
                          "src": "1760:55:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1824:30:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1847:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "1834:12:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1834:20:48"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1824:6:48"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1897:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1906:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1909:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "1899:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1899:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1899:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1869:6:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1877:18:48",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "1866:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1866:30:48"
                          },
                          "nodeType": "YulIf",
                          "src": "1863:50:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1922:29:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1938:6:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1946:4:48",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1934:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1934:17:48"
                          },
                          "variableNames": [
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "1922:8:48"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2011:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2020:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2023:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "2013:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2013:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2013:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1974:6:48"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1986:1:48",
                                            "type": "",
                                            "value": "6"
                                          },
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "1989:6:48"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "1982:3:48"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1982:14:48"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1970:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1970:27:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1999:4:48",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1966:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1966:38:48"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "2006:3:48"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "1963:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1963:47:48"
                          },
                          "nodeType": "YulIf",
                          "src": "1960:67:48"
                        }
                      ]
                    },
                    "name": "abi_decode_array_struct_Move_calldata_dyn_calldata",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "1713:6:48",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "1721:3:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "arrayPos",
                        "nodeType": "YulTypedName",
                        "src": "1729:8:48",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "1739:6:48",
                        "type": ""
                      }
                    ],
                    "src": "1653:380:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2219:580:48",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2266:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2275:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2278:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "2268:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2268:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2268:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2240:7:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2249:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2236:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2236:23:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2261:3:48",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "2232:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2232:33:48"
                          },
                          "nodeType": "YulIf",
                          "src": "2229:53:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2291:36:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2317:9:48"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2304:12:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2304:23:48"
                          },
                          "variables": [
                            {
                              "name": "value",
                              "nodeType": "YulTypedName",
                              "src": "2295:5:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2369:5:48"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "2336:32:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2336:39:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2336:39:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2384:15:48",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2394:5:48"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2384:6:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2408:42:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2435:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2446:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2431:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2431:18:48"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2418:12:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2418:32:48"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2408:6:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2459:46:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2490:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2501:2:48",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2486:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2486:18:48"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2473:12:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2473:32:48"
                          },
                          "variables": [
                            {
                              "name": "offset",
                              "nodeType": "YulTypedName",
                              "src": "2463:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2548:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2557:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2560:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "2550:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2550:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2550:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2520:6:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2528:18:48",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "2517:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2517:30:48"
                          },
                          "nodeType": "YulIf",
                          "src": "2514:50:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2573:109:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2654:9:48"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2665:6:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2650:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2650:22:48"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2674:7:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_array_struct_Move_calldata_dyn_calldata",
                              "nodeType": "YulIdentifier",
                              "src": "2599:50:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2599:83:48"
                          },
                          "variables": [
                            {
                              "name": "value2_1",
                              "nodeType": "YulTypedName",
                              "src": "2577:8:48",
                              "type": ""
                            },
                            {
                              "name": "value3_1",
                              "nodeType": "YulTypedName",
                              "src": "2587:8:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2691:18:48",
                          "value": {
                            "name": "value2_1",
                            "nodeType": "YulIdentifier",
                            "src": "2701:8:48"
                          },
                          "variableNames": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2691:6:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2718:18:48",
                          "value": {
                            "name": "value3_1",
                            "nodeType": "YulIdentifier",
                            "src": "2728:8:48"
                          },
                          "variableNames": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "2718:6:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2745:48:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2778:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2789:2:48",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2774:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2774:18:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_bytes24",
                              "nodeType": "YulIdentifier",
                              "src": "2755:18:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2755:38:48"
                          },
                          "variableNames": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2745:6:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_bytes32t_array$_t_struct$_Move_$12633_calldata_ptr_$dyn_calldata_ptrt_bytes24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "2153:9:48",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "2164:7:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2176:6:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "2184:6:48",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "2192:6:48",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "2200:6:48",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "2208:6:48",
                        "type": ""
                      }
                    ],
                    "src": "2038:761:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2908:510:48",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2954:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2963:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2966:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "2956:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2956:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2956:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2929:7:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2938:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2925:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2925:23:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2950:2:48",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "2921:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2921:32:48"
                          },
                          "nodeType": "YulIf",
                          "src": "2918:52:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2979:37:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3006:9:48"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2993:12:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2993:23:48"
                          },
                          "variables": [
                            {
                              "name": "offset",
                              "nodeType": "YulTypedName",
                              "src": "2983:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "3025:28:48",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3035:18:48",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "3029:2:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3080:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3089:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3092:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "3082:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3082:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3082:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3068:6:48"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3076:2:48"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "3065:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3065:14:48"
                          },
                          "nodeType": "YulIf",
                          "src": "3062:34:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "3105:32:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3119:9:48"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3130:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3115:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3115:22:48"
                          },
                          "variables": [
                            {
                              "name": "_2",
                              "nodeType": "YulTypedName",
                              "src": "3109:2:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3185:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3194:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3197:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "3187:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3187:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3187:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "3164:2:48"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3168:4:48",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3160:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3160:13:48"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3175:7:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3156:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3156:27:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3149:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3149:35:48"
                          },
                          "nodeType": "YulIf",
                          "src": "3146:55:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "3210:30:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3237:2:48"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "3224:12:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3224:16:48"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "3214:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3267:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3276:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3279:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "3269:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3269:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3269:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "3255:6:48"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3263:2:48"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "3252:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3252:14:48"
                          },
                          "nodeType": "YulIf",
                          "src": "3249:34:48"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3341:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3350:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3353:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "3343:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3343:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3343:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "3306:2:48"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3314:1:48",
                                            "type": "",
                                            "value": "5"
                                          },
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "3317:6:48"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "3310:3:48"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3310:14:48"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3302:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3302:23:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3327:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3298:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3298:32:48"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3332:7:48"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "3295:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3295:45:48"
                          },
                          "nodeType": "YulIf",
                          "src": "3292:65:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3366:21:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3380:2:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3384:2:48",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3376:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3376:11:48"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3366:6:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3396:16:48",
                          "value": {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3406:6:48"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "3396:6:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_array$_t_uint64_$dyn_calldata_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "2866:9:48",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "2877:7:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2889:6:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "2897:6:48",
                        "type": ""
                      }
                    ],
                    "src": "2804:614:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3518:242:48",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3564:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3573:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3576:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "3566:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3566:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3566:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3539:7:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3548:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3535:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3535:23:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3560:2:48",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "3531:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3531:32:48"
                          },
                          "nodeType": "YulIf",
                          "src": "3528:52:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3589:39:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3618:9:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_bytes24",
                              "nodeType": "YulIdentifier",
                              "src": "3599:18:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3599:29:48"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3589:6:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "3637:45:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3667:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3678:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3663:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3663:18:48"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "3650:12:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3650:32:48"
                          },
                          "variables": [
                            {
                              "name": "value",
                              "nodeType": "YulTypedName",
                              "src": "3641:5:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3724:5:48"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "3691:32:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3691:39:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3691:39:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3739:15:48",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3749:5:48"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "3739:6:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes24t_address_payable",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "3476:9:48",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "3487:7:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "3499:6:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "3507:6:48",
                        "type": ""
                      }
                    ],
                    "src": "3423:337:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3807:76:48",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3861:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3870:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3873:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "3863:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3863:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3863:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3830:5:48"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "3851:5:48"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "3844:6:48"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3844:13:48"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "3837:6:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3837:21:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "3827:2:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3827:32:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3820:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3820:40:48"
                          },
                          "nodeType": "YulIf",
                          "src": "3817:60:48"
                        }
                      ]
                    },
                    "name": "validator_revert_bool",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "3796:5:48",
                        "type": ""
                      }
                    ],
                    "src": "3765:118:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4108:835:48",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4155:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4164:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4167:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "4157:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4157:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4157:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4129:7:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4138:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4125:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4125:23:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4150:3:48",
                                "type": "",
                                "value": "192"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "4121:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4121:33:48"
                          },
                          "nodeType": "YulIf",
                          "src": "4118:53:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "4180:36:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4206:9:48"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "4193:12:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4193:23:48"
                          },
                          "variables": [
                            {
                              "name": "value",
                              "nodeType": "YulTypedName",
                              "src": "4184:5:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4258:5:48"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "4225:32:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4225:39:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4225:39:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4273:15:48",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4283:5:48"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4273:6:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4297:42:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4324:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4335:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4320:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4320:18:48"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "4307:12:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4307:32:48"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "4297:6:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "4348:46:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4379:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4390:2:48",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4375:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4375:18:48"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "4362:12:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4362:32:48"
                          },
                          "variables": [
                            {
                              "name": "offset",
                              "nodeType": "YulTypedName",
                              "src": "4352:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4437:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4446:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4449:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "4439:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4439:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4439:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4409:6:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4417:18:48",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "4406:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4406:30:48"
                          },
                          "nodeType": "YulIf",
                          "src": "4403:50:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "4462:109:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4543:9:48"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "4554:6:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4539:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4539:22:48"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "4563:7:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_array_struct_Move_calldata_dyn_calldata",
                              "nodeType": "YulIdentifier",
                              "src": "4488:50:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4488:83:48"
                          },
                          "variables": [
                            {
                              "name": "value2_1",
                              "nodeType": "YulTypedName",
                              "src": "4466:8:48",
                              "type": ""
                            },
                            {
                              "name": "value3_1",
                              "nodeType": "YulTypedName",
                              "src": "4476:8:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4580:18:48",
                          "value": {
                            "name": "value2_1",
                            "nodeType": "YulIdentifier",
                            "src": "4590:8:48"
                          },
                          "variableNames": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "4580:6:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4607:18:48",
                          "value": {
                            "name": "value3_1",
                            "nodeType": "YulIdentifier",
                            "src": "4617:8:48"
                          },
                          "variableNames": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "4607:6:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4634:48:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4667:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4678:2:48",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4663:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4663:18:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_bytes24",
                              "nodeType": "YulIdentifier",
                              "src": "4644:18:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4644:38:48"
                          },
                          "variableNames": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "4634:6:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "4691:48:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4723:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4734:3:48",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4719:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4719:19:48"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "4706:12:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4706:33:48"
                          },
                          "variables": [
                            {
                              "name": "value_1",
                              "nodeType": "YulTypedName",
                              "src": "4695:7:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "4770:7:48"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_bool",
                              "nodeType": "YulIdentifier",
                              "src": "4748:21:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4748:30:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4748:30:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4787:17:48",
                          "value": {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "4797:7:48"
                          },
                          "variableNames": [
                            {
                              "name": "value5",
                              "nodeType": "YulIdentifier",
                              "src": "4787:6:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "4813:48:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4845:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4856:3:48",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4841:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4841:19:48"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "4828:12:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4828:33:48"
                          },
                          "variables": [
                            {
                              "name": "value_2",
                              "nodeType": "YulTypedName",
                              "src": "4817:7:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value_2",
                                "nodeType": "YulIdentifier",
                                "src": "4903:7:48"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "4870:32:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4870:41:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4870:41:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4920:17:48",
                          "value": {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "4930:7:48"
                          },
                          "variableNames": [
                            {
                              "name": "value6",
                              "nodeType": "YulIdentifier",
                              "src": "4920:6:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_bytes32t_array$_t_struct$_Move_$12633_calldata_ptr_$dyn_calldata_ptrt_bytes24t_boolt_address_payable",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "4026:9:48",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "4037:7:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "4049:6:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "4057:6:48",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "4065:6:48",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "4073:6:48",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "4081:6:48",
                        "type": ""
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulTypedName",
                        "src": "4089:6:48",
                        "type": ""
                      },
                      {
                        "name": "value6",
                        "nodeType": "YulTypedName",
                        "src": "4097:6:48",
                        "type": ""
                      }
                    ],
                    "src": "3888:1055:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5062:192:48",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "5109:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5118:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5121:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "5111:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5111:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "5111:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "5083:7:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5092:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "5079:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5079:23:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5104:3:48",
                                "type": "",
                                "value": "192"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "5075:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5075:33:48"
                          },
                          "nodeType": "YulIf",
                          "src": "5072:53:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "5134:33:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5157:9:48"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "5144:12:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5144:23:48"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5134:6:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "5176:72:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5224:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5235:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5220:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5220:18:48"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "5240:7:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_struct_Permit_calldata",
                              "nodeType": "YulIdentifier",
                              "src": "5186:33:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5186:62:48"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "5176:6:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint256t_struct$_Permit_$12645_calldata_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "5020:9:48",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "5031:7:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "5043:6:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "5051:6:48",
                        "type": ""
                      }
                    ],
                    "src": "4948:306:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5388:119:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "5398:26:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5410:9:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5421:2:48",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5406:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5406:18:48"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "5398:4:48"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5440:9:48"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5451:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5433:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5433:25:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5433:25:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5478:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5489:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5474:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5474:18:48"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "5494:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5467:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5467:34:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5467:34:48"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "5349:9:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "5360:6:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "5368:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "5379:4:48",
                        "type": ""
                      }
                    ],
                    "src": "5259:248:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5544:152:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5561:1:48",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5564:77:48",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5554:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5554:88:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5554:88:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5658:1:48",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5661:4:48",
                                "type": "",
                                "value": "0x11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5651:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5651:15:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5651:15:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5682:1:48",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5685:4:48",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "5675:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5675:15:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5675:15:48"
                        }
                      ]
                    },
                    "name": "panic_error_0x11",
                    "nodeType": "YulFunctionDefinition",
                    "src": "5512:184:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5750:79:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "5760:17:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "5772:1:48"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "5775:1:48"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5768:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5768:9:48"
                          },
                          "variableNames": [
                            {
                              "name": "diff",
                              "nodeType": "YulIdentifier",
                              "src": "5760:4:48"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "5801:22:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5803:16:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5803:18:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "5803:18:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "diff",
                                "nodeType": "YulIdentifier",
                                "src": "5792:4:48"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "5798:1:48"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "5789:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5789:11:48"
                          },
                          "nodeType": "YulIf",
                          "src": "5786:37:48"
                        }
                      ]
                    },
                    "name": "checked_sub_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "5732:1:48",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "5735:1:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "diff",
                        "nodeType": "YulTypedName",
                        "src": "5741:4:48",
                        "type": ""
                      }
                    ],
                    "src": "5701:128:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5963:168:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "5973:26:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5985:9:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5996:2:48",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5981:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5981:18:48"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "5973:4:48"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6015:9:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6030:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6038:42:48",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6026:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6026:55:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6008:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6008:74:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6008:74:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6102:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6113:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6098:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6098:18:48"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "6118:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6091:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6091:34:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6091:34:48"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "5924:9:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "5935:6:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "5943:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "5954:4:48",
                        "type": ""
                      }
                    ],
                    "src": "5834:297:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6214:167:48",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "6260:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6269:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6272:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "6262:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6262:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "6262:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "6235:7:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6244:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "6231:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6231:23:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6256:2:48",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "6227:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6227:32:48"
                          },
                          "nodeType": "YulIf",
                          "src": "6224:52:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "6285:29:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6304:9:48"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "6298:5:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6298:16:48"
                          },
                          "variables": [
                            {
                              "name": "value",
                              "nodeType": "YulTypedName",
                              "src": "6289:5:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6345:5:48"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_bool",
                              "nodeType": "YulIdentifier",
                              "src": "6323:21:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6323:28:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6323:28:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "6360:15:48",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6370:5:48"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "6360:6:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bool_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "6180:9:48",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "6191:7:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "6203:6:48",
                        "type": ""
                      }
                    ],
                    "src": "6136:245:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6434:77:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "6444:16:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6455:1:48"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "6458:1:48"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6451:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6451:9:48"
                          },
                          "variableNames": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "6444:3:48"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "6483:22:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6485:16:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6485:18:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "6485:18:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6475:1:48"
                              },
                              {
                                "name": "sum",
                                "nodeType": "YulIdentifier",
                                "src": "6478:3:48"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "6472:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6472:10:48"
                          },
                          "nodeType": "YulIf",
                          "src": "6469:36:48"
                        }
                      ]
                    },
                    "name": "checked_add_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "6417:1:48",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "6420:1:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "sum",
                        "nodeType": "YulTypedName",
                        "src": "6426:3:48",
                        "type": ""
                      }
                    ],
                    "src": "6386:125:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6584:201:48",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "6630:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6639:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6642:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "6632:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6632:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "6632:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "6605:7:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6614:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "6601:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6601:23:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6626:2:48",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "6597:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6597:32:48"
                          },
                          "nodeType": "YulIf",
                          "src": "6594:52:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "6655:36:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6681:9:48"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "6668:12:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6668:23:48"
                          },
                          "variables": [
                            {
                              "name": "value",
                              "nodeType": "YulTypedName",
                              "src": "6659:5:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "6739:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6748:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6751:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "6741:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6741:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "6741:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6713:5:48"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6724:5:48"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6731:4:48",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6720:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6720:16:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "6710:2:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6710:27:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6703:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6703:35:48"
                          },
                          "nodeType": "YulIf",
                          "src": "6700:55:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "6764:15:48",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6774:5:48"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "6764:6:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint8",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "6550:9:48",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "6561:7:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "6573:6:48",
                        "type": ""
                      }
                    ],
                    "src": "6516:269:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7055:428:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "7065:27:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7077:9:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7088:3:48",
                                "type": "",
                                "value": "224"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7073:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7073:19:48"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "7065:4:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "7101:52:48",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7111:42:48",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "7105:2:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7169:9:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7184:6:48"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7192:2:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "7180:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7180:15:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7162:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7162:34:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7162:34:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7216:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7227:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7212:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7212:18:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7236:6:48"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7244:2:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "7232:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7232:15:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7205:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7205:43:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7205:43:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7268:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7279:2:48",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7264:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7264:18:48"
                              },
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "7284:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7257:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7257:34:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7257:34:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7311:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7322:2:48",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7307:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7307:18:48"
                              },
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "7327:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7300:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7300:34:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7300:34:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7354:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7365:3:48",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7350:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7350:19:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "7375:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7383:4:48",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "7371:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7371:17:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7343:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7343:46:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7343:46:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7409:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7420:3:48",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7405:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7405:19:48"
                              },
                              {
                                "name": "value5",
                                "nodeType": "YulIdentifier",
                                "src": "7426:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7398:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7398:35:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7398:35:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7453:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7464:3:48",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7449:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7449:19:48"
                              },
                              {
                                "name": "value6",
                                "nodeType": "YulIdentifier",
                                "src": "7470:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7442:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7442:35:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7442:35:48"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "6976:9:48",
                        "type": ""
                      },
                      {
                        "name": "value6",
                        "nodeType": "YulTypedName",
                        "src": "6987:6:48",
                        "type": ""
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulTypedName",
                        "src": "6995:6:48",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "7003:6:48",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "7011:6:48",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "7019:6:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "7027:6:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "7035:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "7046:4:48",
                        "type": ""
                      }
                    ],
                    "src": "6790:693:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7645:241:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "7655:26:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7667:9:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7678:2:48",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7663:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7663:18:48"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "7655:4:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "7690:52:48",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7700:42:48",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "7694:2:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7758:9:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7773:6:48"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7781:2:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "7769:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7769:15:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7751:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7751:34:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7751:34:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7805:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7816:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7801:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7801:18:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7825:6:48"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7833:2:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "7821:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7821:15:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7794:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7794:43:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7794:43:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7857:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7868:2:48",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7853:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7853:18:48"
                              },
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "7873:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7846:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7846:34:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7846:34:48"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "7598:9:48",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "7609:6:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "7617:6:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "7625:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "7636:4:48",
                        "type": ""
                      }
                    ],
                    "src": "7488:398:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8028:168:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "8038:26:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8050:9:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8061:2:48",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8046:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8046:18:48"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "8038:4:48"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8080:9:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "8095:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8103:42:48",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "8091:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8091:55:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8073:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8073:74:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8073:74:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8167:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8178:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8163:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8163:18:48"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "8183:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8156:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8156:34:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8156:34:48"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "7989:9:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "8000:6:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "8008:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "8019:4:48",
                        "type": ""
                      }
                    ],
                    "src": "7891:305:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8330:192:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "8340:26:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8352:9:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8363:2:48",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8348:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8348:18:48"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "8340:4:48"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8382:9:48"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "8393:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8375:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8375:25:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8375:25:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8420:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8431:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8416:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8416:18:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8440:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8448:66:48",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "8436:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8436:79:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8409:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8409:107:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8409:107:48"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint256_t_bytes24__to_t_uint256_t_bytes24__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "8291:9:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "8302:6:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "8310:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "8321:4:48",
                        "type": ""
                      }
                    ],
                    "src": "8201:321:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8559:152:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8576:1:48",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8579:77:48",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8569:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8569:88:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8569:88:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8673:1:48",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8676:4:48",
                                "type": "",
                                "value": "0x41"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8666:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8666:15:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8666:15:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8697:1:48",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8700:4:48",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "8690:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8690:15:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8690:15:48"
                        }
                      ]
                    },
                    "name": "panic_error_0x41",
                    "nodeType": "YulFunctionDefinition",
                    "src": "8527:184:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8768:94:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "8778:29:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8800:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "8787:12:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8787:20:48"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "8778:5:48"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "8840:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8849:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8852:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "8842:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8842:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "8842:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8829:5:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8836:1:48",
                                    "type": "",
                                    "value": "7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8826:2:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8826:12:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8819:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8819:20:48"
                          },
                          "nodeType": "YulIf",
                          "src": "8816:40:48"
                        }
                      ]
                    },
                    "name": "abi_decode_enum_Color",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "8747:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "8758:5:48",
                        "type": ""
                      }
                    ],
                    "src": "8716:146:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8960:577:48",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "9006:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9015:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9018:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "9008:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9008:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "9008:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8981:7:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8990:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "8977:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8977:23:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9002:2:48",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "8973:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8973:32:48"
                          },
                          "nodeType": "YulIf",
                          "src": "8970:52:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "9031:23:48",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9051:2:48",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "9045:5:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9045:9:48"
                          },
                          "variables": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulTypedName",
                              "src": "9035:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "9063:33:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "9085:6:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9093:2:48",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9081:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9081:15:48"
                          },
                          "variables": [
                            {
                              "name": "newFreePtr",
                              "nodeType": "YulTypedName",
                              "src": "9067:10:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "9179:168:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9200:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9203:77:48",
                                      "type": "",
                                      "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "9193:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9193:88:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "9193:88:48"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9301:1:48",
                                      "type": "",
                                      "value": "4"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9304:4:48",
                                      "type": "",
                                      "value": "0x41"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "9294:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9294:15:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "9294:15:48"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9329:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9332:4:48",
                                      "type": "",
                                      "value": "0x24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "9322:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9322:15:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "9322:15:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "9114:10:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9126:18:48",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9111:2:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9111:34:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "9150:10:48"
                                  },
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "9162:6:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9147:2:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9147:22:48"
                              }
                            ],
                            "functionName": {
                              "name": "or",
                              "nodeType": "YulIdentifier",
                              "src": "9108:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9108:62:48"
                          },
                          "nodeType": "YulIf",
                          "src": "9105:242:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9363:2:48",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "9367:10:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9356:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9356:22:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9356:22:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "9394:6:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9420:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint64",
                                  "nodeType": "YulIdentifier",
                                  "src": "9402:17:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9402:28:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9387:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9387:44:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9387:44:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "9451:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9459:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9447:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9447:15:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9490:9:48"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9501:2:48",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9486:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9486:18:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_enum_Color",
                                  "nodeType": "YulIdentifier",
                                  "src": "9464:21:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9464:41:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9440:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9440:66:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9440:66:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9515:16:48",
                          "value": {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9525:6:48"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "9515:6:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_struct$_Move_$12633_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "8926:9:48",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "8937:7:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "8949:6:48",
                        "type": ""
                      }
                    ],
                    "src": "8867:670:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9594:116:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "9604:20:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "9619:1:48"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "9622:1:48"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "9615:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9615:9:48"
                          },
                          "variableNames": [
                            {
                              "name": "product",
                              "nodeType": "YulIdentifier",
                              "src": "9604:7:48"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "9682:22:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "9684:16:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9684:18:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "9684:18:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "9653:1:48"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "9646:6:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9646:9:48"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "9660:1:48"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "product",
                                            "nodeType": "YulIdentifier",
                                            "src": "9667:7:48"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "9676:1:48"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "9663:3:48"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9663:15:48"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "9657:2:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9657:22:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "9643:2:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9643:37:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "9636:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9636:45:48"
                          },
                          "nodeType": "YulIf",
                          "src": "9633:71:48"
                        }
                      ]
                    },
                    "name": "checked_mul_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "9573:1:48",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "9576:1:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "product",
                        "nodeType": "YulTypedName",
                        "src": "9582:7:48",
                        "type": ""
                      }
                    ],
                    "src": "9542:168:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9747:152:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9764:1:48",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9767:77:48",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9757:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9757:88:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9757:88:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9861:1:48",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9864:4:48",
                                "type": "",
                                "value": "0x32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9854:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9854:15:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9854:15:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9885:1:48",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9888:4:48",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "9878:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9878:15:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9878:15:48"
                        }
                      ]
                    },
                    "name": "panic_error_0x32",
                    "nodeType": "YulFunctionDefinition",
                    "src": "9715:184:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9951:148:48",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "10042:22:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "10044:16:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10044:18:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "10044:18:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9967:5:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9974:66:48",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "9964:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9964:77:48"
                          },
                          "nodeType": "YulIf",
                          "src": "9961:103:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10073:20:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10084:5:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10091:1:48",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10080:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10080:13:48"
                          },
                          "variableNames": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "10073:3:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "increment_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "9933:5:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "ret",
                        "nodeType": "YulTypedName",
                        "src": "9943:3:48",
                        "type": ""
                      }
                    ],
                    "src": "9904:195:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10136:152:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10153:1:48",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10156:77:48",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10146:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10146:88:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10146:88:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10250:1:48",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10253:4:48",
                                "type": "",
                                "value": "0x21"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10243:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10243:15:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10243:15:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10274:1:48",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10277:4:48",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "10267:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10267:15:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10267:15:48"
                        }
                      ]
                    },
                    "name": "panic_error_0x21",
                    "nodeType": "YulFunctionDefinition",
                    "src": "10104:184:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10340:243:48",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "10382:168:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10403:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10406:77:48",
                                      "type": "",
                                      "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "10396:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10396:88:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "10396:88:48"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10504:1:48",
                                      "type": "",
                                      "value": "4"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10507:4:48",
                                      "type": "",
                                      "value": "0x21"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "10497:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10497:15:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "10497:15:48"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10532:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10535:4:48",
                                      "type": "",
                                      "value": "0x24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "10525:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10525:15:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "10525:15:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10363:5:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10370:1:48",
                                    "type": "",
                                    "value": "7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "10360:2:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10360:12:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "10353:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10353:20:48"
                          },
                          "nodeType": "YulIf",
                          "src": "10350:200:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10566:3:48"
                              },
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10571:5:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10559:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10559:18:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10559:18:48"
                        }
                      ]
                    },
                    "name": "abi_encode_enum_Color",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "10324:5:48",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "10331:3:48",
                        "type": ""
                      }
                    ],
                    "src": "10293:290:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10853:803:48",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "10863:32:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10881:9:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10892:2:48",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10877:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10877:18:48"
                          },
                          "variables": [
                            {
                              "name": "tail_1",
                              "nodeType": "YulTypedName",
                              "src": "10867:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10911:9:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10922:2:48",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10904:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10904:21:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10904:21:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "10934:17:48",
                          "value": {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "10945:6:48"
                          },
                          "variables": [
                            {
                              "name": "pos",
                              "nodeType": "YulTypedName",
                              "src": "10938:3:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "10967:6:48"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "10975:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10960:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10960:22:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10960:22:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10991:26:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11002:9:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11013:3:48",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10998:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10998:19:48"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "10991:3:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "11026:20:48",
                          "value": {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11040:6:48"
                          },
                          "variables": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulTypedName",
                              "src": "11030:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "11055:10:48",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11064:1:48",
                            "type": "",
                            "value": "0"
                          },
                          "variables": [
                            {
                              "name": "i",
                              "nodeType": "YulTypedName",
                              "src": "11059:1:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "11123:344:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "11144:3:48"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "srcPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "11171:6:48"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "abi_decode_uint64",
                                            "nodeType": "YulIdentifier",
                                            "src": "11153:17:48"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11153:25:48"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11180:18:48",
                                          "type": "",
                                          "value": "0xffffffffffffffff"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "11149:3:48"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11149:50:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "11137:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11137:63:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "11137:63:48"
                              },
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "11213:14:48",
                                "value": {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11223:4:48",
                                  "type": "",
                                  "value": "0x20"
                                },
                                "variables": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulTypedName",
                                    "src": "11217:2:48",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "11240:58:48",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "11286:6:48"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "11294:2:48"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "11282:3:48"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11282:15:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_enum_Color",
                                    "nodeType": "YulIdentifier",
                                    "src": "11260:21:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11260:38:48"
                                },
                                "variables": [
                                  {
                                    "name": "memberValue0",
                                    "nodeType": "YulTypedName",
                                    "src": "11244:12:48",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulIdentifier",
                                      "src": "11333:12:48"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "11351:3:48"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "11356:2:48"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "11347:3:48"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11347:12:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_encode_enum_Color",
                                    "nodeType": "YulIdentifier",
                                    "src": "11311:21:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11311:49:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "11311:49:48"
                              },
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "11373:14:48",
                                "value": {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11383:4:48",
                                  "type": "",
                                  "value": "0x40"
                                },
                                "variables": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulTypedName",
                                    "src": "11377:2:48",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulAssignment",
                                "src": "11400:19:48",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "11411:3:48"
                                    },
                                    {
                                      "name": "_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "11416:2:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "11407:3:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11407:12:48"
                                },
                                "variableNames": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11400:3:48"
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulAssignment",
                                "src": "11432:25:48",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "11446:6:48"
                                    },
                                    {
                                      "name": "_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "11454:2:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "11442:3:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11442:15:48"
                                },
                                "variableNames": [
                                  {
                                    "name": "srcPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "11432:6:48"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "11085:1:48"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "11088:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "11082:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11082:13:48"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "11096:18:48",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "11098:14:48",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "11107:1:48"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "11110:1:48",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "11103:3:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11103:9:48"
                                },
                                "variableNames": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "11098:1:48"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "11078:3:48",
                            "statements": []
                          },
                          "src": "11074:393:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "11476:11:48",
                          "value": {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "11484:3:48"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "11476:4:48"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11507:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11518:4:48",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11503:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11503:20:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "11529:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11537:66:48",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "11525:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11525:79:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11496:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11496:109:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11496:109:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11625:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11636:4:48",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11621:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11621:20:48"
                              },
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "11643:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11614:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11614:36:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11614:36:48"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_array$_t_struct$_Move_$12633_calldata_ptr_$dyn_calldata_ptr_t_bytes24_t_uint256__to_t_array$_t_struct$_Move_$12633_memory_ptr_$dyn_memory_ptr_t_bytes24_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "10798:9:48",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "10809:6:48",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "10817:6:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "10825:6:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "10833:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "10844:4:48",
                        "type": ""
                      }
                    ],
                    "src": "10588:1068:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11693:152:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11710:1:48",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11713:77:48",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11703:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11703:88:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11703:88:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11807:1:48",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11810:4:48",
                                "type": "",
                                "value": "0x12"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11800:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11800:15:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11800:15:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11831:1:48",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11834:4:48",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "11824:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11824:15:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11824:15:48"
                        }
                      ]
                    },
                    "name": "panic_error_0x12",
                    "nodeType": "YulFunctionDefinition",
                    "src": "11661:184:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11896:74:48",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "11919:22:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x12",
                                    "nodeType": "YulIdentifier",
                                    "src": "11921:16:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11921:18:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "11921:18:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "11916:1:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "11909:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11909:9:48"
                          },
                          "nodeType": "YulIf",
                          "src": "11906:35:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "11950:14:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11959:1:48"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "11962:1:48"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "11955:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11955:9:48"
                          },
                          "variableNames": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "11950:1:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_div_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "11881:1:48",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "11884:1:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "r",
                        "nodeType": "YulTypedName",
                        "src": "11890:1:48",
                        "type": ""
                      }
                    ],
                    "src": "11850:120:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12023:125:48",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "12033:18:48",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12043:8:48",
                            "type": "",
                            "value": "0xffffff"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "12037:2:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "12060:35:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12076:1:48"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "12079:2:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "12072:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12072:10:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "12088:1:48"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "12091:2:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "12084:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12084:10:48"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "12068:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12068:27:48"
                          },
                          "variableNames": [
                            {
                              "name": "diff",
                              "nodeType": "YulIdentifier",
                              "src": "12060:4:48"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "12120:22:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "12122:16:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12122:18:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "12122:18:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "diff",
                                "nodeType": "YulIdentifier",
                                "src": "12110:4:48"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "12116:2:48"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "12107:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12107:12:48"
                          },
                          "nodeType": "YulIf",
                          "src": "12104:38:48"
                        }
                      ]
                    },
                    "name": "checked_sub_t_uint24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "12005:1:48",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "12008:1:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "diff",
                        "nodeType": "YulTypedName",
                        "src": "12014:4:48",
                        "type": ""
                      }
                    ],
                    "src": "11975:173:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12254:149:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "12264:26:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12276:9:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12287:2:48",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12272:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12272:18:48"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "12264:4:48"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12306:9:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "12321:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12329:66:48",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "12317:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12317:79:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12299:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12299:98:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12299:98:48"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_bytes24__to_t_bytes24__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "12223:9:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "12234:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "12245:4:48",
                        "type": ""
                      }
                    ],
                    "src": "12153:250:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12474:184:48",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "12484:10:48",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12493:1:48",
                            "type": "",
                            "value": "0"
                          },
                          "variables": [
                            {
                              "name": "i",
                              "nodeType": "YulTypedName",
                              "src": "12488:1:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "12553:63:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "12578:3:48"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "12583:1:48"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "12574:3:48"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12574:11:48"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "12597:3:48"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "12602:1:48"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "12593:3:48"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "12593:11:48"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "12587:5:48"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12587:18:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "12567:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12567:39:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "12567:39:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "12514:1:48"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "12517:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12511:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12511:13:48"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "12525:19:48",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "12527:15:48",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "12536:1:48"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "12539:2:48",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "12532:3:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12532:10:48"
                                },
                                "variableNames": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "12527:1:48"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "12507:3:48",
                            "statements": []
                          },
                          "src": "12503:113:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "12636:3:48"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "12641:6:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12632:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12632:16:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12650:1:48",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12625:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12625:27:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12625:27:48"
                        }
                      ]
                    },
                    "name": "copy_memory_to_memory_with_cleanup",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "src",
                        "nodeType": "YulTypedName",
                        "src": "12452:3:48",
                        "type": ""
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulTypedName",
                        "src": "12457:3:48",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "12462:6:48",
                        "type": ""
                      }
                    ],
                    "src": "12408:250:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12893:207:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12910:3:48"
                              },
                              {
                                "hexValue": "5f706f6b652061742065706f636820",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "12915:17:48",
                                "type": "",
                                "value": "_poke at epoch "
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12903:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12903:30:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12903:30:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "12942:27:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "12962:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "12956:5:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12956:13:48"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "12946:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "13017:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13025:4:48",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13013:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13013:17:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13036:3:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13041:2:48",
                                    "type": "",
                                    "value": "15"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13032:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13032:12:48"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "13046:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory_with_cleanup",
                              "nodeType": "YulIdentifier",
                              "src": "12978:34:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12978:75:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12978:75:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "13062:32:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13077:3:48"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "13082:6:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13073:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13073:16:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13091:2:48",
                                "type": "",
                                "value": "15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13069:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13069:25:48"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "13062:3:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_stringliteral_47bdf7542cae4a2c6900ad06b173220c96c9ee8faf7e705d885b196a83d0903a_t_string_memory_ptr__to_t_bytes15_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "12869:3:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "12874:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "12885:3:48",
                        "type": ""
                      }
                    ],
                    "src": "12663:437:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "13151:102:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "13161:38:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "13176:1:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13179:4:48",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "13172:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13172:12:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "13190:1:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13193:4:48",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "13186:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13186:12:48"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13168:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13168:31:48"
                          },
                          "variableNames": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "13161:3:48"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "13225:22:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "13227:16:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13227:18:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "13227:18:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "sum",
                                "nodeType": "YulIdentifier",
                                "src": "13214:3:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13219:4:48",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "13211:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13211:13:48"
                          },
                          "nodeType": "YulIf",
                          "src": "13208:39:48"
                        }
                      ]
                    },
                    "name": "checked_add_t_uint8",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "13134:1:48",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "13137:1:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "sum",
                        "nodeType": "YulTypedName",
                        "src": "13143:3:48",
                        "type": ""
                      }
                    ],
                    "src": "13105:148:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "13303:130:48",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "13313:31:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13332:5:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13339:4:48",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "13328:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13328:16:48"
                          },
                          "variables": [
                            {
                              "name": "value_1",
                              "nodeType": "YulTypedName",
                              "src": "13317:7:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "13374:22:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "13376:16:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13376:18:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "13376:18:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "13359:7:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13368:4:48",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "13356:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13356:17:48"
                          },
                          "nodeType": "YulIf",
                          "src": "13353:43:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "13405:22:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "13416:7:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13425:1:48",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13412:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13412:15:48"
                          },
                          "variableNames": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "13405:3:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "increment_t_uint8",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "13285:5:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "ret",
                        "nodeType": "YulTypedName",
                        "src": "13295:3:48",
                        "type": ""
                      }
                    ],
                    "src": "13258:175:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "13503:546:48",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "13513:26:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13533:5:48"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "13527:5:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13527:12:48"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "13517:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13555:3:48"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "13560:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13548:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13548:19:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13548:19:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "13576:14:48",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13586:4:48",
                            "type": "",
                            "value": "0x20"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "13580:2:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "13599:19:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13610:3:48"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "13615:2:48"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13606:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13606:12:48"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "13599:3:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "13627:28:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13645:5:48"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "13652:2:48"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13641:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13641:14:48"
                          },
                          "variables": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulTypedName",
                              "src": "13631:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "13664:10:48",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13673:1:48",
                            "type": "",
                            "value": "0"
                          },
                          "variables": [
                            {
                              "name": "i",
                              "nodeType": "YulTypedName",
                              "src": "13668:1:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "13732:292:48",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "13746:23:48",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "13762:6:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "13756:5:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13756:13:48"
                                },
                                "variables": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulTypedName",
                                    "src": "13750:2:48",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "13789:3:48"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "13804:2:48"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "13798:5:48"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "13798:9:48"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "13809:18:48",
                                          "type": "",
                                          "value": "0xffffffffffffffff"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "13794:3:48"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13794:34:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "13782:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13782:47:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "13782:47:48"
                              },
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "13842:38:48",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "13872:2:48"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "13876:2:48"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "13868:3:48"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13868:11:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "13862:5:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13862:18:48"
                                },
                                "variables": [
                                  {
                                    "name": "memberValue0",
                                    "nodeType": "YulTypedName",
                                    "src": "13846:12:48",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulIdentifier",
                                      "src": "13915:12:48"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "13933:3:48"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "13938:2:48"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "13929:3:48"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13929:12:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_encode_enum_Color",
                                    "nodeType": "YulIdentifier",
                                    "src": "13893:21:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13893:49:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "13893:49:48"
                              },
                              {
                                "nodeType": "YulAssignment",
                                "src": "13955:21:48",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "13966:3:48"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "13971:4:48",
                                      "type": "",
                                      "value": "0x40"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "13962:3:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13962:14:48"
                                },
                                "variableNames": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13955:3:48"
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulAssignment",
                                "src": "13989:25:48",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "14003:6:48"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "14011:2:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "13999:3:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13999:15:48"
                                },
                                "variableNames": [
                                  {
                                    "name": "srcPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "13989:6:48"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "13694:1:48"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "13697:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "13691:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13691:13:48"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "13705:18:48",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "13707:14:48",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "13716:1:48"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "13719:1:48",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "13712:3:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13712:9:48"
                                },
                                "variableNames": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "13707:1:48"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "13687:3:48",
                            "statements": []
                          },
                          "src": "13683:341:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "14033:10:48",
                          "value": {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14040:3:48"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "14033:3:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_array_struct_Move_dyn",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "13480:5:48",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "13487:3:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "13495:3:48",
                        "type": ""
                      }
                    ],
                    "src": "13438:611:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "14307:273:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14324:9:48"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "14335:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14317:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14317:25:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14317:25:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14362:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14373:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14358:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14358:18:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14378:2:48",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14351:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14351:30:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14351:30:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "14390:68:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "14431:6:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14443:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14454:2:48",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14439:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14439:18:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_array_struct_Move_dyn",
                              "nodeType": "YulIdentifier",
                              "src": "14398:32:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14398:60:48"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "14390:4:48"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14478:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14489:2:48",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14474:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14474:18:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "14498:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14506:66:48",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "14494:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14494:79:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14467:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14467:107:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14467:107:48"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_bytes32_t_array$_t_struct$_Move_$12633_memory_ptr_$dyn_memory_ptr_t_bytes24__to_t_bytes32_t_array$_t_struct$_Move_$12633_memory_ptr_$dyn_memory_ptr_t_bytes24__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "14260:9:48",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "14271:6:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "14279:6:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "14287:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "14298:4:48",
                        "type": ""
                      }
                    ],
                    "src": "14054:526:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "14810:157:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14827:9:48"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "14838:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14820:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14820:25:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14820:25:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14865:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14876:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14861:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14861:18:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14881:2:48",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14854:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14854:30:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14854:30:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "14893:68:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "14934:6:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14946:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14957:2:48",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14942:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14942:18:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_array_struct_Move_dyn",
                              "nodeType": "YulIdentifier",
                              "src": "14901:32:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14901:60:48"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "14893:4:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_bytes32_t_array$_t_struct$_Move_$12633_memory_ptr_$dyn_memory_ptr__to_t_bytes32_t_array$_t_struct$_Move_$12633_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "14771:9:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "14782:6:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "14790:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "14801:4:48",
                        "type": ""
                      }
                    ],
                    "src": "14585:382:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15137:241:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "15147:26:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15159:9:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15170:2:48",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15155:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15155:18:48"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "15147:4:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "15182:52:48",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15192:42:48",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "15186:2:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15250:9:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "15265:6:48"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "15273:2:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "15261:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15261:15:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15243:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15243:34:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15243:34:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15297:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15308:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15293:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15293:18:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "15317:6:48"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "15325:2:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "15313:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15313:15:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15286:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15286:43:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15286:43:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15349:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15360:2:48",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15345:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15345:18:48"
                              },
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "15365:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15338:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15338:34:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15338:34:48"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "15090:9:48",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "15101:6:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "15109:6:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "15117:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "15128:4:48",
                        "type": ""
                      }
                    ],
                    "src": "14972:406:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15464:103:48",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "15510:16:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "15519:1:48",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "15522:1:48",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "15512:6:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "15512:12:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "15512:12:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "15485:7:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15494:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "15481:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15481:23:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15506:2:48",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "15477:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15477:32:48"
                          },
                          "nodeType": "YulIf",
                          "src": "15474:52:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "15535:26:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15551:9:48"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "15545:5:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15545:16:48"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "15535:6:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint256_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "15430:9:48",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "15441:7:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "15453:6:48",
                        "type": ""
                      }
                    ],
                    "src": "15383:184:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15619:104:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "15629:39:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "15645:1:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15648:4:48",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "15641:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15641:12:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "15659:1:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15662:4:48",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "15655:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15655:12:48"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "15637:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15637:31:48"
                          },
                          "variableNames": [
                            {
                              "name": "diff",
                              "nodeType": "YulIdentifier",
                              "src": "15629:4:48"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "15695:22:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "15697:16:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "15697:18:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "15697:18:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "diff",
                                "nodeType": "YulIdentifier",
                                "src": "15683:4:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15689:4:48",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "15680:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15680:14:48"
                          },
                          "nodeType": "YulIf",
                          "src": "15677:40:48"
                        }
                      ]
                    },
                    "name": "checked_sub_t_uint8",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "15601:1:48",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "15604:1:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "diff",
                        "nodeType": "YulTypedName",
                        "src": "15610:4:48",
                        "type": ""
                      }
                    ],
                    "src": "15572:151:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15958:214:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15975:3:48"
                              },
                              {
                                "hexValue": "5f636f6d707574654d6f76652061742065706f636820",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "15980:24:48",
                                "type": "",
                                "value": "_computeMove at epoch "
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15968:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15968:37:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15968:37:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "16014:27:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "16034:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "16028:5:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16028:13:48"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "16018:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "16089:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16097:4:48",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16085:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16085:17:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16108:3:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16113:2:48",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16104:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16104:12:48"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "16118:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory_with_cleanup",
                              "nodeType": "YulIdentifier",
                              "src": "16050:34:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16050:75:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16050:75:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "16134:32:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16149:3:48"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "16154:6:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16145:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16145:16:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16163:2:48",
                                "type": "",
                                "value": "22"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16141:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16141:25:48"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "16134:3:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_stringliteral_f7fc1ade9bcf7d123bf3dc6c144d6c2cc89a205c07e8ea010f4dadb3ae6cf187_t_string_memory_ptr__to_t_bytes22_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "15934:3:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "15939:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "15950:3:48",
                        "type": ""
                      }
                    ],
                    "src": "15728:444:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "16324:149:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "16334:26:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16346:9:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16357:2:48",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16342:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16342:18:48"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "16334:4:48"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "16391:6:48"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16399:9:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_enum_Color",
                              "nodeType": "YulIdentifier",
                              "src": "16369:21:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16369:40:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16369:40:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "16440:6:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16452:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16463:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16448:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16448:18:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_enum_Color",
                              "nodeType": "YulIdentifier",
                              "src": "16418:21:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16418:49:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16418:49:48"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_enum$_Color_$12626_t_enum$_Color_$12626__to_t_uint8_t_uint8__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "16285:9:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "16296:6:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "16304:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "16315:4:48",
                        "type": ""
                      }
                    ],
                    "src": "16177:296:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "16707:196:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16724:3:48"
                              },
                              {
                                "hexValue": "414654455220",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "16729:8:48",
                                "type": "",
                                "value": "AFTER "
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16717:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16717:21:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16717:21:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "16747:27:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "16767:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "16761:5:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16761:13:48"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "16751:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "16822:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16830:4:48",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16818:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16818:17:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16841:3:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16846:1:48",
                                    "type": "",
                                    "value": "6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16837:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16837:11:48"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "16850:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory_with_cleanup",
                              "nodeType": "YulIdentifier",
                              "src": "16783:34:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16783:74:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16783:74:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "16866:31:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16881:3:48"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "16886:6:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16877:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16877:16:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16895:1:48",
                                "type": "",
                                "value": "6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16873:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16873:24:48"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "16866:3:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_stringliteral_5d04fd474fa228970c9c97f90488f421437db10ef6e0ef26ba9246ae5b066cd7_t_string_memory_ptr__to_t_bytes6_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "16683:3:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "16688:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "16699:3:48",
                        "type": ""
                      }
                    ],
                    "src": "16478:425:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "16952:121:48",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "16962:23:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "16977:1:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16980:4:48",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "16973:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16973:12:48"
                          },
                          "variables": [
                            {
                              "name": "y_1",
                              "nodeType": "YulTypedName",
                              "src": "16966:3:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "17009:22:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x12",
                                    "nodeType": "YulIdentifier",
                                    "src": "17011:16:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "17011:18:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "17011:18:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "y_1",
                                "nodeType": "YulIdentifier",
                                "src": "17004:3:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "16997:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16997:11:48"
                          },
                          "nodeType": "YulIf",
                          "src": "16994:37:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "17040:27:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "17053:1:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17056:4:48",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "17049:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17049:12:48"
                              },
                              {
                                "name": "y_1",
                                "nodeType": "YulIdentifier",
                                "src": "17063:3:48"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "17045:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17045:22:48"
                          },
                          "variableNames": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "17040:1:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_div_t_uint8",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "16937:1:48",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "16940:1:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "r",
                        "nodeType": "YulTypedName",
                        "src": "16946:1:48",
                        "type": ""
                      }
                    ],
                    "src": "16908:165:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "17128:175:48",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "17138:50:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "17165:1:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17168:4:48",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "17161:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17161:12:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "17179:1:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17182:4:48",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "17175:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17175:12:48"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "17157:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17157:31:48"
                          },
                          "variables": [
                            {
                              "name": "product_raw",
                              "nodeType": "YulTypedName",
                              "src": "17142:11:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "17197:33:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "product_raw",
                                "nodeType": "YulIdentifier",
                                "src": "17212:11:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17225:4:48",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "17208:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17208:22:48"
                          },
                          "variableNames": [
                            {
                              "name": "product",
                              "nodeType": "YulIdentifier",
                              "src": "17197:7:48"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "17275:22:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "17277:16:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "17277:18:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "17277:18:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "17252:7:48"
                                  },
                                  {
                                    "name": "product_raw",
                                    "nodeType": "YulIdentifier",
                                    "src": "17261:11:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "17249:2:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17249:24:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "17242:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17242:32:48"
                          },
                          "nodeType": "YulIf",
                          "src": "17239:58:48"
                        }
                      ]
                    },
                    "name": "checked_mul_t_uint8",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "17107:1:48",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "17110:1:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "product",
                        "nodeType": "YulTypedName",
                        "src": "17116:7:48",
                        "type": ""
                      }
                    ],
                    "src": "17078:225:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "17355:123:48",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "17365:18:48",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17375:8:48",
                            "type": "",
                            "value": "0xffffff"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "17369:2:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "17392:34:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "17407:1:48"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "17410:2:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "17403:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17403:10:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "17419:1:48"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "17422:2:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "17415:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17415:10:48"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17399:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17399:27:48"
                          },
                          "variableNames": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "17392:3:48"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "17450:22:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "17452:16:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "17452:18:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "17452:18:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "sum",
                                "nodeType": "YulIdentifier",
                                "src": "17441:3:48"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "17446:2:48"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "17438:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17438:11:48"
                          },
                          "nodeType": "YulIf",
                          "src": "17435:37:48"
                        }
                      ]
                    },
                    "name": "checked_add_t_uint24",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "17338:1:48",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "17341:1:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "sum",
                        "nodeType": "YulTypedName",
                        "src": "17347:3:48",
                        "type": ""
                      }
                    ],
                    "src": "17308:170:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "17524:196:48",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "17534:35:48",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17560:1:48",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17563:5:48"
                              }
                            ],
                            "functionName": {
                              "name": "signextend",
                              "nodeType": "YulIdentifier",
                              "src": "17549:10:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17549:20:48"
                          },
                          "variables": [
                            {
                              "name": "value_1",
                              "nodeType": "YulTypedName",
                              "src": "17538:7:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "17661:22:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "17663:16:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "17663:18:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "17663:18:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "17584:7:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17593:66:48",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "17581:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17581:79:48"
                          },
                          "nodeType": "YulIf",
                          "src": "17578:105:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "17692:22:48",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17703:1:48",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "17706:7:48"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "17699:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17699:15:48"
                          },
                          "variableNames": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "17692:3:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "negate_t_int8",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "17506:5:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "ret",
                        "nodeType": "YulTypedName",
                        "src": "17516:3:48",
                        "type": ""
                      }
                    ],
                    "src": "17483:237:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "17775:280:48",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "17785:26:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17805:5:48"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "17799:5:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17799:12:48"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "17789:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "17827:3:48"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "17832:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "17820:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17820:19:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17820:19:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "17887:5:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17894:4:48",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17883:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17883:16:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17905:3:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17910:4:48",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17901:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17901:14:48"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "17917:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory_with_cleanup",
                              "nodeType": "YulIdentifier",
                              "src": "17848:34:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17848:76:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17848:76:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "17933:116:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17948:3:48"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "17961:6:48"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "17969:2:48",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "17957:3:48"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "17957:15:48"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17974:66:48",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "17953:3:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17953:88:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17944:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17944:98:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18044:4:48",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17940:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17940:109:48"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "17933:3:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_string",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "17752:5:48",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "17759:3:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "17767:3:48",
                        "type": ""
                      }
                    ],
                    "src": "17725:330:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "18277:329:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18294:9:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18305:2:48",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "18287:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18287:21:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18287:21:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "18317:59:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18349:6:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18361:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18372:2:48",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18357:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18357:18:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_string",
                              "nodeType": "YulIdentifier",
                              "src": "18331:17:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18331:45:48"
                          },
                          "variables": [
                            {
                              "name": "tail_1",
                              "nodeType": "YulTypedName",
                              "src": "18321:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18396:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18407:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18392:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18392:18:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "18416:6:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18424:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "18412:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18412:22:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "18385:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18385:50:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18385:50:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "18444:47:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "18476:6:48"
                              },
                              {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "18484:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_string",
                              "nodeType": "YulIdentifier",
                              "src": "18458:17:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18458:33:48"
                          },
                          "variables": [
                            {
                              "name": "tail_2",
                              "nodeType": "YulTypedName",
                              "src": "18448:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18511:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18522:2:48",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18507:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18507:18:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "18531:6:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18539:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "18527:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18527:22:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "18500:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18500:50:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18500:50:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "18559:41:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "18585:6:48"
                              },
                              {
                                "name": "tail_2",
                                "nodeType": "YulIdentifier",
                                "src": "18593:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_string",
                              "nodeType": "YulIdentifier",
                              "src": "18567:17:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18567:33:48"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "18559:4:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "18230:9:48",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "18241:6:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "18249:6:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "18257:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "18268:4:48",
                        "type": ""
                      }
                    ],
                    "src": "18060:546:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "18780:214:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18797:9:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18808:2:48",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "18790:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18790:21:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18790:21:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "18820:59:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18852:6:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18864:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18875:2:48",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18860:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18860:18:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_string",
                              "nodeType": "YulIdentifier",
                              "src": "18834:17:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18834:45:48"
                          },
                          "variables": [
                            {
                              "name": "tail_1",
                              "nodeType": "YulTypedName",
                              "src": "18824:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18899:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18910:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18895:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18895:18:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "18919:6:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18927:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "18915:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18915:22:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "18888:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18888:50:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18888:50:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "18947:41:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "18973:6:48"
                              },
                              {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "18981:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_string",
                              "nodeType": "YulIdentifier",
                              "src": "18955:17:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18955:33:48"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "18947:4:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "18741:9:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "18752:6:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "18760:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "18771:4:48",
                        "type": ""
                      }
                    ],
                    "src": "18611:383:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "19186:309:48",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "19196:27:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19216:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "19210:5:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19210:13:48"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "19200:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "19271:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19279:4:48",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19267:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19267:17:48"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "19286:3:48"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "19291:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory_with_cleanup",
                              "nodeType": "YulIdentifier",
                              "src": "19232:34:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19232:66:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19232:66:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "19307:29:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "19324:3:48"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "19329:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19320:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19320:16:48"
                          },
                          "variables": [
                            {
                              "name": "end_1",
                              "nodeType": "YulTypedName",
                              "src": "19311:5:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "19345:29:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "19367:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "19361:5:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19361:13:48"
                          },
                          "variables": [
                            {
                              "name": "length_1",
                              "nodeType": "YulTypedName",
                              "src": "19349:8:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "19422:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19430:4:48",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19418:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19418:17:48"
                              },
                              {
                                "name": "end_1",
                                "nodeType": "YulIdentifier",
                                "src": "19437:5:48"
                              },
                              {
                                "name": "length_1",
                                "nodeType": "YulIdentifier",
                                "src": "19444:8:48"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory_with_cleanup",
                              "nodeType": "YulIdentifier",
                              "src": "19383:34:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19383:70:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19383:70:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "19462:27:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "end_1",
                                "nodeType": "YulIdentifier",
                                "src": "19473:5:48"
                              },
                              {
                                "name": "length_1",
                                "nodeType": "YulIdentifier",
                                "src": "19480:8:48"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19469:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19469:20:48"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "19462:3:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "19154:3:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "19159:6:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "19167:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "19178:3:48",
                        "type": ""
                      }
                    ],
                    "src": "18999:496:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "19765:446:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "19782:9:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19793:3:48",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "19775:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19775:22:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19775:22:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "19806:60:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19838:6:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19850:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19861:3:48",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19846:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19846:19:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_string",
                              "nodeType": "YulIdentifier",
                              "src": "19820:17:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19820:46:48"
                          },
                          "variables": [
                            {
                              "name": "tail_1",
                              "nodeType": "YulTypedName",
                              "src": "19810:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19886:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19897:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19882:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19882:18:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "19906:6:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19914:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "19902:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19902:22:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "19875:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19875:50:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19875:50:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "19934:47:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "19966:6:48"
                              },
                              {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "19974:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_string",
                              "nodeType": "YulIdentifier",
                              "src": "19948:17:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19948:33:48"
                          },
                          "variables": [
                            {
                              "name": "tail_2",
                              "nodeType": "YulTypedName",
                              "src": "19938:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20001:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20012:2:48",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19997:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19997:18:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "20021:6:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20029:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "20017:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20017:22:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "19990:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19990:50:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19990:50:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "20049:47:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "20081:6:48"
                              },
                              {
                                "name": "tail_2",
                                "nodeType": "YulIdentifier",
                                "src": "20089:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_string",
                              "nodeType": "YulIdentifier",
                              "src": "20063:17:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20063:33:48"
                          },
                          "variables": [
                            {
                              "name": "tail_3",
                              "nodeType": "YulTypedName",
                              "src": "20053:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20116:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20127:2:48",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20112:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20112:18:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "20136:6:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20144:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "20132:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20132:22:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "20105:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20105:50:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "20105:50:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "20164:41:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "20190:6:48"
                              },
                              {
                                "name": "tail_3",
                                "nodeType": "YulIdentifier",
                                "src": "20198:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_string",
                              "nodeType": "YulIdentifier",
                              "src": "20172:17:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20172:33:48"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "20164:4:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "19710:9:48",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "19721:6:48",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "19729:6:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "19737:6:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "19745:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "19756:4:48",
                        "type": ""
                      }
                    ],
                    "src": "19500:711:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "20413:257:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20430:9:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20441:2:48",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "20423:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20423:21:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "20423:21:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "20453:59:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "20485:6:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20497:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20508:2:48",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20493:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20493:18:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_string",
                              "nodeType": "YulIdentifier",
                              "src": "20467:17:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20467:45:48"
                          },
                          "variables": [
                            {
                              "name": "tail_1",
                              "nodeType": "YulTypedName",
                              "src": "20457:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20532:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20543:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20528:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20528:18:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "20552:6:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20560:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "20548:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20548:22:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "20521:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20521:50:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "20521:50:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "20580:41:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "20606:6:48"
                              },
                              {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "20614:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_string",
                              "nodeType": "YulIdentifier",
                              "src": "20588:17:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20588:33:48"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "20580:4:48"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20641:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20652:2:48",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20637:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20637:18:48"
                              },
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "20657:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "20630:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20630:34:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "20630:34:48"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "20366:9:48",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "20377:6:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "20385:6:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "20393:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "20404:4:48",
                        "type": ""
                      }
                    ],
                    "src": "20216:454:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "20872:306:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20889:9:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20900:2:48",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "20882:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20882:21:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "20882:21:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "20912:59:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "20944:6:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20956:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20967:2:48",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20952:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20952:18:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_string",
                              "nodeType": "YulIdentifier",
                              "src": "20926:17:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20926:45:48"
                          },
                          "variables": [
                            {
                              "name": "tail_1",
                              "nodeType": "YulTypedName",
                              "src": "20916:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20991:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21002:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20987:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20987:18:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "21011:6:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21019:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "21007:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21007:22:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "20980:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20980:50:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "20980:50:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "21039:41:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "21065:6:48"
                              },
                              {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "21073:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_string",
                              "nodeType": "YulIdentifier",
                              "src": "21047:17:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21047:33:48"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "21039:4:48"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21100:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21111:2:48",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21096:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21096:18:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "21120:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21128:42:48",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "21116:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21116:55:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "21089:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21089:83:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "21089:83:48"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "20825:9:48",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "20836:6:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "20844:6:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "20852:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "20863:4:48",
                        "type": ""
                      }
                    ],
                    "src": "20675:503:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "21229:199:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "21239:46:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21261:1:48",
                                    "type": "",
                                    "value": "3"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "21264:1:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "signextend",
                                  "nodeType": "YulIdentifier",
                                  "src": "21250:10:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21250:16:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21279:1:48",
                                    "type": "",
                                    "value": "3"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "21282:1:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "signextend",
                                  "nodeType": "YulIdentifier",
                                  "src": "21268:10:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21268:16:48"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21246:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21246:39:48"
                          },
                          "variableNames": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "21239:3:48"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "21400:22:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "21402:16:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "21402:18:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "21402:18:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "sum",
                                    "nodeType": "YulIdentifier",
                                    "src": "21304:3:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21309:10:48",
                                    "type": "",
                                    "value": "0x7fffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "sgt",
                                  "nodeType": "YulIdentifier",
                                  "src": "21300:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21300:20:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "sum",
                                    "nodeType": "YulIdentifier",
                                    "src": "21326:3:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21331:66:48",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "21322:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21322:76:48"
                              }
                            ],
                            "functionName": {
                              "name": "or",
                              "nodeType": "YulIdentifier",
                              "src": "21297:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21297:102:48"
                          },
                          "nodeType": "YulIf",
                          "src": "21294:128:48"
                        }
                      ]
                    },
                    "name": "checked_add_t_int32",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "21212:1:48",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "21215:1:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "sum",
                        "nodeType": "YulTypedName",
                        "src": "21221:3:48",
                        "type": ""
                      }
                    ],
                    "src": "21183:245:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "21480:133:48",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "21490:28:48",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21500:18:48",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "21494:2:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "21527:34:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "21542:1:48"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "21545:2:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "21538:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21538:10:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "21554:1:48"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "21557:2:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "21550:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21550:10:48"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21534:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21534:27:48"
                          },
                          "variableNames": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "21527:3:48"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "21585:22:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "21587:16:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "21587:18:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "21587:18:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "sum",
                                "nodeType": "YulIdentifier",
                                "src": "21576:3:48"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "21581:2:48"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "21573:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21573:11:48"
                          },
                          "nodeType": "YulIf",
                          "src": "21570:37:48"
                        }
                      ]
                    },
                    "name": "checked_add_t_uint64",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "21463:1:48",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "21466:1:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "sum",
                        "nodeType": "YulTypedName",
                        "src": "21472:3:48",
                        "type": ""
                      }
                    ],
                    "src": "21433:180:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "21863:423:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "21880:9:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21891:3:48",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "21873:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21873:22:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "21873:22:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "21904:60:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "21936:6:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21948:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21959:3:48",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21944:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21944:19:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_string",
                              "nodeType": "YulIdentifier",
                              "src": "21918:17:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21918:46:48"
                          },
                          "variables": [
                            {
                              "name": "tail_1",
                              "nodeType": "YulTypedName",
                              "src": "21908:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21984:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21995:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21980:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21980:18:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "22004:6:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22012:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "22000:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22000:22:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "21973:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21973:50:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "21973:50:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "22032:47:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "22064:6:48"
                              },
                              {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "22072:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_string",
                              "nodeType": "YulIdentifier",
                              "src": "22046:17:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22046:33:48"
                          },
                          "variables": [
                            {
                              "name": "tail_2",
                              "nodeType": "YulTypedName",
                              "src": "22036:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22099:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22110:2:48",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22095:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22095:18:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "22119:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22127:42:48",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "22115:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22115:55:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "22088:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22088:83:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22088:83:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22191:9:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22202:2:48",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22187:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22187:18:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "22211:6:48"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22219:9:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "22207:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22207:22:48"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "22180:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22180:50:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22180:50:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "22239:41:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "22265:6:48"
                              },
                              {
                                "name": "tail_2",
                                "nodeType": "YulIdentifier",
                                "src": "22273:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_string",
                              "nodeType": "YulIdentifier",
                              "src": "22247:17:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22247:33:48"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "22239:4:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "21808:9:48",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "21819:6:48",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "21827:6:48",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "21835:6:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "21843:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "21854:4:48",
                        "type": ""
                      }
                    ],
                    "src": "21618:668:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "22521:222:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "22538:3:48"
                              },
                              {
                                "hexValue": "5f75706461746543656c6c46726f6d4e65696768626f722020696e646578",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "22543:32:48",
                                "type": "",
                                "value": "_updateCellFromNeighbor  index"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "22531:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22531:45:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22531:45:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "22585:27:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "22605:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "22599:5:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22599:13:48"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "22589:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "22660:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22668:4:48",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22656:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22656:17:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "22679:3:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22684:2:48",
                                    "type": "",
                                    "value": "30"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22675:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22675:12:48"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "22689:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory_with_cleanup",
                              "nodeType": "YulIdentifier",
                              "src": "22621:34:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22621:75:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "22621:75:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "22705:32:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "22720:3:48"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "22725:6:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22716:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22716:16:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "22734:2:48",
                                "type": "",
                                "value": "30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "22712:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22712:25:48"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "22705:3:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_stringliteral_9140deff73f837047c9fea8fff4e31d847aa43a6d44d0069e92b56aadec3e42b_t_string_memory_ptr__to_t_bytes30_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "22497:3:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "22502:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "22513:3:48",
                        "type": ""
                      }
                    ],
                    "src": "22291:452:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "22812:418:48",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "22822:16:48",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22837:1:48",
                            "type": "",
                            "value": "1"
                          },
                          "variables": [
                            {
                              "name": "power_1",
                              "nodeType": "YulTypedName",
                              "src": "22826:7:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "22847:16:48",
                          "value": {
                            "name": "power_1",
                            "nodeType": "YulIdentifier",
                            "src": "22856:7:48"
                          },
                          "variableNames": [
                            {
                              "name": "power",
                              "nodeType": "YulIdentifier",
                              "src": "22847:5:48"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "22872:13:48",
                          "value": {
                            "name": "_base",
                            "nodeType": "YulIdentifier",
                            "src": "22880:5:48"
                          },
                          "variableNames": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "22872:4:48"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "22936:288:48",
                            "statements": [
                              {
                                "body": {
                                  "nodeType": "YulBlock",
                                  "src": "23041:22:48",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "panic_error_0x11",
                                          "nodeType": "YulIdentifier",
                                          "src": "23043:16:48"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "23043:18:48"
                                      },
                                      "nodeType": "YulExpressionStatement",
                                      "src": "23043:18:48"
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "base",
                                      "nodeType": "YulIdentifier",
                                      "src": "22956:4:48"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "22966:66:48",
                                          "type": "",
                                          "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                        },
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "23034:4:48"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "div",
                                        "nodeType": "YulIdentifier",
                                        "src": "22962:3:48"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22962:77:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "gt",
                                    "nodeType": "YulIdentifier",
                                    "src": "22953:2:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "22953:87:48"
                                },
                                "nodeType": "YulIf",
                                "src": "22950:113:48"
                              },
                              {
                                "body": {
                                  "nodeType": "YulBlock",
                                  "src": "23102:29:48",
                                  "statements": [
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "23104:25:48",
                                      "value": {
                                        "arguments": [
                                          {
                                            "name": "power",
                                            "nodeType": "YulIdentifier",
                                            "src": "23117:5:48"
                                          },
                                          {
                                            "name": "base",
                                            "nodeType": "YulIdentifier",
                                            "src": "23124:4:48"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "23113:3:48"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "23113:16:48"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "power",
                                          "nodeType": "YulIdentifier",
                                          "src": "23104:5:48"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "exponent",
                                      "nodeType": "YulIdentifier",
                                      "src": "23083:8:48"
                                    },
                                    {
                                      "name": "power_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "23093:7:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "23079:3:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "23079:22:48"
                                },
                                "nodeType": "YulIf",
                                "src": "23076:55:48"
                              },
                              {
                                "nodeType": "YulAssignment",
                                "src": "23144:23:48",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "base",
                                      "nodeType": "YulIdentifier",
                                      "src": "23156:4:48"
                                    },
                                    {
                                      "name": "base",
                                      "nodeType": "YulIdentifier",
                                      "src": "23162:4:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mul",
                                    "nodeType": "YulIdentifier",
                                    "src": "23152:3:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "23152:15:48"
                                },
                                "variableNames": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "23144:4:48"
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulAssignment",
                                "src": "23180:34:48",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "power_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "23196:7:48"
                                    },
                                    {
                                      "name": "exponent",
                                      "nodeType": "YulIdentifier",
                                      "src": "23205:8:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shr",
                                    "nodeType": "YulIdentifier",
                                    "src": "23192:3:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "23192:22:48"
                                },
                                "variableNames": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "23180:8:48"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "22905:8:48"
                              },
                              {
                                "name": "power_1",
                                "nodeType": "YulIdentifier",
                                "src": "22915:7:48"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "22902:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "22902:21:48"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "22924:3:48",
                            "statements": []
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "22898:3:48",
                            "statements": []
                          },
                          "src": "22894:330:48"
                        }
                      ]
                    },
                    "name": "checked_exp_helper",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "_base",
                        "nodeType": "YulTypedName",
                        "src": "22776:5:48",
                        "type": ""
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulTypedName",
                        "src": "22783:8:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "power",
                        "nodeType": "YulTypedName",
                        "src": "22796:5:48",
                        "type": ""
                      },
                      {
                        "name": "base",
                        "nodeType": "YulTypedName",
                        "src": "22803:4:48",
                        "type": ""
                      }
                    ],
                    "src": "22748:482:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "23294:807:48",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "23332:52:48",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "23346:10:48",
                                "value": {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "23355:1:48",
                                  "type": "",
                                  "value": "1"
                                },
                                "variableNames": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "23346:5:48"
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulLeave",
                                "src": "23369:5:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "23314:8:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "23307:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23307:16:48"
                          },
                          "nodeType": "YulIf",
                          "src": "23304:80:48"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "23417:52:48",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "23431:10:48",
                                "value": {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "23440:1:48",
                                  "type": "",
                                  "value": "0"
                                },
                                "variableNames": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "23431:5:48"
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulLeave",
                                "src": "23454:5:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "23403:4:48"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "23396:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23396:12:48"
                          },
                          "nodeType": "YulIf",
                          "src": "23393:76:48"
                        },
                        {
                          "cases": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "23505:52:48",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "23519:10:48",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "23528:1:48",
                                      "type": "",
                                      "value": "1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "23519:5:48"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "23542:5:48"
                                  }
                                ]
                              },
                              "nodeType": "YulCase",
                              "src": "23498:59:48",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23503:1:48",
                                "type": "",
                                "value": "1"
                              }
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "23573:123:48",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "23608:22:48",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nodeType": "YulIdentifier",
                                              "src": "23610:16:48"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "23610:18:48"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "23610:18:48"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "23593:8:48"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "23603:3:48",
                                          "type": "",
                                          "value": "255"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nodeType": "YulIdentifier",
                                        "src": "23590:2:48"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "23590:17:48"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "23587:43:48"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "23643:25:48",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "23656:8:48"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "23666:1:48",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "23652:3:48"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "23652:16:48"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "23643:5:48"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "23681:5:48"
                                  }
                                ]
                              },
                              "nodeType": "YulCase",
                              "src": "23566:130:48",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23571:1:48",
                                "type": "",
                                "value": "2"
                              }
                            }
                          ],
                          "expression": {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "23485:4:48"
                          },
                          "nodeType": "YulSwitch",
                          "src": "23478:218:48"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "23794:70:48",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "23808:28:48",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "base",
                                      "nodeType": "YulIdentifier",
                                      "src": "23821:4:48"
                                    },
                                    {
                                      "name": "exponent",
                                      "nodeType": "YulIdentifier",
                                      "src": "23827:8:48"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "exp",
                                    "nodeType": "YulIdentifier",
                                    "src": "23817:3:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "23817:19:48"
                                },
                                "variableNames": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "23808:5:48"
                                  }
                                ]
                              },
                              {
                                "nodeType": "YulLeave",
                                "src": "23849:5:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "base",
                                        "nodeType": "YulIdentifier",
                                        "src": "23718:4:48"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23724:2:48",
                                        "type": "",
                                        "value": "11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "23715:2:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23715:12:48"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "exponent",
                                        "nodeType": "YulIdentifier",
                                        "src": "23732:8:48"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23742:2:48",
                                        "type": "",
                                        "value": "78"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "23729:2:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23729:16:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "23711:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23711:35:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "base",
                                        "nodeType": "YulIdentifier",
                                        "src": "23755:4:48"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23761:3:48",
                                        "type": "",
                                        "value": "307"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "23752:2:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23752:13:48"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "exponent",
                                        "nodeType": "YulIdentifier",
                                        "src": "23770:8:48"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23780:2:48",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "23767:2:48"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23767:16:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "23748:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23748:36:48"
                              }
                            ],
                            "functionName": {
                              "name": "or",
                              "nodeType": "YulIdentifier",
                              "src": "23708:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23708:77:48"
                          },
                          "nodeType": "YulIf",
                          "src": "23705:159:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "23873:57:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "23915:4:48"
                              },
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "23921:8:48"
                              }
                            ],
                            "functionName": {
                              "name": "checked_exp_helper",
                              "nodeType": "YulIdentifier",
                              "src": "23896:18:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23896:34:48"
                          },
                          "variables": [
                            {
                              "name": "power_1",
                              "nodeType": "YulTypedName",
                              "src": "23877:7:48",
                              "type": ""
                            },
                            {
                              "name": "base_1",
                              "nodeType": "YulTypedName",
                              "src": "23886:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "24035:22:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "24037:16:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "24037:18:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "24037:18:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "power_1",
                                "nodeType": "YulIdentifier",
                                "src": "23945:7:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23958:66:48",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  },
                                  {
                                    "name": "base_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "24026:6:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "23954:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23954:79:48"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "23942:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23942:92:48"
                          },
                          "nodeType": "YulIf",
                          "src": "23939:118:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "24066:29:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "power_1",
                                "nodeType": "YulIdentifier",
                                "src": "24079:7:48"
                              },
                              {
                                "name": "base_1",
                                "nodeType": "YulIdentifier",
                                "src": "24088:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "24075:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24075:20:48"
                          },
                          "variableNames": [
                            {
                              "name": "power",
                              "nodeType": "YulIdentifier",
                              "src": "24066:5:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_exp_unsigned",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "base",
                        "nodeType": "YulTypedName",
                        "src": "23265:4:48",
                        "type": ""
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulTypedName",
                        "src": "23271:8:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "power",
                        "nodeType": "YulTypedName",
                        "src": "23284:5:48",
                        "type": ""
                      }
                    ],
                    "src": "23235:866:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "24174:72:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "24184:56:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "24214:4:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "24224:8:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24234:4:48",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "24220:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24220:19:48"
                              }
                            ],
                            "functionName": {
                              "name": "checked_exp_unsigned",
                              "nodeType": "YulIdentifier",
                              "src": "24193:20:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24193:47:48"
                          },
                          "variableNames": [
                            {
                              "name": "power",
                              "nodeType": "YulIdentifier",
                              "src": "24184:5:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_exp_t_uint256_t_uint8",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "base",
                        "nodeType": "YulTypedName",
                        "src": "24145:4:48",
                        "type": ""
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulTypedName",
                        "src": "24151:8:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "power",
                        "nodeType": "YulTypedName",
                        "src": "24164:5:48",
                        "type": ""
                      }
                    ],
                    "src": "24106:140:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "24321:61:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "24331:45:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "24361:4:48"
                              },
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "24367:8:48"
                              }
                            ],
                            "functionName": {
                              "name": "checked_exp_unsigned",
                              "nodeType": "YulIdentifier",
                              "src": "24340:20:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24340:36:48"
                          },
                          "variableNames": [
                            {
                              "name": "power",
                              "nodeType": "YulIdentifier",
                              "src": "24331:5:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_exp_t_uint256_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "base",
                        "nodeType": "YulTypedName",
                        "src": "24292:4:48",
                        "type": ""
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulTypedName",
                        "src": "24298:8:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "power",
                        "nodeType": "YulTypedName",
                        "src": "24311:5:48",
                        "type": ""
                      }
                    ],
                    "src": "24251:131:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "24433:196:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "24443:47:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24466:1:48",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "24469:1:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "signextend",
                                  "nodeType": "YulIdentifier",
                                  "src": "24455:10:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24455:16:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24484:1:48",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "24487:1:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "signextend",
                                  "nodeType": "YulIdentifier",
                                  "src": "24473:10:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24473:16:48"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "24451:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24451:39:48"
                          },
                          "variableNames": [
                            {
                              "name": "diff",
                              "nodeType": "YulIdentifier",
                              "src": "24443:4:48"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "24601:22:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "24603:16:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "24603:18:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "24603:18:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "diff",
                                    "nodeType": "YulIdentifier",
                                    "src": "24509:4:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24515:66:48",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "24505:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24505:77:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "diff",
                                    "nodeType": "YulIdentifier",
                                    "src": "24588:4:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24594:4:48",
                                    "type": "",
                                    "value": "0x7f"
                                  }
                                ],
                                "functionName": {
                                  "name": "sgt",
                                  "nodeType": "YulIdentifier",
                                  "src": "24584:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24584:15:48"
                              }
                            ],
                            "functionName": {
                              "name": "or",
                              "nodeType": "YulIdentifier",
                              "src": "24502:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24502:98:48"
                          },
                          "nodeType": "YulIf",
                          "src": "24499:124:48"
                        }
                      ]
                    },
                    "name": "checked_sub_t_int8",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "24415:1:48",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "24418:1:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "diff",
                        "nodeType": "YulTypedName",
                        "src": "24424:4:48",
                        "type": ""
                      }
                    ],
                    "src": "24387:242:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "24679:193:48",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "24689:46:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24711:1:48",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "24714:1:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "signextend",
                                  "nodeType": "YulIdentifier",
                                  "src": "24700:10:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24700:16:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24729:1:48",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "24732:1:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "signextend",
                                  "nodeType": "YulIdentifier",
                                  "src": "24718:10:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24718:16:48"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "24696:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24696:39:48"
                          },
                          "variableNames": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "24689:3:48"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "24844:22:48",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "24846:16:48"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "24846:18:48"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "24846:18:48"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "sum",
                                    "nodeType": "YulIdentifier",
                                    "src": "24754:3:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24759:4:48",
                                    "type": "",
                                    "value": "0x7f"
                                  }
                                ],
                                "functionName": {
                                  "name": "sgt",
                                  "nodeType": "YulIdentifier",
                                  "src": "24750:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24750:14:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "sum",
                                    "nodeType": "YulIdentifier",
                                    "src": "24770:3:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24775:66:48",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "24766:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24766:76:48"
                              }
                            ],
                            "functionName": {
                              "name": "or",
                              "nodeType": "YulIdentifier",
                              "src": "24747:2:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "24747:96:48"
                          },
                          "nodeType": "YulIf",
                          "src": "24744:122:48"
                        }
                      ]
                    },
                    "name": "checked_add_t_int8",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "24662:1:48",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "24665:1:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "sum",
                        "nodeType": "YulTypedName",
                        "src": "24671:3:48",
                        "type": ""
                      }
                    ],
                    "src": "24634:238:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "25117:259:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "25134:3:48"
                              },
                              {
                                "hexValue": "4146544552205f75706461746543656c6c46726f6d4e65696768626f72202069",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "25139:34:48",
                                "type": "",
                                "value": "AFTER _updateCellFromNeighbor  i"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "25127:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25127:47:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "25127:47:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "25194:3:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25199:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25190:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25190:12:48"
                              },
                              {
                                "hexValue": "6e646578",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "25204:6:48",
                                "type": "",
                                "value": "ndex"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "25183:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25183:28:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "25183:28:48"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "25220:27:48",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "25240:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "25234:5:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25234:13:48"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "25224:6:48",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "25295:6:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25303:2:48",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25291:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25291:15:48"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "25312:3:48"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25317:2:48",
                                    "type": "",
                                    "value": "36"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25308:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25308:12:48"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "25322:6:48"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory_with_cleanup",
                              "nodeType": "YulIdentifier",
                              "src": "25256:34:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25256:73:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "25256:73:48"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "25338:32:48",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "25353:3:48"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "25358:6:48"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25349:3:48"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25349:16:48"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "25367:2:48",
                                "type": "",
                                "value": "36"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "25345:3:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25345:25:48"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "25338:3:48"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_stringliteral_30d0f8b600d49986f2563cddae7358e5e960c84838d9eb7c5e2f006cfd840a44_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "25093:3:48",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "25098:6:48",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "25109:3:48",
                        "type": ""
                      }
                    ],
                    "src": "24877:499:48"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "25413:152:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "25430:1:48",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "25433:77:48",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "25423:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25423:88:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "25423:88:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "25527:1:48",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "25530:4:48",
                                "type": "",
                                "value": "0x51"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "25520:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25520:15:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "25520:15:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "25551:1:48",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "25554:4:48",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "25544:6:48"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25544:15:48"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "25544:15:48"
                        }
                      ]
                    },
                    "name": "panic_error_0x51",
                    "nodeType": "YulFunctionDefinition",
                    "src": "25381:184:48"
                  }
                ]
              },
              "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_bytes24(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_struct_Permit_calldata(offset, end) -> value\n    {\n        if slt(sub(end, offset), 160) { revert(0, 0) }\n        value := offset\n    }\n    function validator_revert_address_payable(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes24t_uint256t_struct$_Permit_$12645_calldata_ptrt_address_payable(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        value0 := abi_decode_bytes24(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_struct_Permit_calldata(add(headStart, 64), dataEnd)\n        let value := calldataload(add(headStart, 224))\n        validator_revert_address_payable(value)\n        value3 := value\n    }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint64(headStart)\n    }\n    function abi_decode_array_struct_Move_calldata_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(6, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bytes32t_array$_t_struct$_Move_$12633_calldata_ptr_$dyn_calldata_ptrt_bytes24(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_struct_Move_calldata_dyn_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        value4 := abi_decode_bytes24(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_array$_t_uint64_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_bytes24t_address_payable(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_bytes24(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address_payable(value)\n        value1 := value\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bytes32t_array$_t_struct$_Move_$12633_calldata_ptr_$dyn_calldata_ptrt_bytes24t_boolt_address_payable(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_struct_Move_calldata_dyn_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        value4 := abi_decode_bytes24(add(headStart, 96))\n        let value_1 := calldataload(add(headStart, 128))\n        validator_revert_bool(value_1)\n        value5 := value_1\n        let value_2 := calldataload(add(headStart, 160))\n        validator_revert_address_payable(value_2)\n        value6 := value_2\n    }\n    function abi_decode_tuple_t_uint256t_struct$_Permit_$12645_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_struct_Permit_calldata(add(headStart, 32), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xff))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_bytes24__to_t_uint256_t_bytes24__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_enum_Color(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 7)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_Move_$12633_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 64)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n        mstore(memPtr, abi_decode_uint64(headStart))\n        mstore(add(memPtr, 32), abi_decode_enum_Color(add(headStart, 32)))\n        value0 := memPtr\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_Color(value, pos)\n    {\n        if iszero(lt(value, 7))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Move_$12633_calldata_ptr_$dyn_calldata_ptr_t_bytes24_t_uint256__to_t_array$_t_struct$_Move_$12633_memory_ptr_$dyn_memory_ptr_t_bytes24_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 96)\n        mstore(headStart, 96)\n        let pos := tail_1\n        mstore(tail_1, value1)\n        pos := add(headStart, 128)\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, value1) { i := add(i, 1) }\n        {\n            mstore(pos, and(abi_decode_uint64(srcPtr), 0xffffffffffffffff))\n            let _1 := 0x20\n            let memberValue0 := abi_decode_enum_Color(add(srcPtr, _1))\n            abi_encode_enum_Color(memberValue0, add(pos, _1))\n            let _2 := 0x40\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _2)\n        }\n        tail := pos\n        mstore(add(headStart, 0x20), and(value2, 0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000))\n        mstore(add(headStart, 0x40), value3)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint24(x, y) -> diff\n    {\n        let _1 := 0xffffff\n        diff := sub(and(x, _1), and(y, _1))\n        if gt(diff, _1) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_bytes24__to_t_bytes24__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_47bdf7542cae4a2c6900ad06b173220c96c9ee8faf7e705d885b196a83d0903a_t_string_memory_ptr__to_t_bytes15_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"_poke at epoch \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 15), length)\n        end := add(add(pos, length), 15)\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        sum := add(and(x, 0xff), and(y, 0xff))\n        if gt(sum, 0xff) { panic_error_0x11() }\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_array_struct_Move_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _2 := mload(srcPtr)\n            mstore(pos, and(mload(_2), 0xffffffffffffffff))\n            let memberValue0 := mload(add(_2, _1))\n            abi_encode_enum_Color(memberValue0, add(pos, _1))\n            pos := add(pos, 0x40)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_bytes32_t_array$_t_struct$_Move_$12633_memory_ptr_$dyn_memory_ptr_t_bytes24__to_t_bytes32_t_array$_t_struct$_Move_$12633_memory_ptr_$dyn_memory_ptr_t_bytes24__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 96)\n        tail := abi_encode_array_struct_Move_dyn(value1, add(headStart, 96))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000))\n    }\n    function abi_encode_tuple_t_bytes32_t_array$_t_struct$_Move_$12633_memory_ptr_$dyn_memory_ptr__to_t_bytes32_t_array$_t_struct$_Move_$12633_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_array_struct_Move_dyn(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        diff := sub(and(x, 0xff), and(y, 0xff))\n        if gt(diff, 0xff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_f7fc1ade9bcf7d123bf3dc6c144d6c2cc89a205c07e8ea010f4dadb3ae6cf187_t_string_memory_ptr__to_t_bytes22_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"_computeMove at epoch \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 22), length)\n        end := add(add(pos, length), 22)\n    }\n    function abi_encode_tuple_t_enum$_Color_$12626_t_enum$_Color_$12626__to_t_uint8_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        abi_encode_enum_Color(value0, headStart)\n        abi_encode_enum_Color(value1, add(headStart, 32))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_5d04fd474fa228970c9c97f90488f421437db10ef6e0ef26ba9246ae5b066cd7_t_string_memory_ptr__to_t_bytes6_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"AFTER \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 6), length)\n        end := add(add(pos, length), 6)\n    }\n    function checked_div_t_uint8(x, y) -> r\n    {\n        let y_1 := and(y, 0xff)\n        if iszero(y_1) { panic_error_0x12() }\n        r := div(and(x, 0xff), y_1)\n    }\n    function checked_mul_t_uint8(x, y) -> product\n    {\n        let product_raw := mul(and(x, 0xff), and(y, 0xff))\n        product := and(product_raw, 0xff)\n        if iszero(eq(product, product_raw)) { panic_error_0x11() }\n    }\n    function checked_add_t_uint24(x, y) -> sum\n    {\n        let _1 := 0xffffff\n        sum := add(and(x, _1), and(y, _1))\n        if gt(sum, _1) { panic_error_0x11() }\n    }\n    function negate_t_int8(value) -> ret\n    {\n        let value_1 := signextend(0, value)\n        if eq(value_1, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80) { panic_error_0x11() }\n        ret := sub(0, value_1)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let tail_1 := abi_encode_string(value0, add(headStart, 96))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        tail := abi_encode_string(value2, tail_2)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        let tail_3 := abi_encode_string(value2, tail_2)\n        mstore(add(headStart, 96), sub(tail_3, headStart))\n        tail := abi_encode_string(value3, tail_3)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let tail_1 := abi_encode_string(value0, add(headStart, 96))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let tail_1 := abi_encode_string(value0, add(headStart, 96))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function checked_add_t_int32(x, y) -> sum\n    {\n        sum := add(signextend(3, x), signextend(3, y))\n        if or(sgt(sum, 0x7fffffff), slt(sum, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000000)) { panic_error_0x11() }\n    }\n    function checked_add_t_uint64(x, y) -> sum\n    {\n        let _1 := 0xffffffffffffffff\n        sum := add(and(x, _1), and(y, _1))\n        if gt(sum, _1) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_string_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 96), sub(tail_2, headStart))\n        tail := abi_encode_string(value3, tail_2)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_9140deff73f837047c9fea8fff4e31d847aa43a6d44d0069e92b56aadec3e42b_t_string_memory_ptr__to_t_bytes30_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"_updateCellFromNeighbor  index\")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 30), length)\n        end := add(add(pos, length), 30)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_sub_t_int8(x, y) -> diff\n    {\n        diff := sub(signextend(0, x), signextend(0, y))\n        if or(slt(diff, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80), sgt(diff, 0x7f)) { panic_error_0x11() }\n    }\n    function checked_add_t_int8(x, y) -> sum\n    {\n        sum := add(signextend(0, x), signextend(0, y))\n        if or(sgt(sum, 0x7f), slt(sum, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80)) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_30d0f8b600d49986f2563cddae7358e5e960c84838d9eb7c5e2f006cfd840a44_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"AFTER _updateCellFromNeighbor  i\")\n        mstore(add(pos, 32), \"ndex\")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(pos, 36), length)\n        end := add(add(pos, length), 36)\n    }\n    function panic_error_0x51()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x51)\n        revert(0, 0x24)\n    }\n}",
              "id": 48,
              "language": "Yul",
              "name": "#utility.yul"
            }
          ],
          "immutableReferences": {
            "14712": [
              {
                "length": 32,
                "start": 835
              },
              {
                "length": 32,
                "start": 1099
              },
              {
                "length": 32,
                "start": 1403
              },
              {
                "length": 32,
                "start": 2076
              },
              {
                "length": 32,
                "start": 2352
              },
              {
                "length": 32,
                "start": 3010
              },
              {
                "length": 32,
                "start": 3468
              },
              {
                "length": 32,
                "start": 4896
              },
              {
                "length": 32,
                "start": 5194
              },
              {
                "length": 32,
                "start": 8253
              },
              {
                "length": 32,
                "start": 8626
              },
              {
                "length": 32,
                "start": 8871
              },
              {
                "length": 32,
                "start": 9076
              }
            ],
            "14715": [
              {
                "length": 32,
                "start": 5483
              },
              {
                "length": 32,
                "start": 5578
              }
            ],
            "14718": [
              {
                "length": 32,
                "start": 5431
              },
              {
                "length": 32,
                "start": 5642
              }
            ],
            "14721": [
              {
                "length": 32,
                "start": 5398
              }
            ],
            "14724": [
              {
                "length": 32,
                "start": 12653
              },
              {
                "length": 32,
                "start": 14763
              },
              {
                "length": 32,
                "start": 14819
              },
              {
                "length": 32,
                "start": 14929
              },
              {
                "length": 32,
                "start": 14975
              }
            ],
            "14727": [
              {
                "length": 32,
                "start": 6049
              },
              {
                "length": 32,
                "start": 6134
              },
              {
                "length": 32,
                "start": 6639
              },
              {
                "length": 32,
                "start": 6826
              },
              {
                "length": 32,
                "start": 12789
              },
              {
                "length": 32,
                "start": 12878
              },
              {
                "length": 32,
                "start": 12973
              },
              {
                "length": 32,
                "start": 13292
              },
              {
                "length": 32,
                "start": 13366
              },
              {
                "length": 32,
                "start": 17152
              },
              {
                "length": 32,
                "start": 17349
              }
            ],
            "14730": [
              {
                "length": 32,
                "start": 2029
              },
              {
                "length": 32,
                "start": 2963
              },
              {
                "length": 32,
                "start": 8823
              }
            ],
            "15386": [
              {
                "length": 32,
                "start": 9203
              },
              {
                "length": 32,
                "start": 9267
              }
            ]
          },
          "linkReferences": {},
          "object": "6080604052600436106100b15760003560e01c80638b8fc3a111610069578063afa1e2d11161004e578063afa1e2d114610173578063d401978314610188578063d67101121461019b57600080fd5b80638b8fc3a114610140578063ae37a62d1461016057600080fd5b80631fdd8a691161009a5780631fdd8a69146100eb5780634dd3ab2314610100578063599a71c61461012057600080fd5b80630a8bcdb9146100b657806310837a39146100d8575b600080fd5b3480156100c257600080fd5b506100d66100d13660046149d2565b6101bb565b005b6100d66100e6366004614a55565b6103f3565b3480156100f757600080fd5b506100d66106a1565b34801561010c57600080fd5b506100d661011b366004614abe565b6108d1565b34801561012c57600080fd5b506100d661013b366004614b2c565b610959565b34801561014c57600080fd5b506100d661015b366004614b9d565b610cb4565b6100d661016e366004614c12565b610db7565b34801561017f57600080fd5b506100d6610e36565b6100d6610196366004614c57565b610f45565b3480156101a757600080fd5b506100d66101b6366004614cef565b6112ce565b33600090815260036020526040812090806101d461150d565b845491935091507801000000000000000000000000000000000000000000000000900462ffffff161580159061023757508015806102375750825462ffffff83811678010000000000000000000000000000000000000000000000009092041614155b1561026e576040517f0aafb74c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600260205260409020546001850161028f57935060006102e5565b848110156102d8576040517f78fe52a600000000000000000000000000000000000000000000000000000000815260048101829052602481018690526044015b60405180910390fd5b6102e28582614d4b565b90505b3360008181526002602052604090819020839055517fa9059cbb00000000000000000000000000000000000000000000000000000000815260048101919091526024810186905273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af115801561038c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b09190614d5e565b50604080518681526020810183905233917ff7aeb382a1e87f84aa69637a22868c2e12be1261273f04cdf40a262a8b890031910160405180910390a25050505050565b3360009081526002602052604090205461040d8482614d7b565b33600081815260026020526040902082905590915061042d908683611658565b82351561053a5773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663d505accf33308635602088013561048960608a0160408b01614d8e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815273ffffffffffffffffffffffffffffffffffffffff95861660048201529490931660248501526044840191909152606483015260ff166084820152606086013560a4820152608086013560c482015260e401600060405180830381600087803b15801561052157600080fd5b505af1158015610535573d6000803e3d6000fd5b505050505b831561063a576040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018590527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906323b872dd906064016020604051808303816000875af11580156105d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fd9190614d5e565b50604080518581526020810183905233917f9705a8ff16374359785d31b0f1862c27f983645496f40760d180a9830eeaf2e8910160405180910390a25b73ffffffffffffffffffffffffffffffffffffffff82161561069a5760405173ffffffffffffffffffffffffffffffffffffffff8316903480156108fc02916000818181858888f19350505050158015610698573d6000803e3d6000fd5b505b5050505050565b336000908152600360205260408120906106b961150d565b5082549091507801000000000000000000000000000000000000000000000000900462ffffff16600003610719576040517f6599c9aa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815462ffffff80831678010000000000000000000000000000000000000000000000009092041603610777576040517f175868d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81547fffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffff168255336000908152600260205260408082208054929055517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610865573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108899190614d5e565b50604080518281526000602082015262ffffff84169133917f6337d70daadadd11f8be7f6e7b38e6c04d28710b1f2a2894bb14d8e3eaa8cdb6910160405180910390a3505050565b60408051600581830181815261010083019093526000928291816020015b60408051808201909152600080825260208201528152602001906001900390816108ef57505081526000602090910152905061092b818361189e565b6109557f000000000000000000000000000000000000000000000000000000000000000082611c8a565b5050565b73ffffffffffffffffffffffffffffffffffffffff851660009081526003602052604081209061098761150d565b5082549091507801000000000000000000000000000000000000000000000000900462ffffff1615806109de5750815462ffffff828116780100000000000000000000000000000000000000000000000090920416145b15610a15576040517f175868d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81546040805160208088028201810183528782528793610a76931b918a918a908690819060009085015b82821015610a6b57610a5c60408302860136819003810190614def565b81526020019060010190610a3f565b505050505087611d8d565b7fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000841615610b095760208114610ad8576040517fcc586b4500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82547fffffffffffffffff00000000000000000000000000000000000000000000000016604085901c178355610b30565b82547fffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffff1683555b33600090815260026020526040812080548792839291610b51908490614d4b565b90915550506040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610c0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2f9190614d5e565b50604080518281527fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008716602082015262ffffff85169173ffffffffffffffffffffffffffffffffffffffff8c16917f6337d70daadadd11f8be7f6e7b38e6c04d28710b1f2a2894bb14d8e3eaa8cdb6910160405180910390a3505050505050505050565b60408051808201909152819060009080610ccf846005614e71565b67ffffffffffffffff811115610ce757610ce7614db1565b604051908082528060200260200182016040528015610d2c57816020015b6040805180820190915260008082526020820152815260200190600190039081610d055790505b5081526020016000815250905060005b82811015610d8657610d7482868684818110610d5a57610d5a614e88565b9050602002016020810190610d6f9190614abe565b61189e565b80610d7e81614eb7565b915050610d3c565b50610db17f000000000000000000000000000000000000000000000000000000000000000082611c8a565b50505050565b33600081815260026020526040902054610dd391908490611658565b73ffffffffffffffffffffffffffffffffffffffff8116156109555760405173ffffffffffffffffffffffffffffffffffffffff8216903480156108fc02916000818181858888f19350505050158015610e31573d6000803e3d6000fd5b505050565b3360009081526003602052604081209080610e4f61150d565b9150915080610e8a576040517fdc12c97300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825462ffffff83811678010000000000000000000000000000000000000000000000009092041614610ee8576040517f0aafb74c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82547fffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffff16835560405162ffffff83169033907f619ef9650648da30c9647d0b77a0de24a51da0630c3533d54cc1eb3d798e1eaa90600090a3505050565b73ffffffffffffffffffffffffffffffffffffffff871660009081526003602052604081209080610f7461150d565b915091508015610fb0576040517f24f7f40f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82547801000000000000000000000000000000000000000000000000900462ffffff1660000361100c576040517f6599c9aa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825462ffffff8381167801000000000000000000000000000000000000000000000000909204161461106a576040517fd5b25b6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8254604080516020808b028201810183528a82526110cc9390921b918c91908c908c90819060009085015b828210156110c1576110b260408302860136819003810190614def565b81526020019060010190611095565b505050505089611d8d565b60006111388b848b8b808060200260200160405190810160405280939291908181526020016000905b828210156111215761111260408302860136819003810190614def565b815260200190600101906110f5565b505050505089611131578e611eb5565b6000611eb5565b845490915060401b7fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008816156111d357602089146111a2576040517fcc586b4500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffff00000000000000000000000000000000000000000000000016604089901c1785556111fa565b84547fffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffffff1685555b8067ffffffffffffffff19168462ffffff168d73ffffffffffffffffffffffffffffffffffffffff167ffab312c5020dc7093e590463878dbfd0567314a7c155b164a60430ebcc7b38038d8d8d886040516112589493929190614f59565b60405180910390a473ffffffffffffffffffffffffffffffffffffffff8616156112c05760405173ffffffffffffffffffffffffffffffffffffffff8716903480156108fc02916000818181858888f193505050501580156112be573d6000803e3d6000fd5b505b505050505050505050505050565b811561095557336000908152600260205260409020546112ee8382614d7b565b336000908152600260205260409020819055905081351561140f5773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663d505accf33308535602087013561135e6060890160408a01614d8e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16815273ffffffffffffffffffffffffffffffffffffffff95861660048201529490931660248501526044840191909152606483015260ff166084820152606085013560a4820152608085013560c482015260e401600060405180830381600087803b1580156113f657600080fd5b505af115801561140a573d6000803e3d6000fd5b505050505b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906323b872dd906064016020604051808303816000875af11580156114a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114cc9190614d5e565b50604080518481526020810183905233917f9705a8ff16374359785d31b0f1862c27f983645496f40760d180a9830eeaf2e8910160405180910390a2505050565b6000808061155b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000614d7b565b905060006115676123ef565b90507f00000000000000000000000000000000000000000000000000000000000000008110156115c3576040517f3a5f7b5700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006115ef7f000000000000000000000000000000000000000000000000000000000000000083614d4b565b90506115fb838261501d565b611606906002614d7b565b94507f000000000000000000000000000000000000000000000000000000000000000083611635600288615031565b62ffffff166116449190614e71565b61164e9083614d4b565b1093505050509091565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260408120908061168761150d565b91509150806116c2576040517fdc12c97300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82547801000000000000000000000000000000000000000000000000900462ffffff16158015906117185750825462ffffff83811678010000000000000000000000000000000000000000000000009092041614155b1561174f576040517f0aafb74c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825462ffffff83167801000000000000000000000000000000000000000000000000027fffffffffff000000000000000000000000000000000000000000000000000000909116604087901c171783557f0000000000000000000000000000000000000000000000000000000000000000841015611822576040517f78fe52a6000000000000000000000000000000000000000000000000000000008152600481018590527f000000000000000000000000000000000000000000000000000000000000000060248201526044016102cf565b6040517fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008616815262ffffff83169073ffffffffffffffffffffffffffffffffffffffff8816907fe3c45ded79e3db74b160b9a697d75f465f68d287a678532ed0a9fb691553b93d9060200160405180910390a3505050505050565b60006118a861150d565b50905060006118b783836124c5565b905061192a60006118cc8462ffffff16612623565b6040516020016118dc9190615078565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291815267ffffffffffffffff8716600090815260016020522054869085906126e1565b60c0810151606082015160ff161580156119495750815162ffffff1615155b156119785761195b8260a00151612b2c565b60048360a0015160ff16901b61197191906150bd565b6000835290505b60008061199086868660400151876040015187612b5e565b9094509250505060ff821615611a1e57611a1e8760405180604001604052806119cf8a67ffffffffffffffff1660009081526001602052604090205490565b73ffffffffffffffffffffffffffffffffffffffff168152602001611a177f000000000000000000000000000000000000000000000000000000000000000060ff8816614e71565b9052612f24565b60005b60048160ff161015611ae35760008260ff831660048110611a4457611a44614e88565b602002015173ffffffffffffffffffffffffffffffffffffffff1614611ad157611ad1886040518060400160405280858560ff1660048110611a8857611a88614e88565b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020017f0000000000000000000000000000000000000000000000000000000000000000815250612f24565b80611adb816150d6565b915050611a21565b50600060c0850181905267ffffffffffffffff871681526020818152604091829020865181549288015162ffffff9081166301000000027fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000009094169116179190911780825591860151869282907fffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffff166601000000000000836006811115611b8c57611b8c614eef565b021790555060608201518154608084015160a085015160c0909501517fffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff90921667010000000000000060ff948516027fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16176801000000000000000091841691909102177fffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffff166901000000000000000000948316949094027fffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffff16939093176a0100000000000000000000919093160291909117905550505050505050565b60005b8160200151811015610e31578273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83600001518381518110611ccb57611ccb614e88565b60200260200101516000015184600001518481518110611ced57611ced614e88565b6020026020010151602001516040518363ffffffff1660e01b8152600401611d3792919073ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6020604051808303816000875af1158015611d56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7a9190614d5e565b5080611d8581614eb7565b915050611c8d565b7fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000811615611e39576000838383604051602001611dcc9392919061514f565b6040516020818303038152906040528051906020012090508067ffffffffffffffff19168567ffffffffffffffff191614611e33576040517fd13415b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610db1565b60008383604051602001611e4e92919061519a565b6040516020818303038152906040528051906020012090508067ffffffffffffffff19168567ffffffffffffffff19161461069a576040517fd13415b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080604051806040016040528085516005611ed19190614e71565b67ffffffffffffffff811115611ee957611ee9614db1565b604051908082528060200260200182016040528015611f2e57816020015b6040805180820190915260008082526020820152815260200190600190039081611f075790505b50815260200160008152509050611f5f60405180606001604052806000815260200160008152602001600081525090565b60005b8551811015611ff6576000806000611f95868c8c8c8881518110611f8857611f88614e88565b6020026020010151613076565b9250925092508285600001818151611fad9190614d7b565b905250602085018051839190611fc4908390614d7b565b905250604085018051829190611fdb908390614d7b565b905250839250611fee9150829050614eb7565b915050611f62565b5061203860006040518060400160405280600c81526020017f7265736f6c76654d6f7665730000000000000000000000000000000000000000815250846136f9565b6120627f000000000000000000000000000000000000000000000000000000000000000083611c8a565b73ffffffffffffffffffffffffffffffffffffffff871660009081526002602090815260409091205490820151825191945061209d91614d7b565b8310156120f1576020810151815184916120b691614d7b565b6040517f78fe52a6000000000000000000000000000000000000000000000000000000008152600481019290925260248201526044016102cf565b73ffffffffffffffffffffffffffffffffffffffff8416612156576020810151815161211d9190614d7b565b6121279084614d4b565b73ffffffffffffffffffffffffffffffffffffffff881660009081526002602052604090208190559250612318565b8051156122235780516040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015230602483015260448201929092527f0000000000000000000000000000000000000000000000000000000000000000909116906323b872dd906064016020604051808303816000875af11580156121fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122219190614d5e565b505b6020810151156123185760208101516040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301527f00000000000000000000000000000000000000000000000000000000000000008116602483015260448201929092527f0000000000000000000000000000000000000000000000000000000000000000909116906323b872dd906064016020604051808303816000875af11580156122f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123169190614d5e565b505b6040810151156123e55760408181015190517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff898116600483015260248201929092527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af11580156123bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123e39190614d5e565b505b5050949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661243157504290565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b80777ea6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561249c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124c091906151b3565b905090565b6040805160e0808201835260008083526020808401829052838501829052606084018290526080840182905260a0840182905260c0840182905267ffffffffffffffff871682528181529084902084519283018552805462ffffff808216855263010000008204169284019290925292939192918301906601000000000000900460ff16600681111561255a5761255a614eef565b600681111561256b5761256b614eef565b8152905460ff67010000000000000082048116602084015268010000000000000000820460000b60408401526901000000000000000000820481166060808501919091526a010000000000000000000090920416608092830152825191830151908301519293509091600162ffffff8416108015906125ed575060008160ff16115b1561261a57600080612606858760a0015186868b61390f565b60ff909116606088015262ffffff16865250505b50505092915050565b6060600061263083613b83565b600101905060008167ffffffffffffffff81111561265057612650614db1565b6040519080825280601f01601f19166020018201604052801561267a576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461268457509392505050565b600060ff8616156127b3578560ff16600114612778578560ff1660021461273d576040518060400160405280600c81526020017f20202020202020202020202000000000000000000000000000000000000000008152506127c4565b6040518060400160405280600881526020017f20202020202020200000000000000000000000000000000000000000000000008152506127c4565b6040518060400160405280600481526020017f20202020000000000000000000000000000000000000000000000000000000008152506127c4565b604051806020016040528060008152505b90506128066040518060400160405280600481526020017f25732573000000000000000000000000000000000000000000000000000000008152508287613c66565b6040805160608101909152603f80825263ffffffff86811692602088811c90921692612839926158089083013984613cf9565b6128906040518060400160405280600e81526020017f257363656c6c202825732c2573290000000000000000000000000000000000008152508461287f8560030b613d8a565b61288b8560030b613d8a565b613e18565b6128b26040518060600160405280603f8152602001615808603f913984613cf9565b6128fb6040518060400160405280601981526020017f2573202d206c61737445706f63685570646174653a202025730000000000000081525084876000015162ffffff16613ead565b6129446040518060400160405280601f81526020017f2573202d2065706f63685768656e546f6b656e497341646465643a202025730081525084876020015162ffffff16613ead565b61299c6040518060400160405280600f81526020017f2573202d20636f6c6f723a202025730000000000000000000000000000000000815250848760400151600681111561299457612994614eef565b60ff16613ead565b6129e36040518060400160405280600e81526020017f2573202d206c6966653a2020257300000000000000000000000000000000000081525084876060015160ff16613ead565b612a2a6040518060400160405280601681526020017f2573202d20646973747269627574696f6e3a2020257300000000000000000000815250848760c0015160ff16613ead565b612a6a6040518060400160405280600f81526020017f2573202d206f776e65723a2020257300000000000000000000000000000000008152508486613f40565b612ab96040518060400160405280600e81526020017f2573202d2064656c74613a20257300000000000000000000000000000000000081525084612ab4886080015160000b613d8a565b613c66565b612b006040518060400160405280601281526020017f2573202d20656e656d794d61703a202025730000000000000000000000000000815250848760a0015160ff16613ead565b612b226040518060600160405280603f8152602001615808603f913984613cf9565b5050505050505050565b60005b60ff821615612b5957612b436001836151cc565b9091169080612b51816150d6565b915050612b2f565b919050565b6000806000612b6b6149b4565b612baa6040518060400160405280600481526020017f66726f6d000000000000000000000000000000000000000000000000000000008152508a613fd3565b60008080612be367ffffffffffffffff8d16827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61402f565b9050612c246040518060400160405280600a81526020017f7570506f736974696f6e0000000000000000000000000000000000000000000081525082613fd3565b612c32818c60028d8d61407f565b9093509150600083810b1215612c49578560011795505b93810193600488811c81169003612c8d5767ffffffffffffffff811660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1684525b50948101946000612cc967ffffffffffffffff8d167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8361402f565b9050612d0a6040518060400160405280600c81526020017f6c656674506f736974696f6e000000000000000000000000000000000000000081525082613fd3565b612d18818c60038d8d61407f565b9093509150600083810b1215612d2f578560021795505b938101936008600489901c81169003612d785767ffffffffffffffff811660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1660208501525b50948101946000612d9567ffffffffffffffff8d1682600161402f565b9050612dd66040518060400160405280600c81526020017f646f776e506f736974696f6e000000000000000000000000000000000000000081525082613fd3565b612de4818c60008d8d61407f565b9093509150600083810b1215612dfb578560041795505b938101936001600489901c81169003612e445767ffffffffffffffff811660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1660408501525b50948101946000612e6167ffffffffffffffff8d1660018361402f565b9050612ea26040518060400160405280600d81526020017f7269676874506f736974696f6e0000000000000000000000000000000000000081525082613fd3565b612eb0818c60018d8d61407f565b9093509150600083810b1215612ec7578560081795505b938101936002600489901c81169003612f105767ffffffffffffffff811660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1660608501525b828701965050505095509550955095915050565b60005b8260200151811015612fd657816000015173ffffffffffffffffffffffffffffffffffffffff1683600001518281518110612f6457612f64614e88565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1603612fc45760208201518351805183908110612fa457612fa4614e88565b6020026020010151602001818151612fbc9190614d7b565b905250505050565b80612fce81614eb7565b915050612f27565b5080518251602084015181518110612ff057612ff0614e88565b60200260200101516000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508060200151826000015183602001518151811061304d5761304d614e88565b6020026020010151602001818152505081602001805180919061306f90614eb7565b9052505050565b60008060008061308a8560000151876124c5565b9050613100600061309f8862ffffff16612623565b6040516020016130af91906151e5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152885167ffffffffffffffff811660009081526001602052919091205485906126e1565b60c0810151606082015160ff1615801561311f5750815162ffffff1615155b1561314e576131318260a00151612b2c565b60048360a0015160ff16901b61314791906150bd565b6000835290505b60008660200151600681111561316657613166614eef565b0361327a577f000000000000000000000000000000000000000000000000000000000000000060ff16826060015160ff161415806131eb5750855167ffffffffffffffff1660009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff89169073ffffffffffffffffffffffffffffffffffffffff1614155b15613221576000807f000000000000000000000000000000000000000000000000000000000000000094509450945050506136ef565b6132758960405180604001604052808b73ffffffffffffffffffffffffffffffffffffffff1681526020017f0000000000000000000000000000000000000000000000000000000000000000815250612f24565b6132d9565b8662ffffff16826020015162ffffff16036132d957606082015160ff16156132a857600660208701526132d9565b6000807f000000000000000000000000000000000000000000000000000000000000000094509450945050506136ef565b6000806132ed8b898b876040015187614279565b915091508973ffffffffffffffffffffffffffffffffffffffff16886000015167ffffffffffffffff167f17b85ded3fb12432ee427abc34a3026e1fbbb8bc431e3dbe51bc81215655c25c86604001518b6020015160405161335092919061522a565b60405180910390a387602001518460400190600681111561337357613373614eef565b9081600681111561338657613386614eef565b905250600060c0850181905262ffffff8a166020860152846040015160068111156133b3576133b3614eef565b03613412576000606085018190528085526080850181905260a08501819052885167ffffffffffffffff168152600160205260408120557f000000000000000000000000000000000000000000000000000000000000000094506134de565b60ff811660a0850152600082900b60808501526001606085015262ffffff891684527f0000000000000000000000000000000000000000000000000000000000000000965060068460400151600681111561346f5761346f614eef565b036134aa57875167ffffffffffffffff16600090815260016020526040902073ffffffffffffffffffffffffffffffffffffffff90556134de565b875167ffffffffffffffff16600090815260016020526040902073ffffffffffffffffffffffffffffffffffffffff8b1690555b875167ffffffffffffffff1660009081526020818152604091829020865181549288015162ffffff9081166301000000027fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000009094169116179190911780825591860151869282907fffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffff16660100000000000083600681111561358157613581614eef565b021790555060608201518154608084015160a085015160c0909501517fffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff90921667010000000000000060ff948516027fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16176801000000000000000091841691909102177fffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffff166901000000000000000000948316949094027fffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffff16939093176a010000000000000000000091909316029190911790556136ea600061368962ffffff8c16612623565b6040516020016136999190615245565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181528b5167ffffffffffffffff811660009081526001602052919091205488906126e1565b505050505b9450945094915050565b600060ff8416156137cb578360ff16600114613790578360ff16600214613755576040518060400160405280600c81526020017f20202020202020202020202000000000000000000000000000000000000000008152506137dc565b6040518060400160405280600881526020017f20202020202020200000000000000000000000000000000000000000000000008152506137dc565b6040518060400160405280600481526020017f20202020000000000000000000000000000000000000000000000000000000008152506137dc565b604051806020016040528060008152505b905061381e6040518060400160405280600481526020017f25732573000000000000000000000000000000000000000000000000000000008152508285613c66565b6138406040518060600160405280603f8152602001615808603f913982613cf9565b60005b82602001518110156138ec576138da6040518060400160405280601281526020017f25737472616e73666572202825732c2573290000000000000000000000000000815250838560000151848151811061389f5761389f614e88565b6020026020010151600001516138d5876000015186815181106138c4576138c4614e88565b602002602001015160200151612623565b614412565b806138e481614eb7565b915050613843565b50610db16040518060600160405280603f8152602001615808603f913982613cf9565b600085600162ffffff82161080159061392b575060008460ff16115b15613b7957600061393c8885615031565b62ffffff1690508015613b705760008660000b60000361397c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61397e565b865b905060008160000b128015613994575060ff8816155b1561399d575060005b60008160000b1315613ac1577f000000000000000000000000000000000000000000000000000000000000000060ff168660ff161015613ab657600081600181613a078a7f00000000000000000000000000000000000000000000000000000000000000006151cc565b613a1191906150bd565b613a1b91906151cc565b613a25919061528a565b90508060ff16831115613a39578060ff1692505b613a4382846152ac565b613a4d90886150bd565b96507f000000000000000000000000000000000000000000000000000000000000000060ff168760ff161115613aa1577f000000000000000000000000000000000000000000000000000000000000000096505b869450613aae838b6152c8565b935050613b6a565b859350889250613b6a565b60008160000b1215613b63576000613ad8826152e4565b6001613ae3846152e4565b613aed908a6150bd565b613af791906151cc565b613b01919061528a565b90508060ff16831115613b15578060ff1692505b6000613b20836152e4565b613b2a90856152ac565b90508760ff168160ff161115613b435760009550613b50565b613b4d81896151cc565b95505b613b5a848c6152c8565b94505050613b6a565b8593508492505b50613b77565b8492508791505b505b9550959350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310613bcc577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310613bf8576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310613c1657662386f26fc10000830492506010015b6305f5e1008310613c2e576305f5e100830492506008015b6127108310613c4257612710830492506004015b60648310613c54576064830492506002015b600a8310613c60576001015b92915050565b610e31838383604051602401613c7e9392919061536c565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f2ced7cef000000000000000000000000000000000000000000000000000000001790526144a3565b6109558282604051602401613d0f9291906153af565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f4b5c4277000000000000000000000000000000000000000000000000000000001790526144a3565b606060008212613da95760405180602001604052806000815250613de0565b6040518060400160405280600181526020017f2d000000000000000000000000000000000000000000000000000000000000008152505b613df1613dec846144af565b612623565b604051602001613e029291906153dd565b6040516020818303038152906040529050919050565b610db184848484604051602401613e32949392919061540c565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fde68f20a000000000000000000000000000000000000000000000000000000001790526144a3565b610e31838383604051602401613ec593929190615464565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f5821efa1000000000000000000000000000000000000000000000000000000001790526144a3565b610e31838383604051602401613f589392919061549a565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f95ed0195000000000000000000000000000000000000000000000000000000001790526144a3565b60008063ffffffff80841690602085901c1691509150610db16040518060400160405280600b81526020017f25733a202825732c2573290000000000000000000000000000000000000000008152508561287f8560030b613d8a565b60006140418363ffffffff86166154e6565b92506140578263ffffffff602087901c166154e6565b915061407763ffffffff841667ffffffff00000000602085901b16615528565b949350505050565b67ffffffffffffffff8516600090815260208181526040808320815160e081018352815462ffffff8082168352630100000082041694820194909452849384939192918301906601000000000000900460ff1660068111156140e3576140e3614eef565b60068111156140f4576140f4614eef565b8152905460ff670100000000000000820481166020840152680100000000000000008204600090810b60408086019190915269010000000000000000008404831660608601526a0100000000000000000000909304909116608090930192909252825190830151929350919081600681111561417257614172614eef565b146141cc5785600681111561418957614189614eef565b81600681111561419b5761419b614eef565b146141c6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6141c9565b60015b94505b60018262ffffff16101580156141f4575060008160068111156141f1576141f1614eef565b14155b1561426c576000836060015160ff1611801561421957508862ffffff168262ffffff16105b156142565760008061423a848660a00151876080015188606001518f61390f565b9150915061424d8c8684848e8e8e6144c6565b9550505061426c565b6142698a8485606001518c8c8c8c6144c6565b93505b5050509550959350505050565b6000806000806000806142978a600001518a8a8d602001518b612b5e565b935093509350935060008260ff161115614332576143328b60405180604001604052806142de8e6000015167ffffffffffffffff1660009081526001602052604090205490565b73ffffffffffffffffffffffffffffffffffffffff168152602001600c6143287f000000000000000000000000000000000000000000000000000000000000000060ff8916614e71565b611a17919061501d565b60005b60048160ff1610156144005760008260ff83166004811061435857614358614e88565b602002015173ffffffffffffffffffffffffffffffffffffffff16146143ee576143ee8c6040518060400160405280858560ff166004811061439c5761439c614e88565b602002015173ffffffffffffffffffffffffffffffffffffffff1681526020018b600f1660ff167f0000000000000000000000000000000000000000000000000000000000000000611a17919061501d565b806143f8816150d6565b915050614335565b50929a91995090975050505050505050565b610db18484848460405160240161442c9493929190615549565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167feb1bff80000000000000000000000000000000000000000000000000000000001790525b6144ac81614993565b50565b6000808212156144c25781600003613c60565b5090565b600080876060015160ff161180156144df575060ff8616155b15614510576144f18760a00151612b2c565b60048860a0015160ff16901b61450791906150bd565b60ff1660c08801525b61457f60006145218660ff16612623565b604051602001614531919061559e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291815267ffffffffffffffff8c166000908152600160205220548b908b906126e1565b61458a846002615703565b614595856002615703565b60c089015160041c16600f16036145fd5760c08701516145b990600f16600c61528a565b60c0880151909150600f1660046145d460ff87166002615712565b1960048a60c0015160ff16901c60ff161660ff16901b6145f491906150bd565b60ff1660c08801525b81600681111561460f5761460f614eef565b83600681111561462157614621614eef565b146147bd57600082600681111561463a5761463a614eef565b036146c15782600681111561465157614651614eef565b8760400151600681111561466757614667614eef565b0361468a5760018760800181815161467f919061571e565b60000b9052506147bd565b60018760800181815161469d919061575d565b60000b90525060a087018051600160ff8781169190911b81189091161690526147bd565b8260068111156146d3576146d3614eef565b876040015160068111156146e9576146e9614eef565b0361471a5760a087018051600160ff8781169190911b9091171690526080870180516002919061467f90839061571e565b81600681111561472c5761472c614eef565b8760400151600681111561474257614742614eef565b0361477357600083600681111561475b5761475b614eef565b1461468a5760028760800181815161469d919061575d565b600083600681111561478757614787614eef565b036147bd5760018760800181815161479f919061571e565b60000b90525060a087018051600160ff8781169190911b9091171690525b62ffffff8516875260ff80871660608901526147f1906000906147e1908716612623565b604051602001614531919061579c565b67ffffffffffffffff88166000908152602081815260409182902089518154928b015162ffffff9081166301000000027fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000009094169116179190911780825591890151899282907fffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffff16660100000000000083600681111561489357614893614eef565b021790555060608201518154608084015160a085015160c0909501517fffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffff90921667010000000000000060ff948516027fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16176801000000000000000091841691909102177fffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffff166901000000000000000000948316949094027fffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffff16939093176a01000000000000000000009190931602919091179055979650505050505050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b60405180608001604052806004906020820280368337509192915050565b6000602082840312156149e457600080fd5b5035919050565b80357fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000081168114612b5957600080fd5b600060a08284031215614a2d57600080fd5b50919050565b73ffffffffffffffffffffffffffffffffffffffff811681146144ac57600080fd5b6000806000806101008587031215614a6c57600080fd5b614a75856149eb565b935060208501359250614a8b8660408701614a1b565b915060e0850135614a9b81614a33565b939692955090935050565b803567ffffffffffffffff81168114612b5957600080fd5b600060208284031215614ad057600080fd5b614ad982614aa6565b9392505050565b60008083601f840112614af257600080fd5b50813567ffffffffffffffff811115614b0a57600080fd5b6020830191508360208260061b8501011115614b2557600080fd5b9250929050565b600080600080600060808688031215614b4457600080fd5b8535614b4f81614a33565b945060208601359350604086013567ffffffffffffffff811115614b7257600080fd5b614b7e88828901614ae0565b9094509250614b919050606087016149eb565b90509295509295909350565b60008060208385031215614bb057600080fd5b823567ffffffffffffffff80821115614bc857600080fd5b818501915085601f830112614bdc57600080fd5b813581811115614beb57600080fd5b8660208260051b8501011115614c0057600080fd5b60209290920196919550909350505050565b60008060408385031215614c2557600080fd5b614c2e836149eb565b91506020830135614c3e81614a33565b809150509250929050565b80151581146144ac57600080fd5b600080600080600080600060c0888a031215614c7257600080fd5b8735614c7d81614a33565b965060208801359550604088013567ffffffffffffffff811115614ca057600080fd5b614cac8a828b01614ae0565b9096509450614cbf9050606089016149eb565b92506080880135614ccf81614c49565b915060a0880135614cdf81614a33565b8091505092959891949750929550565b60008060c08385031215614d0257600080fd5b82359150614d138460208501614a1b565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115613c6057613c60614d1c565b600060208284031215614d7057600080fd5b8151614ad981614c49565b80820180821115613c6057613c60614d1c565b600060208284031215614da057600080fd5b813560ff81168114614ad957600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b803560078110612b5957600080fd5b600060408284031215614e0157600080fd5b6040516040810181811067ffffffffffffffff82111715614e4b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604052614e5783614aa6565b8152614e6560208401614de0565b60208201529392505050565b8082028115828204841417613c6057613c60614d1c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614ee857614ee8614d1c565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60078110614f55577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6060808252810184905260008560808301825b87811015614fb75767ffffffffffffffff614f8684614aa6565b1682526020614f96818501614de0565b614fa282850182614f1e565b50506040928301929190910190600101614f6c565b507fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000095909516602084015250506040015292915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261502c5761502c614fee565b500490565b62ffffff82811682821603908082111561504d5761504d614d1c565b5092915050565b60005b8381101561506f578181015183820152602001615057565b50506000910152565b7f5f706f6b652061742065706f63682000000000000000000000000000000000008152600082516150b081600f850160208701615054565b91909101600f0192915050565b60ff8181168382160190811115613c6057613c60614d1c565b600060ff821660ff81036150ec576150ec614d1c565b60010192915050565b600081518084526020808501945080840160005b83811015615144578151805167ffffffffffffffff16885283015161513084890182614f1e565b506040969096019590820190600101615109565b509495945050505050565b83815260606020820152600061516860608301856150f5565b90507fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000083166040830152949350505050565b82815260406020820152600061407760408301846150f5565b6000602082840312156151c557600080fd5b5051919050565b60ff8281168282160390811115613c6057613c60614d1c565b7f5f636f6d707574654d6f76652061742065706f6368200000000000000000000081526000825161521d816016850160208701615054565b9190910160160192915050565b604081016152388285614f1e565b614ad96020830184614f1e565b7f414654455220000000000000000000000000000000000000000000000000000081526000825161527d816006850160208701615054565b9190910160060192915050565b600060ff83168061529d5761529d614fee565b8060ff84160491505092915050565b60ff818116838216029081169081811461504d5761504d614d1c565b62ffffff81811683821601908082111561504d5761504d614d1c565b60008160000b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80810361531957615319614d1c565b60000392915050565b6000815180845261533a816020860160208601615054565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60608152600061537f6060830186615322565b82810360208401526153918186615322565b905082810360408401526153a58185615322565b9695505050505050565b6040815260006153c26040830185615322565b82810360208401526153d48185615322565b95945050505050565b600083516153ef818460208801615054565b835190830190615403818360208801615054565b01949350505050565b60808152600061541f6080830187615322565b82810360208401526154318187615322565b905082810360408401526154458186615322565b905082810360608401526154598185615322565b979650505050505050565b6060815260006154776060830186615322565b82810360208401526154898186615322565b915050826040830152949350505050565b6060815260006154ad6060830186615322565b82810360208401526154bf8186615322565b91505073ffffffffffffffffffffffffffffffffffffffff83166040830152949350505050565b600381810b9083900b01637fffffff81137fffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000082121715613c6057613c60614d1c565b67ffffffffffffffff81811683821601908082111561504d5761504d614d1c565b60808152600061555c6080830187615322565b828103602084015261556e8187615322565b905073ffffffffffffffffffffffffffffffffffffffff8516604084015282810360608401526154598185615322565b7f5f75706461746543656c6c46726f6d4e65696768626f722020696e64657800008152600082516155d681601e850160208701615054565b91909101601e0192915050565b600181815b8085111561563c57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561562257615622614d1c565b8085161561562f57918102915b93841c93908002906155e8565b509250929050565b60008261565357506001613c60565b8161566057506000613c60565b816001811461567657600281146156805761569c565b6001915050613c60565b60ff84111561569157615691614d1c565b50506001821b613c60565b5060208310610133831016604e8410600b84101617156156bf575081810a613c60565b6156c983836155e3565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156156fb576156fb614d1c565b029392505050565b6000614ad960ff841683615644565b6000614ad98383615644565b600082810b9082900b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808112607f82131715613c6057613c60614d1c565b600081810b9083900b01607f81137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8082121715613c6057613c60614d1c565b7f4146544552205f75706461746543656c6c46726f6d4e65696768626f7220206981527f6e646578000000000000000000000000000000000000000000000000000000006020820152600082516157fa816024850160208701615054565b919091016024019291505056fe25732d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2da2646970667358221220ecda87f921969d7a103543fbe1ca369059783797101234648f7e52c1e086f7e364736f6c63430008140033",
          "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B8FC3A1 GT PUSH2 0x69 JUMPI DUP1 PUSH4 0xAFA1E2D1 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xAFA1E2D1 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xD4019783 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xD6710112 EQ PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B8FC3A1 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xAE37A62D EQ PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FDD8A69 GT PUSH2 0x9A JUMPI DUP1 PUSH4 0x1FDD8A69 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x4DD3AB23 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x599A71C6 EQ PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA8BCDB9 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x10837A39 EQ PUSH2 0xD8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x49D2 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A55 JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x6A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x4ABE JUMP JUMPDEST PUSH2 0x8D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x4B2C JUMP JUMPDEST PUSH2 0x959 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0x4B9D JUMP JUMPDEST PUSH2 0xCB4 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0x4C12 JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C57 JUMP JUMPDEST PUSH2 0xF45 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4CEF JUMP JUMPDEST PUSH2 0x12CE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP1 PUSH2 0x1D4 PUSH2 0x150D JUMP JUMPDEST DUP5 SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH3 0xFFFFFF AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x237 JUMPI POP DUP1 ISZERO DUP1 PUSH2 0x237 JUMPI POP DUP3 SLOAD PUSH3 0xFFFFFF DUP4 DUP2 AND PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x26E JUMPI PUSH1 0x40 MLOAD PUSH32 0xAAFB74C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP6 ADD PUSH2 0x28F JUMPI SWAP4 POP PUSH1 0x0 PUSH2 0x2E5 JUMP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x78FE52A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2E2 DUP6 DUP3 PUSH2 0x4D4B JUMP JUMPDEST SWAP1 POP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x4D5E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xF7AEB382A1E87F84AA69637A22868C2E12BE1261273F04CDF40A262A8B890031 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x40D DUP5 DUP3 PUSH2 0x4D7B JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE SWAP1 SWAP2 POP PUSH2 0x42D SWAP1 DUP7 DUP4 PUSH2 0x1658 JUMP JUMPDEST DUP3 CALLDATALOAD ISZERO PUSH2 0x53A JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND PUSH4 0xD505ACCF CALLER ADDRESS DUP7 CALLDATALOAD PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x489 PUSH1 0x60 DUP11 ADD PUSH1 0x40 DUP12 ADD PUSH2 0x4D8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP9 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0xC4 DUP3 ADD MSTORE PUSH1 0xE4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x535 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP4 ISZERO PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x4D5E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x9705A8FF16374359785D31B0F1862C27F983645496F40760D180A9830EEAF2E8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ISZERO PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x698 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x6B9 PUSH2 0x150D JUMP JUMPDEST POP DUP3 SLOAD SWAP1 SWAP2 POP PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0x0 SUB PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6599C9AA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SLOAD PUSH3 0xFFFFFF DUP1 DUP4 AND PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND SUB PUSH2 0x777 JUMPI PUSH1 0x40 MLOAD PUSH32 0x175868D700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SLOAD PUSH32 0xFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SSTORE MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x865 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x889 SWAP2 SWAP1 PUSH2 0x4D5E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0xFFFFFF DUP5 AND SWAP2 CALLER SWAP2 PUSH32 0x6337D70DAADADD11F8BE7F6E7B38E6C04D28710B1F2A2894BB14D8E3EAA8CDB6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x5 DUP2 DUP4 ADD DUP2 DUP2 MSTORE PUSH2 0x100 DUP4 ADD SWAP1 SWAP4 MSTORE PUSH1 0x0 SWAP3 DUP3 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x8EF JUMPI POP POP DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 POP PUSH2 0x92B DUP2 DUP4 PUSH2 0x189E JUMP JUMPDEST PUSH2 0x955 PUSH32 0x0 DUP3 PUSH2 0x1C8A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x987 PUSH2 0x150D JUMP JUMPDEST POP DUP3 SLOAD SWAP1 SWAP2 POP PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH3 0xFFFFFF AND ISZERO DUP1 PUSH2 0x9DE JUMPI POP DUP2 SLOAD PUSH3 0xFFFFFF DUP3 DUP2 AND PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND EQ JUMPDEST ISZERO PUSH2 0xA15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x175868D700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP9 MUL DUP3 ADD DUP2 ADD DUP4 MSTORE DUP8 DUP3 MSTORE DUP8 SWAP4 PUSH2 0xA76 SWAP4 SHL SWAP2 DUP11 SWAP2 DUP11 SWAP1 DUP7 SWAP1 DUP2 SWAP1 PUSH1 0x0 SWAP1 DUP6 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xA6B JUMPI PUSH2 0xA5C PUSH1 0x40 DUP4 MUL DUP7 ADD CALLDATASIZE DUP2 SWAP1 SUB DUP2 ADD SWAP1 PUSH2 0x4DEF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA3F JUMP JUMPDEST POP POP POP POP POP DUP8 PUSH2 0x1D8D JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 DUP5 AND ISZERO PUSH2 0xB09 JUMPI PUSH1 0x20 DUP2 EQ PUSH2 0xAD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCC586B4500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 AND PUSH1 0x40 DUP6 SWAP1 SHR OR DUP4 SSTORE PUSH2 0xB30 JUMP JUMPDEST DUP3 SLOAD PUSH32 0xFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 DUP4 SWAP3 SWAP2 PUSH2 0xB51 SWAP1 DUP5 SWAP1 PUSH2 0x4D4B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC2F SWAP2 SWAP1 PUSH2 0x4D5E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0xFFFFFF DUP6 AND SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND SWAP2 PUSH32 0x6337D70DAADADD11F8BE7F6E7B38E6C04D28710B1F2A2894BB14D8E3EAA8CDB6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE DUP2 SWAP1 PUSH1 0x0 SWAP1 DUP1 PUSH2 0xCCF DUP5 PUSH1 0x5 PUSH2 0x4E71 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCE7 JUMPI PUSH2 0xCE7 PUSH2 0x4DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD2C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD05 JUMPI SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD86 JUMPI PUSH2 0xD74 DUP3 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0xD5A JUMPI PUSH2 0xD5A PUSH2 0x4E88 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD6F SWAP2 SWAP1 PUSH2 0x4ABE JUMP JUMPDEST PUSH2 0x189E JUMP JUMPDEST DUP1 PUSH2 0xD7E DUP2 PUSH2 0x4EB7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD3C JUMP JUMPDEST POP PUSH2 0xDB1 PUSH32 0x0 DUP3 PUSH2 0x1C8A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xDD3 SWAP2 SWAP1 DUP5 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x955 JUMPI PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xE31 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP1 PUSH2 0xE4F PUSH2 0x150D JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH2 0xE8A JUMPI PUSH1 0x40 MLOAD PUSH32 0xDC12C97300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH3 0xFFFFFF DUP4 DUP2 AND PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND EQ PUSH2 0xEE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAAFB74C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH32 0xFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 SSTORE PUSH1 0x40 MLOAD PUSH3 0xFFFFFF DUP4 AND SWAP1 CALLER SWAP1 PUSH32 0x619EF9650648DA30C9647D0B77A0DE24A51DA0630C3533D54CC1EB3D798E1EAA SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP1 PUSH2 0xF74 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 ISZERO PUSH2 0xFB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x24F7F40F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0x0 SUB PUSH2 0x100C JUMPI PUSH1 0x40 MLOAD PUSH32 0x6599C9AA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH3 0xFFFFFF DUP4 DUP2 AND PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND EQ PUSH2 0x106A JUMPI PUSH1 0x40 MLOAD PUSH32 0xD5B25B6300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP12 MUL DUP3 ADD DUP2 ADD DUP4 MSTORE DUP11 DUP3 MSTORE PUSH2 0x10CC SWAP4 SWAP1 SWAP3 SHL SWAP2 DUP13 SWAP2 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP2 SWAP1 PUSH1 0x0 SWAP1 DUP6 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x10C1 JUMPI PUSH2 0x10B2 PUSH1 0x40 DUP4 MUL DUP7 ADD CALLDATASIZE DUP2 SWAP1 SUB DUP2 ADD SWAP1 PUSH2 0x4DEF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1095 JUMP JUMPDEST POP POP POP POP POP DUP10 PUSH2 0x1D8D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1138 DUP12 DUP5 DUP12 DUP12 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1121 JUMPI PUSH2 0x1112 PUSH1 0x40 DUP4 MUL DUP7 ADD CALLDATASIZE DUP2 SWAP1 SUB DUP2 ADD SWAP1 PUSH2 0x4DEF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x10F5 JUMP JUMPDEST POP POP POP POP POP DUP10 PUSH2 0x1131 JUMPI DUP15 PUSH2 0x1EB5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB5 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP PUSH1 0x40 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 DUP9 AND ISZERO PUSH2 0x11D3 JUMPI PUSH1 0x20 DUP10 EQ PUSH2 0x11A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCC586B4500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 AND PUSH1 0x40 DUP10 SWAP1 SHR OR DUP6 SSTORE PUSH2 0x11FA JUMP JUMPDEST DUP5 SLOAD PUSH32 0xFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 SSTORE JUMPDEST DUP1 PUSH8 0xFFFFFFFFFFFFFFFF NOT AND DUP5 PUSH3 0xFFFFFF AND DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFAB312C5020DC7093E590463878DBFD0567314A7C155B164A60430EBCC7B3803 DUP14 DUP14 DUP14 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1258 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4F59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND ISZERO PUSH2 0x12C0 JUMPI PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x12BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 ISZERO PUSH2 0x955 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x12EE DUP4 DUP3 PUSH2 0x4D7B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE SWAP1 POP DUP2 CALLDATALOAD ISZERO PUSH2 0x140F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND PUSH4 0xD505ACCF CALLER ADDRESS DUP6 CALLDATALOAD PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x135E PUSH1 0x60 DUP10 ADD PUSH1 0x40 DUP11 ADD PUSH2 0x4D8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP9 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0x80 DUP6 ADD CALLDATALOAD PUSH1 0xC4 DUP3 ADD MSTORE PUSH1 0xE4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x140A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14CC SWAP2 SWAP1 PUSH2 0x4D5E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x9705A8FF16374359785D31B0F1862C27F983645496F40760D180A9830EEAF2E8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x155B PUSH32 0x0 PUSH32 0x0 PUSH2 0x4D7B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1567 PUSH2 0x23EF JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 LT ISZERO PUSH2 0x15C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3A5F7B5700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15EF PUSH32 0x0 DUP4 PUSH2 0x4D4B JUMP JUMPDEST SWAP1 POP PUSH2 0x15FB DUP4 DUP3 PUSH2 0x501D JUMP JUMPDEST PUSH2 0x1606 SWAP1 PUSH1 0x2 PUSH2 0x4D7B JUMP JUMPDEST SWAP5 POP PUSH32 0x0 DUP4 PUSH2 0x1635 PUSH1 0x2 DUP9 PUSH2 0x5031 JUMP JUMPDEST PUSH3 0xFFFFFF AND PUSH2 0x1644 SWAP2 SWAP1 PUSH2 0x4E71 JUMP JUMPDEST PUSH2 0x164E SWAP1 DUP4 PUSH2 0x4D4B JUMP JUMPDEST LT SWAP4 POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP1 PUSH2 0x1687 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH2 0x16C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDC12C97300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH3 0xFFFFFF AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1718 JUMPI POP DUP3 SLOAD PUSH3 0xFFFFFF DUP4 DUP2 AND PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x174F JUMPI PUSH1 0x40 MLOAD PUSH32 0xAAFB74C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH3 0xFFFFFF DUP4 AND PUSH25 0x1000000000000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFF000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND PUSH1 0x40 DUP8 SWAP1 SHR OR OR DUP4 SSTORE PUSH32 0x0 DUP5 LT ISZERO PUSH2 0x1822 JUMPI PUSH1 0x40 MLOAD PUSH32 0x78FE52A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 DUP7 AND DUP2 MSTORE PUSH3 0xFFFFFF DUP4 AND SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND SWAP1 PUSH32 0xE3C45DED79E3DB74B160B9A697D75F465F68D287A678532ED0A9FB691553B93D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A8 PUSH2 0x150D JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0x18B7 DUP4 DUP4 PUSH2 0x24C5 JUMP JUMPDEST SWAP1 POP PUSH2 0x192A PUSH1 0x0 PUSH2 0x18CC DUP5 PUSH3 0xFFFFFF AND PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18DC SWAP2 SWAP1 PUSH2 0x5078 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SLOAD DUP7 SWAP1 DUP6 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1949 JUMPI POP DUP2 MLOAD PUSH3 0xFFFFFF AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1978 JUMPI PUSH2 0x195B DUP3 PUSH1 0xA0 ADD MLOAD PUSH2 0x2B2C JUMP JUMPDEST PUSH1 0x4 DUP4 PUSH1 0xA0 ADD MLOAD PUSH1 0xFF AND SWAP1 SHL PUSH2 0x1971 SWAP2 SWAP1 PUSH2 0x50BD JUMP JUMPDEST PUSH1 0x0 DUP4 MSTORE SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1990 DUP7 DUP7 DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x40 ADD MLOAD DUP8 PUSH2 0x2B5E JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x1A1E JUMPI PUSH2 0x1A1E DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x19CF DUP11 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A17 PUSH32 0x0 PUSH1 0xFF DUP9 AND PUSH2 0x4E71 JUMP JUMPDEST SWAP1 MSTORE PUSH2 0x2F24 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x1AE3 JUMPI PUSH1 0x0 DUP3 PUSH1 0xFF DUP4 AND PUSH1 0x4 DUP2 LT PUSH2 0x1A44 JUMPI PUSH2 0x1A44 PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AD1 JUMPI PUSH2 0x1AD1 DUP9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP6 PUSH1 0xFF AND PUSH1 0x4 DUP2 LT PUSH2 0x1A88 JUMPI PUSH2 0x1A88 PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 DUP2 MSTORE POP PUSH2 0x2F24 JUMP JUMPDEST DUP1 PUSH2 0x1ADB DUP2 PUSH2 0x50D6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A21 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0xC0 DUP6 ADD DUP2 SWAP1 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP8 AND DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP7 MLOAD DUP2 SLOAD SWAP3 DUP9 ADD MLOAD PUSH3 0xFFFFFF SWAP1 DUP2 AND PUSH4 0x1000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000 SWAP1 SWAP5 AND SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR DUP1 DUP3 SSTORE SWAP2 DUP7 ADD MLOAD DUP7 SWAP3 DUP3 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFF AND PUSH7 0x1000000000000 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1B8C JUMPI PUSH2 0x1B8C PUSH2 0x4EEF JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 SLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 SWAP1 SWAP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH8 0x100000000000000 PUSH1 0xFF SWAP5 DUP6 AND MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND OR PUSH9 0x10000000000000000 SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 MUL OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFF AND PUSH10 0x1000000000000000000 SWAP5 DUP4 AND SWAP5 SWAP1 SWAP5 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFF AND SWAP4 SWAP1 SWAP4 OR PUSH11 0x100000000000000000000 SWAP2 SWAP1 SWAP4 AND MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0xE31 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 PUSH1 0x0 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1CCB JUMPI PUSH2 0x1CCB PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1CED JUMPI PUSH2 0x1CED PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D37 SWAP3 SWAP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D56 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D7A SWAP2 SWAP1 PUSH2 0x4D5E JUMP JUMPDEST POP DUP1 PUSH2 0x1D85 DUP2 PUSH2 0x4EB7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C8D JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 DUP2 AND ISZERO PUSH2 0x1E39 JUMPI PUSH1 0x0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1DCC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x514F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF NOT AND DUP6 PUSH8 0xFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1E33 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD13415B500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xDB1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E4E SWAP3 SWAP2 SWAP1 PUSH2 0x519A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF NOT AND DUP6 PUSH8 0xFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH32 0xD13415B500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 MLOAD PUSH1 0x5 PUSH2 0x1ED1 SWAP2 SWAP1 PUSH2 0x4E71 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EE9 JUMPI PUSH2 0x1EE9 PUSH2 0x4DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F2E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1F07 JUMPI SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1F5F PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x1FF6 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1F95 DUP7 DUP13 DUP13 DUP13 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x1F88 JUMPI PUSH2 0x1F88 PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3076 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 DUP6 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x1FAD SWAP2 SWAP1 PUSH2 0x4D7B JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x20 DUP6 ADD DUP1 MLOAD DUP4 SWAP2 SWAP1 PUSH2 0x1FC4 SWAP1 DUP4 SWAP1 PUSH2 0x4D7B JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x40 DUP6 ADD DUP1 MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x1FDB SWAP1 DUP4 SWAP1 PUSH2 0x4D7B JUMP JUMPDEST SWAP1 MSTORE POP DUP4 SWAP3 POP PUSH2 0x1FEE SWAP2 POP DUP3 SWAP1 POP PUSH2 0x4EB7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1F62 JUMP JUMPDEST POP PUSH2 0x2038 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7265736F6C76654D6F7665730000000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x36F9 JUMP JUMPDEST PUSH2 0x2062 PUSH32 0x0 DUP4 PUSH2 0x1C8A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 DUP3 ADD MLOAD DUP3 MLOAD SWAP2 SWAP5 POP PUSH2 0x209D SWAP2 PUSH2 0x4D7B JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x20F1 JUMPI PUSH1 0x20 DUP2 ADD MLOAD DUP2 MLOAD DUP5 SWAP2 PUSH2 0x20B6 SWAP2 PUSH2 0x4D7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x78FE52A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x2156 JUMPI PUSH1 0x20 DUP2 ADD MLOAD DUP2 MLOAD PUSH2 0x211D SWAP2 SWAP1 PUSH2 0x4D7B JUMP JUMPDEST PUSH2 0x2127 SWAP1 DUP5 PUSH2 0x4D4B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE SWAP3 POP PUSH2 0x2318 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2223 JUMPI DUP1 MLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2221 SWAP2 SWAP1 PUSH2 0x4D5E JUMP JUMPDEST POP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD ISZERO PUSH2 0x2318 JUMPI PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2316 SWAP2 SWAP1 PUSH2 0x4D5E JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD ISZERO PUSH2 0x23E5 JUMPI PUSH1 0x40 DUP2 DUP2 ADD MLOAD SWAP1 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23E3 SWAP2 SWAP1 PUSH2 0x4D5E JUMP JUMPDEST POP JUMPDEST POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2431 JUMPI POP TIMESTAMP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB80777EA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x249C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24C0 SWAP2 SWAP1 PUSH2 0x51B3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP4 DUP6 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP5 ADD DUP3 SWAP1 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP8 AND DUP3 MSTORE DUP2 DUP2 MSTORE SWAP1 DUP5 SWAP1 KECCAK256 DUP5 MLOAD SWAP3 DUP4 ADD DUP6 MSTORE DUP1 SLOAD PUSH3 0xFFFFFF DUP1 DUP3 AND DUP6 MSTORE PUSH4 0x1000000 DUP3 DIV AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 DUP4 ADD SWAP1 PUSH7 0x1000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x255A JUMPI PUSH2 0x255A PUSH2 0x4EEF JUMP JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x256B JUMPI PUSH2 0x256B PUSH2 0x4EEF JUMP JUMPDEST DUP2 MSTORE SWAP1 SLOAD PUSH1 0xFF PUSH8 0x100000000000000 DUP3 DIV DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH9 0x10000000000000000 DUP3 DIV PUSH1 0x0 SIGNEXTEND PUSH1 0x40 DUP5 ADD MSTORE PUSH10 0x1000000000000000000 DUP3 DIV DUP2 AND PUSH1 0x60 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH11 0x100000000000000000000 SWAP1 SWAP3 DIV AND PUSH1 0x80 SWAP3 DUP4 ADD MSTORE DUP3 MLOAD SWAP2 DUP4 ADD MLOAD SWAP1 DUP4 ADD MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH3 0xFFFFFF DUP5 AND LT DUP1 ISZERO SWAP1 PUSH2 0x25ED JUMPI POP PUSH1 0x0 DUP2 PUSH1 0xFF AND GT JUMPDEST ISZERO PUSH2 0x261A JUMPI PUSH1 0x0 DUP1 PUSH2 0x2606 DUP6 DUP8 PUSH1 0xA0 ADD MLOAD DUP7 DUP7 DUP12 PUSH2 0x390F JUMP JUMPDEST PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x60 DUP9 ADD MSTORE PUSH3 0xFFFFFF AND DUP7 MSTORE POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2630 DUP4 PUSH2 0x3B83 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2650 JUMPI PUSH2 0x2650 PUSH2 0x4DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x267A JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x2684 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP7 AND ISZERO PUSH2 0x27B3 JUMPI DUP6 PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x2778 JUMPI DUP6 PUSH1 0xFF AND PUSH1 0x2 EQ PUSH2 0x273D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2020202020202020202020200000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x27C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2020202020202020000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x27C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2020202000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x27C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP JUMPDEST SWAP1 POP PUSH2 0x2806 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2573257300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP3 DUP8 PUSH2 0x3C66 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3F DUP1 DUP3 MSTORE PUSH4 0xFFFFFFFF DUP7 DUP2 AND SWAP3 PUSH1 0x20 DUP9 DUP2 SHR SWAP1 SWAP3 AND SWAP3 PUSH2 0x2839 SWAP3 PUSH2 0x5808 SWAP1 DUP4 ADD CODECOPY DUP5 PUSH2 0x3CF9 JUMP JUMPDEST PUSH2 0x2890 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x257363656C6C202825732C257329000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x287F DUP6 PUSH1 0x3 SIGNEXTEND PUSH2 0x3D8A JUMP JUMPDEST PUSH2 0x288B DUP6 PUSH1 0x3 SIGNEXTEND PUSH2 0x3D8A JUMP JUMPDEST PUSH2 0x3E18 JUMP JUMPDEST PUSH2 0x28B2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5808 PUSH1 0x3F SWAP2 CODECOPY DUP5 PUSH2 0x3CF9 JUMP JUMPDEST PUSH2 0x28FB PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2573202D206C61737445706F63685570646174653A2020257300000000000000 DUP2 MSTORE POP DUP5 DUP8 PUSH1 0x0 ADD MLOAD PUSH3 0xFFFFFF AND PUSH2 0x3EAD JUMP JUMPDEST PUSH2 0x2944 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2573202D2065706F63685768656E546F6B656E497341646465643A2020257300 DUP2 MSTORE POP DUP5 DUP8 PUSH1 0x20 ADD MLOAD PUSH3 0xFFFFFF AND PUSH2 0x3EAD JUMP JUMPDEST PUSH2 0x299C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2573202D20636F6C6F723A202025730000000000000000000000000000000000 DUP2 MSTORE POP DUP5 DUP8 PUSH1 0x40 ADD MLOAD PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x2994 JUMPI PUSH2 0x2994 PUSH2 0x4EEF JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x3EAD JUMP JUMPDEST PUSH2 0x29E3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2573202D206C6966653A20202573000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 DUP8 PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND PUSH2 0x3EAD JUMP JUMPDEST PUSH2 0x2A2A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2573202D20646973747269627574696F6E3A2020257300000000000000000000 DUP2 MSTORE POP DUP5 DUP8 PUSH1 0xC0 ADD MLOAD PUSH1 0xFF AND PUSH2 0x3EAD JUMP JUMPDEST PUSH2 0x2A6A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2573202D206F776E65723A202025730000000000000000000000000000000000 DUP2 MSTORE POP DUP5 DUP7 PUSH2 0x3F40 JUMP JUMPDEST PUSH2 0x2AB9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2573202D2064656C74613A202573000000000000000000000000000000000000 DUP2 MSTORE POP DUP5 PUSH2 0x2AB4 DUP9 PUSH1 0x80 ADD MLOAD PUSH1 0x0 SIGNEXTEND PUSH2 0x3D8A JUMP JUMPDEST PUSH2 0x3C66 JUMP JUMPDEST PUSH2 0x2B00 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2573202D20656E656D794D61703A202025730000000000000000000000000000 DUP2 MSTORE POP DUP5 DUP8 PUSH1 0xA0 ADD MLOAD PUSH1 0xFF AND PUSH2 0x3EAD JUMP JUMPDEST PUSH2 0x2B22 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5808 PUSH1 0x3F SWAP2 CODECOPY DUP5 PUSH2 0x3CF9 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x2B59 JUMPI PUSH2 0x2B43 PUSH1 0x1 DUP4 PUSH2 0x51CC JUMP JUMPDEST SWAP1 SWAP2 AND SWAP1 DUP1 PUSH2 0x2B51 DUP2 PUSH2 0x50D6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B2F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2B6B PUSH2 0x49B4 JUMP JUMPDEST PUSH2 0x2BAA PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x66726F6D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP11 PUSH2 0x3FD3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x2BE3 PUSH8 0xFFFFFFFFFFFFFFFF DUP14 AND DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x402F JUMP JUMPDEST SWAP1 POP PUSH2 0x2C24 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7570506F736974696F6E00000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP3 PUSH2 0x3FD3 JUMP JUMPDEST PUSH2 0x2C32 DUP2 DUP13 PUSH1 0x2 DUP14 DUP14 PUSH2 0x407F JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x0 DUP4 DUP2 SIGNEXTEND SLT ISZERO PUSH2 0x2C49 JUMPI DUP6 PUSH1 0x1 OR SWAP6 POP JUMPDEST SWAP4 DUP2 ADD SWAP4 PUSH1 0x4 DUP9 DUP2 SHR DUP2 AND SWAP1 SUB PUSH2 0x2C8D JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 MSTORE JUMPDEST POP SWAP5 DUP2 ADD SWAP5 PUSH1 0x0 PUSH2 0x2CC9 PUSH8 0xFFFFFFFFFFFFFFFF DUP14 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH2 0x402F JUMP JUMPDEST SWAP1 POP PUSH2 0x2D0A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6C656674506F736974696F6E0000000000000000000000000000000000000000 DUP2 MSTORE POP DUP3 PUSH2 0x3FD3 JUMP JUMPDEST PUSH2 0x2D18 DUP2 DUP13 PUSH1 0x3 DUP14 DUP14 PUSH2 0x407F JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x0 DUP4 DUP2 SIGNEXTEND SLT ISZERO PUSH2 0x2D2F JUMPI DUP6 PUSH1 0x2 OR SWAP6 POP JUMPDEST SWAP4 DUP2 ADD SWAP4 PUSH1 0x8 PUSH1 0x4 DUP10 SWAP1 SHR DUP2 AND SWAP1 SUB PUSH2 0x2D78 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP6 ADD MSTORE JUMPDEST POP SWAP5 DUP2 ADD SWAP5 PUSH1 0x0 PUSH2 0x2D95 PUSH8 0xFFFFFFFFFFFFFFFF DUP14 AND DUP3 PUSH1 0x1 PUSH2 0x402F JUMP JUMPDEST SWAP1 POP PUSH2 0x2DD6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646F776E506F736974696F6E0000000000000000000000000000000000000000 DUP2 MSTORE POP DUP3 PUSH2 0x3FD3 JUMP JUMPDEST PUSH2 0x2DE4 DUP2 DUP13 PUSH1 0x0 DUP14 DUP14 PUSH2 0x407F JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x0 DUP4 DUP2 SIGNEXTEND SLT ISZERO PUSH2 0x2DFB JUMPI DUP6 PUSH1 0x4 OR SWAP6 POP JUMPDEST SWAP4 DUP2 ADD SWAP4 PUSH1 0x1 PUSH1 0x4 DUP10 SWAP1 SHR DUP2 AND SWAP1 SUB PUSH2 0x2E44 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 DUP6 ADD MSTORE JUMPDEST POP SWAP5 DUP2 ADD SWAP5 PUSH1 0x0 PUSH2 0x2E61 PUSH8 0xFFFFFFFFFFFFFFFF DUP14 AND PUSH1 0x1 DUP4 PUSH2 0x402F JUMP JUMPDEST SWAP1 POP PUSH2 0x2EA2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7269676874506F736974696F6E00000000000000000000000000000000000000 DUP2 MSTORE POP DUP3 PUSH2 0x3FD3 JUMP JUMPDEST PUSH2 0x2EB0 DUP2 DUP13 PUSH1 0x1 DUP14 DUP14 PUSH2 0x407F JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x0 DUP4 DUP2 SIGNEXTEND SLT ISZERO PUSH2 0x2EC7 JUMPI DUP6 PUSH1 0x8 OR SWAP6 POP JUMPDEST SWAP4 DUP2 ADD SWAP4 PUSH1 0x2 PUSH1 0x4 DUP10 SWAP1 SHR DUP2 AND SWAP1 SUB PUSH2 0x2F10 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 DUP6 ADD MSTORE JUMPDEST DUP3 DUP8 ADD SWAP7 POP POP POP POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0x2FD6 JUMPI DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2F64 JUMPI PUSH2 0x2F64 PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2FC4 JUMPI PUSH1 0x20 DUP3 ADD MLOAD DUP4 MLOAD DUP1 MLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x2FA4 JUMPI PUSH2 0x2FA4 PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MLOAD PUSH2 0x2FBC SWAP2 SWAP1 PUSH2 0x4D7B JUMP JUMPDEST SWAP1 MSTORE POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x2FCE DUP2 PUSH2 0x4EB7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2F27 JUMP JUMPDEST POP DUP1 MLOAD DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x2FF0 JUMPI PUSH2 0x2FF0 PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x304D JUMPI PUSH2 0x304D PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x20 ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH2 0x306F SWAP1 PUSH2 0x4EB7 JUMP JUMPDEST SWAP1 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x308A DUP6 PUSH1 0x0 ADD MLOAD DUP8 PUSH2 0x24C5 JUMP JUMPDEST SWAP1 POP PUSH2 0x3100 PUSH1 0x0 PUSH2 0x309F DUP9 PUSH3 0xFFFFFF AND PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x30AF SWAP2 SWAP1 PUSH2 0x51E5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP9 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD DUP6 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x311F JUMPI POP DUP2 MLOAD PUSH3 0xFFFFFF AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x314E JUMPI PUSH2 0x3131 DUP3 PUSH1 0xA0 ADD MLOAD PUSH2 0x2B2C JUMP JUMPDEST PUSH1 0x4 DUP4 PUSH1 0xA0 ADD MLOAD PUSH1 0xFF AND SWAP1 SHL PUSH2 0x3147 SWAP2 SWAP1 PUSH2 0x50BD JUMP JUMPDEST PUSH1 0x0 DUP4 MSTORE SWAP1 POP JUMPDEST PUSH1 0x0 DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x3166 JUMPI PUSH2 0x3166 PUSH2 0x4EEF JUMP JUMPDEST SUB PUSH2 0x327A JUMPI PUSH32 0x0 PUSH1 0xFF AND DUP3 PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND EQ ISZERO DUP1 PUSH2 0x31EB JUMPI POP DUP6 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3221 JUMPI PUSH1 0x0 DUP1 PUSH32 0x0 SWAP5 POP SWAP5 POP SWAP5 POP POP POP PUSH2 0x36EF JUMP JUMPDEST PUSH2 0x3275 DUP10 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 DUP2 MSTORE POP PUSH2 0x2F24 JUMP JUMPDEST PUSH2 0x32D9 JUMP JUMPDEST DUP7 PUSH3 0xFFFFFF AND DUP3 PUSH1 0x20 ADD MLOAD PUSH3 0xFFFFFF AND SUB PUSH2 0x32D9 JUMPI PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0xFF AND ISZERO PUSH2 0x32A8 JUMPI PUSH1 0x6 PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x32D9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 SWAP5 POP SWAP5 POP SWAP5 POP POP POP PUSH2 0x36EF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x32ED DUP12 DUP10 DUP12 DUP8 PUSH1 0x40 ADD MLOAD DUP8 PUSH2 0x4279 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x17B85DED3FB12432EE427ABC34A3026E1FBBB8BC431E3DBE51BC81215655C25C DUP7 PUSH1 0x40 ADD MLOAD DUP12 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x3350 SWAP3 SWAP2 SWAP1 PUSH2 0x522A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP8 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD SWAP1 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x3373 JUMPI PUSH2 0x3373 PUSH2 0x4EEF JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x3386 JUMPI PUSH2 0x3386 PUSH2 0x4EEF JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x0 PUSH1 0xC0 DUP6 ADD DUP2 SWAP1 MSTORE PUSH3 0xFFFFFF DUP11 AND PUSH1 0x20 DUP7 ADD MSTORE DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x33B3 JUMPI PUSH2 0x33B3 PUSH2 0x4EEF JUMP JUMPDEST SUB PUSH2 0x3412 JUMPI PUSH1 0x0 PUSH1 0x60 DUP6 ADD DUP2 SWAP1 MSTORE DUP1 DUP6 MSTORE PUSH1 0x80 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD DUP2 SWAP1 MSTORE DUP9 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH32 0x0 SWAP5 POP PUSH2 0x34DE JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x0 DUP3 SWAP1 SIGNEXTEND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP6 ADD MSTORE PUSH3 0xFFFFFF DUP10 AND DUP5 MSTORE PUSH32 0x0 SWAP7 POP PUSH1 0x6 DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x346F JUMPI PUSH2 0x346F PUSH2 0x4EEF JUMP JUMPDEST SUB PUSH2 0x34AA JUMPI DUP8 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SSTORE PUSH2 0x34DE JUMP JUMPDEST DUP8 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 AND SWAP1 SSTORE JUMPDEST DUP8 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP7 MLOAD DUP2 SLOAD SWAP3 DUP9 ADD MLOAD PUSH3 0xFFFFFF SWAP1 DUP2 AND PUSH4 0x1000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000 SWAP1 SWAP5 AND SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR DUP1 DUP3 SSTORE SWAP2 DUP7 ADD MLOAD DUP7 SWAP3 DUP3 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFF AND PUSH7 0x1000000000000 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x3581 JUMPI PUSH2 0x3581 PUSH2 0x4EEF JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 SLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 SWAP1 SWAP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH8 0x100000000000000 PUSH1 0xFF SWAP5 DUP6 AND MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND OR PUSH9 0x10000000000000000 SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 MUL OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFF AND PUSH10 0x1000000000000000000 SWAP5 DUP4 AND SWAP5 SWAP1 SWAP5 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFF AND SWAP4 SWAP1 SWAP4 OR PUSH11 0x100000000000000000000 SWAP2 SWAP1 SWAP4 AND MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x36EA PUSH1 0x0 PUSH2 0x3689 PUSH3 0xFFFFFF DUP13 AND PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3699 SWAP2 SWAP1 PUSH2 0x5245 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP12 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD DUP9 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST POP POP POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP5 AND ISZERO PUSH2 0x37CB JUMPI DUP4 PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x3790 JUMPI DUP4 PUSH1 0xFF AND PUSH1 0x2 EQ PUSH2 0x3755 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2020202020202020202020200000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x37DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2020202020202020000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x37DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2020202000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x37DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP JUMPDEST SWAP1 POP PUSH2 0x381E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2573257300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP3 DUP6 PUSH2 0x3C66 JUMP JUMPDEST PUSH2 0x3840 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5808 PUSH1 0x3F SWAP2 CODECOPY DUP3 PUSH2 0x3CF9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0x38EC JUMPI PUSH2 0x38DA PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x25737472616E73666572202825732C2573290000000000000000000000000000 DUP2 MSTORE POP DUP4 DUP6 PUSH1 0x0 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x389F JUMPI PUSH2 0x389F PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH2 0x38D5 DUP8 PUSH1 0x0 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x38C4 JUMPI PUSH2 0x38C4 PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x2623 JUMP JUMPDEST PUSH2 0x4412 JUMP JUMPDEST DUP1 PUSH2 0x38E4 DUP2 PUSH2 0x4EB7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3843 JUMP JUMPDEST POP PUSH2 0xDB1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5808 PUSH1 0x3F SWAP2 CODECOPY DUP3 PUSH2 0x3CF9 JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x1 PUSH3 0xFFFFFF DUP3 AND LT DUP1 ISZERO SWAP1 PUSH2 0x392B JUMPI POP PUSH1 0x0 DUP5 PUSH1 0xFF AND GT JUMPDEST ISZERO PUSH2 0x3B79 JUMPI PUSH1 0x0 PUSH2 0x393C DUP9 DUP6 PUSH2 0x5031 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 POP DUP1 ISZERO PUSH2 0x3B70 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 SIGNEXTEND PUSH1 0x0 SUB PUSH2 0x397C JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x397E JUMP JUMPDEST DUP7 JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0x3994 JUMPI POP PUSH1 0xFF DUP9 AND ISZERO JUMPDEST ISZERO PUSH2 0x399D JUMPI POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SIGNEXTEND SGT ISZERO PUSH2 0x3AC1 JUMPI PUSH32 0x0 PUSH1 0xFF AND DUP7 PUSH1 0xFF AND LT ISZERO PUSH2 0x3AB6 JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 PUSH2 0x3A07 DUP11 PUSH32 0x0 PUSH2 0x51CC JUMP JUMPDEST PUSH2 0x3A11 SWAP2 SWAP1 PUSH2 0x50BD JUMP JUMPDEST PUSH2 0x3A1B SWAP2 SWAP1 PUSH2 0x51CC JUMP JUMPDEST PUSH2 0x3A25 SWAP2 SWAP1 PUSH2 0x528A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xFF AND DUP4 GT ISZERO PUSH2 0x3A39 JUMPI DUP1 PUSH1 0xFF AND SWAP3 POP JUMPDEST PUSH2 0x3A43 DUP3 DUP5 PUSH2 0x52AC JUMP JUMPDEST PUSH2 0x3A4D SWAP1 DUP9 PUSH2 0x50BD JUMP JUMPDEST SWAP7 POP PUSH32 0x0 PUSH1 0xFF AND DUP8 PUSH1 0xFF AND GT ISZERO PUSH2 0x3AA1 JUMPI PUSH32 0x0 SWAP7 POP JUMPDEST DUP7 SWAP5 POP PUSH2 0x3AAE DUP4 DUP12 PUSH2 0x52C8 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x3B6A JUMP JUMPDEST DUP6 SWAP4 POP DUP9 SWAP3 POP PUSH2 0x3B6A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SIGNEXTEND SLT ISZERO PUSH2 0x3B63 JUMPI PUSH1 0x0 PUSH2 0x3AD8 DUP3 PUSH2 0x52E4 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x3AE3 DUP5 PUSH2 0x52E4 JUMP JUMPDEST PUSH2 0x3AED SWAP1 DUP11 PUSH2 0x50BD JUMP JUMPDEST PUSH2 0x3AF7 SWAP2 SWAP1 PUSH2 0x51CC JUMP JUMPDEST PUSH2 0x3B01 SWAP2 SWAP1 PUSH2 0x528A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xFF AND DUP4 GT ISZERO PUSH2 0x3B15 JUMPI DUP1 PUSH1 0xFF AND SWAP3 POP JUMPDEST PUSH1 0x0 PUSH2 0x3B20 DUP4 PUSH2 0x52E4 JUMP JUMPDEST PUSH2 0x3B2A SWAP1 DUP6 PUSH2 0x52AC JUMP JUMPDEST SWAP1 POP DUP8 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x3B43 JUMPI PUSH1 0x0 SWAP6 POP PUSH2 0x3B50 JUMP JUMPDEST PUSH2 0x3B4D DUP2 DUP10 PUSH2 0x51CC JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH2 0x3B5A DUP5 DUP13 PUSH2 0x52C8 JUMP JUMPDEST SWAP5 POP POP POP PUSH2 0x3B6A JUMP JUMPDEST DUP6 SWAP4 POP DUP5 SWAP3 POP JUMPDEST POP PUSH2 0x3B77 JUMP JUMPDEST DUP5 SWAP3 POP DUP8 SWAP2 POP JUMPDEST POP JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x3BCC JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x3BF8 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x3C16 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x3C2E JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x3C42 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x3C54 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3C60 JUMPI PUSH1 0x1 ADD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE31 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3C7E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x536C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2CED7CEF00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x44A3 JUMP JUMPDEST PUSH2 0x955 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3D0F SWAP3 SWAP2 SWAP1 PUSH2 0x53AF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4B5C427700000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x44A3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SLT PUSH2 0x3DA9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x3DE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2D00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP JUMPDEST PUSH2 0x3DF1 PUSH2 0x3DEC DUP5 PUSH2 0x44AF JUMP JUMPDEST PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3E02 SWAP3 SWAP2 SWAP1 PUSH2 0x53DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB1 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3E32 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x540C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDE68F20A00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x44A3 JUMP JUMPDEST PUSH2 0xE31 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3EC5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5464 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5821EFA100000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x44A3 JUMP JUMPDEST PUSH2 0xE31 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3F58 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x549A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95ED019500000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x44A3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0xFFFFFFFF DUP1 DUP5 AND SWAP1 PUSH1 0x20 DUP6 SWAP1 SHR AND SWAP2 POP SWAP2 POP PUSH2 0xDB1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x25733A202825732C257329000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP6 PUSH2 0x287F DUP6 PUSH1 0x3 SIGNEXTEND PUSH2 0x3D8A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4041 DUP4 PUSH4 0xFFFFFFFF DUP7 AND PUSH2 0x54E6 JUMP JUMPDEST SWAP3 POP PUSH2 0x4057 DUP3 PUSH4 0xFFFFFFFF PUSH1 0x20 DUP8 SWAP1 SHR AND PUSH2 0x54E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x4077 PUSH4 0xFFFFFFFF DUP5 AND PUSH8 0xFFFFFFFF00000000 PUSH1 0x20 DUP6 SWAP1 SHL AND PUSH2 0x5528 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH3 0xFFFFFF DUP1 DUP3 AND DUP4 MSTORE PUSH4 0x1000000 DUP3 DIV AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP5 SWAP4 DUP5 SWAP4 SWAP2 SWAP3 SWAP2 DUP4 ADD SWAP1 PUSH7 0x1000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x40E3 JUMPI PUSH2 0x40E3 PUSH2 0x4EEF JUMP JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x40F4 JUMPI PUSH2 0x40F4 PUSH2 0x4EEF JUMP JUMPDEST DUP2 MSTORE SWAP1 SLOAD PUSH1 0xFF PUSH8 0x100000000000000 DUP3 DIV DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH9 0x10000000000000000 DUP3 DIV PUSH1 0x0 SWAP1 DUP2 SIGNEXTEND PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH10 0x1000000000000000000 DUP5 DIV DUP4 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH11 0x100000000000000000000 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 MLOAD SWAP1 DUP4 ADD MLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 DUP2 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x4172 JUMPI PUSH2 0x4172 PUSH2 0x4EEF JUMP JUMPDEST EQ PUSH2 0x41CC JUMPI DUP6 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x4189 JUMPI PUSH2 0x4189 PUSH2 0x4EEF JUMP JUMPDEST DUP2 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x419B JUMPI PUSH2 0x419B PUSH2 0x4EEF JUMP JUMPDEST EQ PUSH2 0x41C6 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x41C9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP5 POP JUMPDEST PUSH1 0x1 DUP3 PUSH3 0xFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x41F4 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x41F1 JUMPI PUSH2 0x41F1 PUSH2 0x4EEF JUMP JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0x426C JUMPI PUSH1 0x0 DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND GT DUP1 ISZERO PUSH2 0x4219 JUMPI POP DUP9 PUSH3 0xFFFFFF AND DUP3 PUSH3 0xFFFFFF AND LT JUMPDEST ISZERO PUSH2 0x4256 JUMPI PUSH1 0x0 DUP1 PUSH2 0x423A DUP5 DUP7 PUSH1 0xA0 ADD MLOAD DUP8 PUSH1 0x80 ADD MLOAD DUP9 PUSH1 0x60 ADD MLOAD DUP16 PUSH2 0x390F JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x424D DUP13 DUP7 DUP5 DUP5 DUP15 DUP15 DUP15 PUSH2 0x44C6 JUMP JUMPDEST SWAP6 POP POP POP PUSH2 0x426C JUMP JUMPDEST PUSH2 0x4269 DUP11 DUP5 DUP6 PUSH1 0x60 ADD MLOAD DUP13 DUP13 DUP13 DUP13 PUSH2 0x44C6 JUMP JUMPDEST SWAP4 POP JUMPDEST POP POP POP SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x4297 DUP11 PUSH1 0x0 ADD MLOAD DUP11 DUP11 DUP14 PUSH1 0x20 ADD MLOAD DUP12 PUSH2 0x2B5E JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x0 DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0x4332 JUMPI PUSH2 0x4332 DUP12 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x42DE DUP15 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC PUSH2 0x4328 PUSH32 0x0 PUSH1 0xFF DUP10 AND PUSH2 0x4E71 JUMP JUMPDEST PUSH2 0x1A17 SWAP2 SWAP1 PUSH2 0x501D JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x4400 JUMPI PUSH1 0x0 DUP3 PUSH1 0xFF DUP4 AND PUSH1 0x4 DUP2 LT PUSH2 0x4358 JUMPI PUSH2 0x4358 PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x43EE JUMPI PUSH2 0x43EE DUP13 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP6 PUSH1 0xFF AND PUSH1 0x4 DUP2 LT PUSH2 0x439C JUMPI PUSH2 0x439C PUSH2 0x4E88 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0xF AND PUSH1 0xFF AND PUSH32 0x0 PUSH2 0x1A17 SWAP2 SWAP1 PUSH2 0x501D JUMP JUMPDEST DUP1 PUSH2 0x43F8 DUP2 PUSH2 0x50D6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4335 JUMP JUMPDEST POP SWAP3 SWAP11 SWAP2 SWAP10 POP SWAP1 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDB1 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x442C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5549 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEB1BFF8000000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE JUMPDEST PUSH2 0x44AC DUP2 PUSH2 0x4993 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0x44C2 JUMPI DUP2 PUSH1 0x0 SUB PUSH2 0x3C60 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP8 PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND GT DUP1 ISZERO PUSH2 0x44DF JUMPI POP PUSH1 0xFF DUP7 AND ISZERO JUMPDEST ISZERO PUSH2 0x4510 JUMPI PUSH2 0x44F1 DUP8 PUSH1 0xA0 ADD MLOAD PUSH2 0x2B2C JUMP JUMPDEST PUSH1 0x4 DUP9 PUSH1 0xA0 ADD MLOAD PUSH1 0xFF AND SWAP1 SHL PUSH2 0x4507 SWAP2 SWAP1 PUSH2 0x50BD JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xC0 DUP9 ADD MSTORE JUMPDEST PUSH2 0x457F PUSH1 0x0 PUSH2 0x4521 DUP7 PUSH1 0xFF AND PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4531 SWAP2 SWAP1 PUSH2 0x559E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SLOAD DUP12 SWAP1 DUP12 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH2 0x458A DUP5 PUSH1 0x2 PUSH2 0x5703 JUMP JUMPDEST PUSH2 0x4595 DUP6 PUSH1 0x2 PUSH2 0x5703 JUMP JUMPDEST PUSH1 0xC0 DUP10 ADD MLOAD PUSH1 0x4 SHR AND PUSH1 0xF AND SUB PUSH2 0x45FD JUMPI PUSH1 0xC0 DUP8 ADD MLOAD PUSH2 0x45B9 SWAP1 PUSH1 0xF AND PUSH1 0xC PUSH2 0x528A JUMP JUMPDEST PUSH1 0xC0 DUP9 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0xF AND PUSH1 0x4 PUSH2 0x45D4 PUSH1 0xFF DUP8 AND PUSH1 0x2 PUSH2 0x5712 JUMP JUMPDEST NOT PUSH1 0x4 DUP11 PUSH1 0xC0 ADD MLOAD PUSH1 0xFF AND SWAP1 SHR PUSH1 0xFF AND AND PUSH1 0xFF AND SWAP1 SHL PUSH2 0x45F4 SWAP2 SWAP1 PUSH2 0x50BD JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xC0 DUP9 ADD MSTORE JUMPDEST DUP2 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x460F JUMPI PUSH2 0x460F PUSH2 0x4EEF JUMP JUMPDEST DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x4621 JUMPI PUSH2 0x4621 PUSH2 0x4EEF JUMP JUMPDEST EQ PUSH2 0x47BD JUMPI PUSH1 0x0 DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x463A JUMPI PUSH2 0x463A PUSH2 0x4EEF JUMP JUMPDEST SUB PUSH2 0x46C1 JUMPI DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x4651 JUMPI PUSH2 0x4651 PUSH2 0x4EEF JUMP JUMPDEST DUP8 PUSH1 0x40 ADD MLOAD PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x4667 JUMPI PUSH2 0x4667 PUSH2 0x4EEF JUMP JUMPDEST SUB PUSH2 0x468A JUMPI PUSH1 0x1 DUP8 PUSH1 0x80 ADD DUP2 DUP2 MLOAD PUSH2 0x467F SWAP2 SWAP1 PUSH2 0x571E JUMP JUMPDEST PUSH1 0x0 SIGNEXTEND SWAP1 MSTORE POP PUSH2 0x47BD JUMP JUMPDEST PUSH1 0x1 DUP8 PUSH1 0x80 ADD DUP2 DUP2 MLOAD PUSH2 0x469D SWAP2 SWAP1 PUSH2 0x575D JUMP JUMPDEST PUSH1 0x0 SIGNEXTEND SWAP1 MSTORE POP PUSH1 0xA0 DUP8 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0xFF DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 SHL DUP2 XOR SWAP1 SWAP2 AND AND SWAP1 MSTORE PUSH2 0x47BD JUMP JUMPDEST DUP3 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x46D3 JUMPI PUSH2 0x46D3 PUSH2 0x4EEF JUMP JUMPDEST DUP8 PUSH1 0x40 ADD MLOAD PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x46E9 JUMPI PUSH2 0x46E9 PUSH2 0x4EEF JUMP JUMPDEST SUB PUSH2 0x471A JUMPI PUSH1 0xA0 DUP8 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0xFF DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 SHL SWAP1 SWAP2 OR AND SWAP1 MSTORE PUSH1 0x80 DUP8 ADD DUP1 MLOAD PUSH1 0x2 SWAP2 SWAP1 PUSH2 0x467F SWAP1 DUP4 SWAP1 PUSH2 0x571E JUMP JUMPDEST DUP2 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x472C JUMPI PUSH2 0x472C PUSH2 0x4EEF JUMP JUMPDEST DUP8 PUSH1 0x40 ADD MLOAD PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x4742 JUMPI PUSH2 0x4742 PUSH2 0x4EEF JUMP JUMPDEST SUB PUSH2 0x4773 JUMPI PUSH1 0x0 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x475B JUMPI PUSH2 0x475B PUSH2 0x4EEF JUMP JUMPDEST EQ PUSH2 0x468A JUMPI PUSH1 0x2 DUP8 PUSH1 0x80 ADD DUP2 DUP2 MLOAD PUSH2 0x469D SWAP2 SWAP1 PUSH2 0x575D JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x4787 JUMPI PUSH2 0x4787 PUSH2 0x4EEF JUMP JUMPDEST SUB PUSH2 0x47BD JUMPI PUSH1 0x1 DUP8 PUSH1 0x80 ADD DUP2 DUP2 MLOAD PUSH2 0x479F SWAP2 SWAP1 PUSH2 0x571E JUMP JUMPDEST PUSH1 0x0 SIGNEXTEND SWAP1 MSTORE POP PUSH1 0xA0 DUP8 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0xFF DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 SHL SWAP1 SWAP2 OR AND SWAP1 MSTORE JUMPDEST PUSH3 0xFFFFFF DUP6 AND DUP8 MSTORE PUSH1 0xFF DUP1 DUP8 AND PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x47F1 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x47E1 SWAP1 DUP8 AND PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4531 SWAP2 SWAP1 PUSH2 0x579C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP10 MLOAD DUP2 SLOAD SWAP3 DUP12 ADD MLOAD PUSH3 0xFFFFFF SWAP1 DUP2 AND PUSH4 0x1000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000 SWAP1 SWAP5 AND SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR DUP1 DUP3 SSTORE SWAP2 DUP10 ADD MLOAD DUP10 SWAP3 DUP3 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFF AND PUSH7 0x1000000000000 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x4893 JUMPI PUSH2 0x4893 PUSH2 0x4EEF JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 SLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 SWAP1 SWAP6 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH8 0x100000000000000 PUSH1 0xFF SWAP5 DUP6 AND MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND OR PUSH9 0x10000000000000000 SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 MUL OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFF AND PUSH10 0x1000000000000000000 SWAP5 DUP4 AND SWAP5 SWAP1 SWAP5 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFF AND SWAP4 SWAP1 SWAP4 OR PUSH11 0x100000000000000000000 SWAP2 SWAP1 SWAP4 AND MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH11 0x636F6E736F6C652E6C6F67 SWAP1 POP PUSH1 0x0 DUP1 DUP4 MLOAD PUSH1 0x20 DUP6 ADD DUP5 GAS STATICCALL POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 DUP2 AND DUP2 EQ PUSH2 0x2B59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x44AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4A6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A75 DUP6 PUSH2 0x49EB JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x4A8B DUP7 PUSH1 0x40 DUP8 ADD PUSH2 0x4A1B JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP6 ADD CALLDATALOAD PUSH2 0x4A9B DUP2 PUSH2 0x4A33 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2B59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4AD9 DUP3 PUSH2 0x4AA6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4AF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x6 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x4B25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4B44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x4B4F DUP2 PUSH2 0x4A33 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B7E DUP9 DUP3 DUP10 ADD PUSH2 0x4AE0 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x4B91 SWAP1 POP PUSH1 0x60 DUP8 ADD PUSH2 0x49EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4BB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4BC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4BDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4BEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x4C00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4C25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C2E DUP4 PUSH2 0x49EB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4C3E DUP2 PUSH2 0x4A33 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x44AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4C72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x4C7D DUP2 PUSH2 0x4A33 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4CA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4CAC DUP11 DUP3 DUP12 ADD PUSH2 0x4AE0 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH2 0x4CBF SWAP1 POP PUSH1 0x60 DUP10 ADD PUSH2 0x49EB JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH2 0x4CCF DUP2 PUSH2 0x4C49 JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH2 0x4CDF DUP2 PUSH2 0x4A33 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC0 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4D02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x4D13 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x4A1B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3C60 JUMPI PUSH2 0x3C60 PUSH2 0x4D1C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x4AD9 DUP2 PUSH2 0x4C49 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3C60 JUMPI PUSH2 0x3C60 PUSH2 0x4D1C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4DA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x4AD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x7 DUP2 LT PUSH2 0x2B59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4E4B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x4E57 DUP4 PUSH2 0x4AA6 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x4E65 PUSH1 0x20 DUP5 ADD PUSH2 0x4DE0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3C60 JUMPI PUSH2 0x3C60 PUSH2 0x4D1C JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4EE8 JUMPI PUSH2 0x4EE8 PUSH2 0x4D1C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x4F55 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 DUP6 PUSH1 0x80 DUP4 ADD DUP3 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x4FB7 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x4F86 DUP5 PUSH2 0x4AA6 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x20 PUSH2 0x4F96 DUP2 DUP6 ADD PUSH2 0x4DE0 JUMP JUMPDEST PUSH2 0x4FA2 DUP3 DUP6 ADD DUP3 PUSH2 0x4F1E JUMP JUMPDEST POP POP PUSH1 0x40 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4F6C JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 SWAP6 SWAP1 SWAP6 AND PUSH1 0x20 DUP5 ADD MSTORE POP POP PUSH1 0x40 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x502C JUMPI PUSH2 0x502C PUSH2 0x4FEE JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH3 0xFFFFFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x504D JUMPI PUSH2 0x504D PUSH2 0x4D1C JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x506F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5057 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0x5F706F6B652061742065706F6368200000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x50B0 DUP2 PUSH1 0xF DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x5054 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0xF ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x3C60 JUMPI PUSH2 0x3C60 PUSH2 0x4D1C JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x50EC JUMPI PUSH2 0x50EC PUSH2 0x4D1C JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5144 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND DUP9 MSTORE DUP4 ADD MLOAD PUSH2 0x5130 DUP5 DUP10 ADD DUP3 PUSH2 0x4F1E JUMP JUMPDEST POP PUSH1 0x40 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5109 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x5168 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x50F5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4077 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x50F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x3C60 JUMPI PUSH2 0x3C60 PUSH2 0x4D1C JUMP JUMPDEST PUSH32 0x5F636F6D707574654D6F76652061742065706F63682000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x521D DUP2 PUSH1 0x16 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x5054 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x16 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x5238 DUP3 DUP6 PUSH2 0x4F1E JUMP JUMPDEST PUSH2 0x4AD9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4F1E JUMP JUMPDEST PUSH32 0x4146544552200000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x527D DUP2 PUSH1 0x6 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x5054 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x6 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP4 AND DUP1 PUSH2 0x529D JUMPI PUSH2 0x529D PUSH2 0x4FEE JUMP JUMPDEST DUP1 PUSH1 0xFF DUP5 AND DIV SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND MUL SWAP1 DUP2 AND SWAP1 DUP2 DUP2 EQ PUSH2 0x504D JUMPI PUSH2 0x504D PUSH2 0x4D1C JUMP JUMPDEST PUSH3 0xFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x504D JUMPI PUSH2 0x504D PUSH2 0x4D1C JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SIGNEXTEND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 DUP2 SUB PUSH2 0x5319 JUMPI PUSH2 0x5319 PUSH2 0x4D1C JUMP JUMPDEST PUSH1 0x0 SUB SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x533A DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x5054 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x537F PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x5322 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x5391 DUP2 DUP7 PUSH2 0x5322 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x53A5 DUP2 DUP6 PUSH2 0x5322 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x53C2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x5322 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x53D4 DUP2 DUP6 PUSH2 0x5322 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x53EF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x5054 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x5403 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x5054 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x541F PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x5322 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x5431 DUP2 DUP8 PUSH2 0x5322 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x5445 DUP2 DUP7 PUSH2 0x5322 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x5459 DUP2 DUP6 PUSH2 0x5322 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5477 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x5322 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x5489 DUP2 DUP7 PUSH2 0x5322 JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x54AD PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x5322 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x54BF DUP2 DUP7 PUSH2 0x5322 JUMP JUMPDEST SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SIGNEXTEND SWAP1 DUP4 SWAP1 SIGNEXTEND ADD PUSH4 0x7FFFFFFF DUP2 SGT PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80000000 DUP3 SLT OR ISZERO PUSH2 0x3C60 JUMPI PUSH2 0x3C60 PUSH2 0x4D1C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x504D JUMPI PUSH2 0x504D PUSH2 0x4D1C JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x555C PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x5322 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x556E DUP2 DUP8 PUSH2 0x5322 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x5459 DUP2 DUP6 PUSH2 0x5322 JUMP JUMPDEST PUSH32 0x5F75706461746543656C6C46726F6D4E65696768626F722020696E6465780000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x55D6 DUP2 PUSH1 0x1E DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x5054 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1E ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x563C JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x5622 JUMPI PUSH2 0x5622 PUSH2 0x4D1C JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x562F JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x55E8 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5653 JUMPI POP PUSH1 0x1 PUSH2 0x3C60 JUMP JUMPDEST DUP2 PUSH2 0x5660 JUMPI POP PUSH1 0x0 PUSH2 0x3C60 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x5676 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x5680 JUMPI PUSH2 0x569C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x3C60 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x5691 JUMPI PUSH2 0x5691 PUSH2 0x4D1C JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x3C60 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x56BF JUMPI POP DUP2 DUP2 EXP PUSH2 0x3C60 JUMP JUMPDEST PUSH2 0x56C9 DUP4 DUP4 PUSH2 0x55E3 JUMP JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x56FB JUMPI PUSH2 0x56FB PUSH2 0x4D1C JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AD9 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x5644 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AD9 DUP4 DUP4 PUSH2 0x5644 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 DUP2 SLT PUSH1 0x7F DUP3 SGT OR ISZERO PUSH2 0x3C60 JUMPI PUSH2 0x3C60 PUSH2 0x4D1C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SIGNEXTEND SWAP1 DUP4 SWAP1 SIGNEXTEND ADD PUSH1 0x7F DUP2 SGT PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 DUP3 SLT OR ISZERO PUSH2 0x3C60 JUMPI PUSH2 0x3C60 PUSH2 0x4D1C JUMP JUMPDEST PUSH32 0x4146544552205F75706461746543656C6C46726F6D4E65696768626F72202069 DUP2 MSTORE PUSH32 0x6E64657800000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x57FA DUP2 PUSH1 0x24 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x5054 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x24 ADD SWAP3 SWAP2 POP POP JUMP INVALID 0x25 PUSH20 0x2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D 0x2D LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xDA DUP8 0xF9 0x21 SWAP7 SWAP14 PUSH27 0x103543FBE1CA369059783797101234648F7E52C1E086F7E364736F PUSH13 0x63430008140033000000000000 ",
          "sourceMap": "198:6925:42:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2882:676;;;;;;;;;;-1:-1:-1;2882:676:42;;;;;:::i;:::-;;:::i;:::-;;1224:1095;;;;;;:::i;:::-;;:::i;5492:620::-;;;;;;;;;;;;;:::i;6151:397::-;;;;;;;;;;-1:-1:-1;6151:397:42;;;;;:::i;:::-;;:::i;4662:791::-;;;;;;;;;;-1:-1:-1;4662:791:42;;;;;:::i;:::-;;:::i;6587:534::-;;;;;;;;;;-1:-1:-1;6587:534:42;;;;;:::i;:::-;;:::i;953:232::-;;;;;;:::i;:::-;;:::i;2358:485::-;;;;;;;;;;;;;:::i;3597:1026::-;;;;;;:::i;:::-;;:::i;382:532::-;;;;;;;;;;-1:-1:-1;382:532:42;;;;;:::i;:::-;;:::i;2882:676::-;2985:10;2940:29;2972:24;;;:12;:24;;;;;;2940:29;3034:8;:6;:8::i;:::-;3051:16;;3001:41;;-1:-1:-1;3001:41:42;-1:-1:-1;3051:16:42;;;;;:21;;;;:66;;;3078:9;3077:10;:39;;;-1:-1:-1;3091:16:42;;:25;;;;:16;;;;;:25;;3077:39;3047:120;;;3131:31;;;;;;;;;;;;;;3047:120;3208:10;3171:17;3191:28;;;:16;:28;;;;;;3227:27;;;3223:193;;3270:9;-1:-1:-1;3296:1:42;3223:193;;;3329:6;3317:9;:18;3313:75;;;3350:32;;;;;;;;5433:25:48;;;5474:18;;;5467:34;;;5406:18;;3350:32:42;;;;;;;;3313:75;3392:19;3405:6;3392:19;;:::i;:::-;;;3223:193;3436:10;3419:28;;;;:16;:28;;;;;;;:40;;;3463:35;;;;;;;6008:74:48;;;;6098:18;;;6091:34;;;3419:28:42;3463:6;:15;;;;5981:18:48;;3463:35:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3507:47:42;;;5433:25:48;;;5489:2;5474:18;;5467:34;;;3524:10:42;;3507:47;;5406:18:48;3507:47:42;;;;;;;2936:622;;;;2882:676;:::o;1224:1095::-;1431:10;1394:17;1414:28;;;:16;:28;;;;;;1446:30;1459:17;1414:28;1446:30;:::i;:::-;1497:10;1480:28;;;;:16;:28;;;;;:40;;;1446:30;;-1:-1:-1;1525:54:42;;1553:14;1446:30;1525:15;:54::i;:::-;1949:12;;:16;1945:133;;1972:13;:6;:13;;1986:10;2006:4;2013:12;;2027:15;;;;2044:8;;;;;;;;:::i;:::-;1972:101;;;;;;;;;;7111:42:48;7180:15;;;1972:101:42;;;7162:34:48;7232:15;;;;7212:18;;;7205:43;7264:18;;;7257:34;;;;7307:18;;;7300:34;7383:4;7371:17;7350:19;;;7343:46;2054:8:42;;;;7405:19:48;;;7398:35;2064:8:42;;;;7449:19:48;;;7442:35;7073:19;;1972:101:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1945:133;2086:21;;2082:170;;2114:65;;;;;2134:10;2114:65;;;7751:34:48;2154:4:42;7801:18:48;;;7794:43;7853:18;;;7846:34;;;2114:6:42;:19;;;;;7663:18:48;;2114:65:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2189:58:42;;;5433:25:48;;;5489:2;5474:18;;5467:34;;;2206:10:42;;2189:58;;5406:18:48;2189:58:42;;;;;;;2082:170;2260:19;;;;2256:60;;2286:25;;:14;;;;2301:9;2286:25;;;;;;;;;2301:9;2286:14;:25;;;;;;;;;;;;;;;;;;;;;2256:60;1390:929;1224:1095;;;;:::o;5492:620::-;5604:10;5559:29;5591:24;;;:12;:24;;;;;;5638:8;:6;:8::i;:::-;-1:-1:-1;5655:16:42;;5619:27;;-1:-1:-1;5655:16:42;;;;;;:21;5651:61;;5690:17;;;;;;;;;;;;;;5651:61;5720:16;;:25;;;;:16;;;;;:25;5716:64;;5759:16;;;;;;;;;;;;;;5716:64;5784:20;;;;;;5842:10;-1:-1:-1;5825:28:42;;;:16;:28;;;;;;;;5857:32;;;5893:37;;;;5825:28;5909:12;6026:55:48;;5893:37:42;;;6008:74:48;6098:18;;;6091:34;;;5893:6:42;:15;;;;5981:18:48;;5893:37:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6097:10:42;6055:53;;8375:25:48;;;6105:1:42;8431:2:48;8416:18;;8409:107;6055:53:42;;;;6070:10;;6055:53;;8348:18:48;6055:53:42;;;;;;;5555:557;;;5492:620::o;6151:397::-;6353:87;;;6413:1;6353:87;;;6393:22;;;;;;;;;-1:-1:-1;;6353:87:42;;6393:22;;;;-1:-1:-1;;;;;;;;;;;;;;;;;6393:22:42;;;;;;;;;;;;-1:-1:-1;;6353:87:42;;6434:1;6353:87;;;;;6301:139;-1:-1:-1;6444:35:42;6301:139;6470:8;6444:5;:35::i;:::-;6484:42;6499:6;6507:18;6484:14;:42::i;:::-;6191:357;6151:397;:::o;4662:791::-;4828:20;;;4796:29;4828:20;;;:12;:20;;;;;;4871:8;:6;:8::i;:::-;-1:-1:-1;4887:16:42;;4852:27;;-1:-1:-1;4887:16:42;;;;;:21;;:50;;-1:-1:-1;4912:16:42;;:25;;;;:16;;;;;:25;4887:50;4883:89;;;4951:16;;;;;;;;;;;;;;4883:89;5023:15;;;5012:56;;;;;;;;;;;;;;;4995:5;;5012:56;;5023:15;;5040:6;;4995:5;;;;;;4976:16;;5012:56;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5055:12;5012:10;:56::i;:::-;5077:26;;;;5073:200;;4097:2:36;5114:34:42;;5110:80;;5163:21;;;;;;;;;;;;;;5110:80;5194:30;;;;;;;;;;;5073:200;;;5240:20;;;;;;5073:200;5327:10;5277:14;5310:28;;;:16;:28;;;;;:38;;5294:5;;;;5310:28;:38;;5294:5;;5310:38;:::i;:::-;;;;-1:-1:-1;;5352:37:42;;;;;:15;5368:12;6026:55:48;;5352:37:42;;;6008:74:48;6098:18;;;6091:34;;;5352:6:42;:15;;;;5981:18:48;;5352:37:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5398:51:42;;;8375:25:48;;;8448:66;8436:79;;8431:2;8416:18;;8409:107;5398:51:42;;;;;;;;;;8348:18:48;5398:51:42;;;;;;;4792:661;;;;4662:791;;;;;:::o;6587:534::-;6864:98;;;;;;;;;6670:9;;6651:16;;6864:98;6924:12;6670:9;6935:1;6924:12;:::i;:::-;6904:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;6904:33:42;;;;;;;;;;;;;;;;6864:98;;;;6956:1;6864:98;;;6812:150;;6971:9;6966:88;6990:8;6986:1;:12;6966:88;;;7010:39;7016:18;7036:9;;7046:1;7036:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;7010:5;:39::i;:::-;7000:3;;;;:::i;:::-;;;;6966:88;;;;7057:42;7072:6;7080:18;7057:14;:42::i;:::-;6647:474;;6587:534;;:::o;953:232::-;1061:10;1089:28;;;;:16;:28;;;;;;1045:73;;1061:10;1073:14;;1045:15;:73::i;:::-;1126:19;;;;1122:60;;1152:25;;:14;;;;1167:9;1152:25;;;;;;;;;1167:9;1152:14;:25;;;;;;;;;;;;;;;;;;;;;953:232;;:::o;2358:485::-;2444:10;2399:29;2431:24;;;:12;:24;;;;;;2399:29;2492:8;:6;:8::i;:::-;2459:41;;;;2509:9;2504:48;;2532:15;;;;;;;;;;;;;;2504:48;2559:16;;:25;;;;:16;;;;;:25;2555:79;;2598:31;;;;;;;;;;;;;;2555:79;2771:20;;;;;;2801:38;;2771:20;2801:38;;;2821:10;;2801:38;;2790:1;;2801:38;2395:448;;;2358:485::o;3597:1026::-;3798:20;;;3766:29;3798:20;;;:12;:20;;;;;;3766:29;3855:8;:6;:8::i;:::-;3822:41;;;;3872:9;3868:51;;;3895:19;;;;;;;;;;;;;;3868:51;3926:16;;;;;;;;:21;3922:61;;3961:17;;;;;;;;;;;;;;3922:61;3990:16;;:25;;;;:16;;;;;:25;3986:62;;4029:14;;;;;;;;;;;;;;3986:62;4063:15;;;4052:56;;;;;;;;;;;;;;;;;4063:15;;;;4080:6;;4052:56;4088:5;;;;;;4063:15;;4052:56;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4095:12;4052:10;:56::i;:::-;4113:24;4140:69;4154:6;4162:5;4169;;4140:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4176:10;:32;;4202:6;4140:13;:69::i;4176:32::-;4197:1;4140:13;:69::i;:::-;4237:15;;4113:96;;-1:-1:-1;4237:15:42;;4260:26;;;;4256:204;;4097:2:36;4297:38:42;;4293:84;;4350:21;;;;;;;;;;;;;;4293:84;4381:30;;;;;;;;;;;4256:204;;;4427:20;;;;;;4256:204;4503:12;4469:86;;;4496:5;4469:86;;4488:6;4469:86;;;4517:5;;4524:12;4538:16;4469:86;;;;;;;;;:::i;:::-;;;;;;;;4564:19;;;;4560:60;;4590:25;;:14;;;;4605:9;4590:25;;;;;;;;;4605:9;4590:14;:25;;;;;;;;;;;;;;;;;;;;;4560:60;3762:861;;;;;3597:1026;;;;;;;:::o;382:532::-;472:21;;468:443;;537:10;500:17;520:28;;;:16;:28;;;;;;553:30;566:17;520:28;553:30;:::i;:::-;605:10;588:28;;;;:16;:28;;;;;:40;;;553:30;-1:-1:-1;638:12:42;;:16;634:135;;662:13;:6;:13;;676:10;696:4;703:12;;717:15;;;;734:8;;;;;;;;:::i;:::-;662:101;;;;;;;;;;7111:42:48;7180:15;;;662:101:42;;;7162:34:48;7232:15;;;;7212:18;;;7205:43;7264:18;;;7257:34;;;;7307:18;;;7300:34;7383:4;7371:17;7350:19;;;7343:46;744:8:42;;;;7405:19:48;;;7398:35;754:8:42;;;;7449:19:48;;;7442:35;7073:19;;662:101:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:135;773:65;;;;;793:10;773:65;;;7751:34:48;813:4:42;7801:18:48;;;7794:43;7853:18;;;7846:34;;;773:6:42;:19;;;;;7663:18:48;;773:65:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;848:58:42;;;5433:25:48;;;5489:2;5474:18;;5467:34;;;865:10:42;;848:58;;5406:18:48;848:58:42;;;;;;;495:416;382:532;;:::o;4558:506:36:-;4607:12;;;4665:45;4689:21;4665;:45;:::i;:::-;4641:69;;4714:12;4729;:10;:12::i;:::-;4714:27;;4756:10;4749:4;:17;4745:56;;;4780:16;;;;;;;;;;;;;;4745:56;4804:18;4825:17;4832:10;4825:4;:17;:::i;:::-;4804:38;-1:-1:-1;4861:26:36;4874:13;4804:38;4861:26;:::i;:::-;:30;;4890:1;4861:30;:::i;:::-;4846:46;-1:-1:-1;5039:21:36;5022:13;5009:9;5017:1;4846:46;5009:9;:::i;:::-;5008:27;;;;;;:::i;:::-;4994:42;;:10;:42;:::i;:::-;:66;4982:78;;4637:427;;;4558:506;;:::o;418:860:35:-;547:20;;;515:29;547:20;;;:12;:20;;;;;;515:29;605:8;:6;:8::i;:::-;572:41;;;;623:9;618:48;;646:15;;;;;;;;;;;;;;618:48;673:16;;;;;;;:21;;;;:50;;-1:-1:-1;698:16:35;;:25;;;;:16;;;;;:25;;673:50;669:104;;;737:31;;;;;;;;;;;;;;669:104;777:32;;813:24;;;;;;;;;777:32;;;;813:24;;;;1095:19;1083:31;;1079:141;;;1170:45;;;;;;;;5433:25:48;;;1195:19:35;5474:18:48;;;5467:34;5406:18;;1170:45:35;5259:248:48;1079:141:35;1229:45;;12329:66:48;12317:79;;12299:98;;1229:45:35;;;;;;;;;;12287:2:48;12272:18;1229:45:35;;;;;;;511:767;;;418:860;;;:::o;8242:1379::-;8339:12;8357:8;:6;:8::i;:::-;8338:27;;;8369:24;8396:32;8412:8;8422:5;8396:15;:32::i;:::-;8369:59;;8433:156;8452:1;8491:23;8508:5;8491:23;;:16;:23::i;:::-;8458:57;;;;;;;;:::i;:::-;;;;;;;;;;;;;;8566:17;;;;;;;:7;8458:57;8566:17;;;8520:8;;8533:12;;8433:14;:156::i;:::-;8659:25;;;;8692:17;;;;:22;;;:59;;;;-1:-1:-1;8718:28:35;;:33;;;;8692:59;8688:315;;;8895:33;8906:12;:21;;;8895:10;:33::i;:::-;8890:1;8865:12;:21;;;:26;;;;8864:64;;;;:::i;:::-;8997:1;8966:32;;8849:79;-1:-1:-1;8688:315:35;9012:12;9026:29;9059:107;9081:8;9094:5;9104:12;:18;;;9127:12;:18;;;9150:12;9059:17;:107::i;:::-;9007:159;;-1:-1:-1;9007:159:35;-1:-1:-1;;;9175:10:35;;;;9171:163;;9192:137;9214:18;9238:86;;;;;;;;9265:18;9274:8;9265:18;;7386:13:36;7429:16;;;:7;:16;;;;;;;7320:131;9265:18:35;9238:86;;;;;;9294:28;9303:19;9294:28;;;;:::i;:::-;9238:86;;9192:16;:137::i;:::-;9342:7;9337:212;9359:1;9355;:5;;;9337:212;;;9402:1;9376:11;:14;;;;;;;;;;:::i;:::-;;;;;:28;;;9372:173;;9412:127;9435:18;9460:73;;;;;;;;9487:11;9499:1;9487:14;;;;;;;;;:::i;:::-;;;;;9460:73;;;;;;9512:19;9460:73;;;9412:16;:127::i;:::-;9362:3;;;;:::i;:::-;;;;9337:212;;;-1:-1:-1;9581:1:35;9553:25;;;:29;;;9586:16;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9553:12;;9586:16;;:31;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;9586:31:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;8242:1379:35:o;1554:279:38:-;1673:9;1668:162;1692:18;:31;;;1688:1;:35;1668:162;;;1735:5;:14;;;1750:18;:28;;;1779:1;1750:31;;;;;;;;:::i;:::-;;;;;;;:34;;;1786:18;:28;;;1815:1;1786:31;;;;;;;;:::i;:::-;;;;;;;:38;;;1735:90;;;;;;;;;;;;;;;6038:42:48;6026:55;;;;6008:74;;6113:2;6098:18;;6091:34;5996:2;5981:18;;5834:297;1735:90:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1725:3:38;;;;:::i;:::-;;;;1668:162;;249:515;385:26;;;;381:380;;418:20;470:6;478:5;485:12;459:39;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;449:50;;;;;;418:82;;527:12;509:30;;;:14;:30;;;;505:82;;554:27;;;;;;;;;;;;;;505:82;413:178;381:380;;;602:20;654:6;662:5;643:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;633:36;;;;;;602:68;;697:12;679:30;;;:14;:30;;;;675:82;;724:27;;;;;;;;;;;;;;1281:2080:35;1404:24;1686:49;1738:102;;;;;;;;1798:5;:12;1813:1;1798:16;;;;:::i;:::-;1778:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;1778:37:35;;;;;;;;;;;;;;;;1738:102;;;;1834:1;1738:102;;;1686:154;;1844:24;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;1844:24:35;1877:9;1872:288;1896:5;:12;1892:1;:16;1872:288;;;1921:14;1937:13;1952:16;1972:78;1990:18;2014:6;2026:5;2037;2043:1;2037:8;;;;;;;;:::i;:::-;;;;;;;1972:12;:78::i;:::-;1920:130;;;;;;2079:6;2056;:19;;:29;;;;;;;:::i;:::-;;;-1:-1:-1;2090:18:35;;;:27;;2112:5;;2090:18;:27;;2112:5;;2090:27;:::i;:::-;;;-1:-1:-1;2122:21:35;;;:33;;2147:8;;2122:21;:33;;2147:8;;2122:33;:::i;:::-;;;-1:-1:-1;1910:3:35;;-1:-1:-1;1910:3:35;;-1:-1:-1;1910:3:35;;-1:-1:-1;1910:3:35;:::i;:::-;;;;1872:288;;;;2164:58;2184:1;2164:58;;;;;;;;;;;;;;;;;2203:18;2164:19;:58::i;:::-;2227:42;2242:6;2250:18;2227:14;:42::i;:::-;2293:24;;;;;;;:16;:24;;;;;;;;;2528:18;;;;2506:19;;2293:24;;-1:-1:-1;2506:40:35;;;:::i;:::-;2487:16;:59;2483:155;;;2614:18;;;;2592:19;;2574:16;;2592:40;;;:::i;:::-;2560:73;;;;;;;;5433:25:48;;;;5474:18;;;5467:34;5406:18;;2560:73:35;5259:248:48;2483:155:35;2645:24;;;2641:470;;2718:18;;;;2696:19;;:40;;2718:18;2696:40;:::i;:::-;2676:60;;;;:::i;:::-;2741:24;;;;;;;:16;:24;;;;;:43;;;2676:60;-1:-1:-1;2641:470:35;;;2804:19;;:24;2800:153;;2927:19;;2880:67;;;;;:19;7769:15:48;;;2880:67:35;;;7751:34:48;2920:4:35;7801:18:48;;;7794:43;7853:18;;;7846:34;;;;2880:6:35;:19;;;;;;7663:18:48;;2880:67:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2800:153;2961:18;;;;:23;2957:150;;3082:18;;;;3036:65;;;;;:19;7769:15:48;;;3036:65:35;;;7751:34:48;3068:12:35;7821:15:48;;7801:18;;;7794:43;7853:18;;;7846:34;;;;3036:6:35;:19;;;;;;7663:18:48;;3036:65:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2957:150;3195:21;;;;:26;3191:167;;3331:21;;;;;3307:46;;;;;:15;6026:55:48;;;3307:46:35;;;6008:74:48;6098:18;;;6091:34;;;;3307:6:35;:15;;;;;;5981:18:48;;3307:46:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3191:167;1430:1931;;1281:2080;;;;;;:::o;294:155:39:-;339:7;364:5;356:28;;352:66;;-1:-1:-1;398:15:39;;294:155::o;352:66::-;428:5;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;421:24;;294:155;:::o;6568:673:36:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6711:16:36;;;;;;;;;;;;6697:30;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6697:30:36;;6711:16;6697:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6751:27;;6795:17;;;;6829:16;;;;6697:30;;-1:-1:-1;6751:27:36;;6968:1;6954:15;;;;;;;:27;;;6980:1;6973:4;:8;;;6954:27;6950:288;;;6989:13;7004:16;7024:69;7040:10;7052:11;:20;;;7074:5;7081:4;7087:5;7024:15;:69::i;:::-;7098:26;;;;:16;;;:26;7129:39;;;;-1:-1:-1;;6950:288:36;6672:569;;;6568:673;;;;:::o;447:696:0:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:0;-1:-1:-1;604:41:0;-1:-1:-1;765:28:0;;;781:2;765:28;820:280;851:5;;990:8;985:2;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:0;820:280;1064:21;-1:-1:-1;1120:6:0;447:696;-1:-1:-1;;;447:696:0:o;1049:1220:36:-;1193:20;1216:7;;;;:71;;1231:2;:7;;1237:1;1231:7;:56;;1250:2;:7;;1256:1;1250:7;:37;;;;;;;;;;;;;;;;;;;1216:71;;1250:37;;;;;;;;;;;;;;;;;;1216:71;;1231:56;;;;;;;;;;;;;;;;;;1216:71;;;;;;;;;;;;;;;;1193:94;;1323:34;;;;;;;;;;;;;;;;;;1343:6;1351:5;1323:11;:34::i;:::-;1395:86;;;;;;;;;;;;;192:10:47;173:29;;;;236:2;224:14;;;;;;;1395:86:36;;;;;;;1474:6;1395:11;:86::i;:::-;1485:79;;;;;;;;;;;;;;;;;;1515:6;1523:19;1540:1;1523:19;;:16;:19::i;:::-;1544;1561:1;1544:19;;:16;:19::i;:::-;1485:11;:79::i;:::-;1568:86;;;;;;;;;;;;;;;;;;1647:6;1568:11;:86::i;:::-;1658:70;;;;;;;;;;;;;;;;;;1699:6;1707:4;:20;;;1658:70;;:11;:70::i;:::-;1732:82;;;;;;;;;;;;;;;;;;1779:6;1787:4;:26;;;1732:82;;:11;:82::i;:::-;1818:57;;;;;;;;;;;;;;;;;;1849:6;1863:4;:10;;;1857:17;;;;;;;;:::i;:::-;1818:57;;:11;:57::i;:::-;1879:48;;;;;;;;;;;;;;;;;;1909:6;1917:4;:9;;;1879:48;;:11;:48::i;:::-;1931:64;;;;;;;;;;;;;;;;;;1969:6;1977:4;:17;;;1931:64;;:11;:64::i;:::-;1999:45;;;;;;;;;;;;;;;;;;2030:6;2038:5;1999:11;:45::i;:::-;2048:67;;;;;;;;;;;;;;;;;;2078:6;2086:28;2103:4;:10;;;2086:28;;:16;:28::i;:::-;2048:11;:67::i;:::-;2119:56;;;;;;;;;;;;;;;;;;2153:6;2161:4;:13;;;2119:56;;:11;:56::i;:::-;2179:86;;;;;;;;;;;;;;;;;;2258:6;2179:11;:86::i;:::-;1189:1080;;;1049:1220;;;;;:::o;3364:124:35:-;3416:11;3433:52;3440:6;;;;3433:52;;3462:5;3466:1;3462;:5;:::i;:::-;3457:11;;;;3473:7;;;;:::i;:::-;;;;3433:52;;;3364:124;;;:::o;9624:2072::-;9765:13;9780:17;9799:12;9813:29;;:::i;:::-;9863:36;;;;;;;;;;;;;;;;;;9890:8;9863:18;:36::i;:::-;9905:18;;;9968:22;:15;;;9905:18;9987:2;9968:15;:22::i;:::-;9948:42;;9996:44;;;;;;;;;;;;;;;;;;10029:10;9996:18;:44::i;:::-;10069:53;10081:10;10093:5;10100:1;10103:8;10113;10069:11;:53::i;:::-;10046:76;;-1:-1:-1;10046:76:35;-1:-1:-1;10148:1:35;10132:17;;;;10128:66;;;10172:11;10186:1;10172:15;10158:29;;10128:66;10199:13;;;;10239:1;10223:17;;;10222:23;;:28;;10218:198;;10389:20;;;7386:13:36;7429:16;;;:7;:16;;;;;;10372:37:35;;;;10218:198;-1:-1:-1;10421:25:35;;;;10462:19;10484:22;:15;;;10500:2;10462:19;10484:15;:22::i;:::-;10462:44;;10512:48;;;;;;;;;;;;;;;;;;10547:12;10512:18;:48::i;:::-;10589:55;10601:12;10615:5;10622:1;10625:8;10635;10589:11;:55::i;:::-;10566:78;;-1:-1:-1;10566:78:35;-1:-1:-1;10670:1:35;10654:17;;;;10650:66;;;10694:11;10708:1;10694:15;10680:29;;10650:66;10721:13;;;;10766:1;10761;10745:17;;;10744:23;;:28;;10740:87;;10798:22;;;7386:13:36;7429:16;;;:7;:16;;;;;;10781:39:35;;:14;;;:39;10740:87;-1:-1:-1;10832:25:35;;;;10874:19;10896:21;:15;;;10874:19;10915:1;10896:15;:21::i;:::-;10874:43;;10923:48;;;;;;;;;;;;;;;;;;10958:12;10923:18;:48::i;:::-;11000:55;11012:12;11026:5;11033:1;11036:8;11046;11000:11;:55::i;:::-;10977:78;;-1:-1:-1;10977:78:35;-1:-1:-1;11081:1:35;11065:17;;;;11061:66;;;11105:11;11119:1;11105:15;11091:29;;11061:66;11132:13;;;;11177:1;11172;11156:17;;;11155:23;;:28;;11151:87;;11209:22;;;7386:13:36;7429:16;;;:7;:16;;;;;;11192:39:35;;:14;;;:39;11151:87;-1:-1:-1;11243:25:35;;;;11284:20;11307:21;:15;;;11323:1;11284:20;11307:15;:21::i;:::-;11284:44;;11334:50;;;;;;;;;;;;;;;;;;11370:13;11334:18;:50::i;:::-;11413:56;11425:13;11440:5;11447:1;11450:8;11460;11413:11;:56::i;:::-;11390:79;;-1:-1:-1;11390:79:35;-1:-1:-1;11495:1:35;11479:17;;;;11475:66;;;11519:11;11533:1;11519:15;11505:29;;11475:66;11546:13;;;;11591:1;11586;11570:17;;;11569:23;;:28;;11565:88;;11623:23;;;7386:13:36;7429:16;;;:7;:16;;;;;;11606:40:35;;:14;;;:40;11565:88;11670:13;11658:25;;;;11278:411;9848:1845;;9624:2072;;;;;;;;;;:::o;767:784:38:-;979:9;974:250;998:18;:31;;;994:1;:35;974:250;;;1083:11;:14;;;1045:52;;:18;:28;;;1074:1;1045:31;;;;;;;;:::i;:::-;;;;;;;:34;;;:52;;;1041:179;;1184:18;;;;1142:28;;:31;;1171:1;;1142:31;;;;;;:::i;:::-;;;;;;;:38;;:60;;;;;;;:::i;:::-;;;-1:-1:-1;;;;767:784:38:o;1041:179::-;1031:3;;;;:::i;:::-;;;;974:250;;;-1:-1:-1;1352:14:38;;1285:28;;1314:31;;;;1285:61;;;;;;;;:::i;:::-;;;;;;;:64;;:81;;;;;;;;;;;1441:11;:18;;;1370;:28;;;1399:18;:31;;;1370:61;;;;;;;;:::i;:::-;;;;;;;:68;;:89;;;;;1514:18;:31;;:33;;;;;;;;:::i;:::-;;;-1:-1:-1;;;767:784:38:o;4519:2834:35:-;4669:20;4691:19;4712:22;4740:24;4767:37;4783:4;:13;;;4798:5;4767:15;:37::i;:::-;4740:64;;4809:173;4828:1;4874:23;4891:5;4874:23;;:16;:23::i;:::-;4834:64;;;;;;;;:::i;:::-;;;;;;;;;;;;;;4903:13;;4954:22;;;4903:13;4954:22;;;:7;4834:64;4954:22;;;;;;4921:12;;4809:14;:173::i;:::-;5052:25;;;;5085:17;;;;:22;;;:59;;;;-1:-1:-1;5111:28:35;;:33;;;;5085:59;5081:315;;;5288:33;5299:12;:21;;;5288:10;:33::i;:::-;5283:1;5258:12;:21;;;:26;;;;5257:64;;;;:::i;:::-;5390:1;5359:32;;5242:79;-1:-1:-1;5081:315:35;5486:10;5472:4;:10;;;:24;;;;;;;;:::i;:::-;;5468:663;;5528:8;5507:29;;:12;:17;;;:29;;;;:66;;;-1:-1:-1;5549:13:35;;5540:23;;5549:13;7429:16:36;;;:7;:16;;;;;;5540:33:35;;;;;;;;5507:66;5503:138;;;5609:1;5612;5615:19;5601:34;;;;;;;;;;5503:138;5646:103;5663:18;5683:65;;;;;;;;5710:6;5683:65;;;;;;5727:19;5683:65;;;5646:16;:103::i;:::-;5468:663;;;5886:5;5848:43;;:12;:34;;;:43;;;5844:287;;5902:17;;;;:22;;;5898:229;;5945:10;5932;;;:23;5898:229;;;6095:1;6098;6101:19;6087:34;;;;;;;;;;5898:229;6136:13;6151:17;6172:96;6187:18;6210:4;6219:5;6229:12;:18;;;6252:12;6172:10;:96::i;:::-;6135:133;;;;6307:6;6278:68;;6292:4;:13;;;6278:68;;;6315:12;:18;;;6335:4;:10;;;6278:68;;;;;;;:::i;:::-;;;;;;;;6371:4;:10;;;6350:12;:18;;:31;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;6413:1:35;6385:25;;;:29;;;6418:42;;;:34;;;:42;6517:12;:18;;;:32;;;;;;;;:::i;:::-;;6513:634;;6576:1;6556:17;;;:21;;;6582:32;;;6619:18;;;:22;;;6646:21;;;:25;;;6684:13;;6676:22;;;;:7;:22;;;;;:26;6724:19;;-1:-1:-1;6513:634:35;;;6799:35;;;:21;;;:35;6840:29;;;;:18;;;:29;6894:1;6874:17;;;:21;6900:36;;;;;6774:19;;-1:-1:-1;6967:10:35;6945:12;:18;;;:32;;;;;;;;:::i;:::-;;6941:202;;6993:13;;6985:22;;;;;;:7;:22;;;;;7026:42;6985:85;;6941:202;;;7096:13;;7088:22;;;;;;:7;:22;;;;;7113:24;;;7088:49;;6941:202;7158:13;;7151:21;;:6;:21;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7175:12;;7151:21;;:36;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;7151:36:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7192:157;-1:-1:-1;7241:23:35;;;;:16;:23::i;:::-;7217:48;;;;;;;;:::i;:::-;;;;;;;;;;;;;;7270:13;;7321:22;;;7270:13;7321:22;;;:7;7217:48;7321:22;;;;;;7288:12;;7192:14;:157::i;:::-;4736:2617;;;;4519:2834;;;;;;;;;:::o;2272:731:36:-;2424:20;2447:7;;;;:71;;2462:2;:7;;2468:1;2462:7;:56;;2481:2;:7;;2487:1;2481:7;:37;;;;;;;;;;;;;;;;;;;2447:71;;2481:37;;;;;;;;;;;;;;;;;;2447:71;;2462:56;;;;;;;;;;;;;;;;;;2447:71;;;;;;;;;;;;;;;;2424:94;;2554:34;;;;;;;;;;;;;;;;;;2574:6;2582:5;2554:11;:34::i;:::-;2592:86;;;;;;;;;;;;;;;;;;2671:6;2592:11;:86::i;:::-;2687:9;2682:228;2706:18;:31;;;2702:1;:35;2682:228;;;2749:156;;;;;;;;;;;;;;;;;;2792:6;2804:18;:28;;;2833:1;2804:31;;;;;;;;:::i;:::-;;;;;;;:34;;;2844:56;2861:18;:28;;;2890:1;2861:31;;;;;;;;:::i;:::-;;;;;;;:38;;;2844:16;:56::i;:::-;2749:11;:156::i;:::-;2739:3;;;;:::i;:::-;;;;2682:228;;;;2913:86;;;;;;;;;;;;;;;;;;2992:6;2913:11;:86::i;5067:1498::-;5201:13;5250:10;5282:1;5268:15;;;;;;;:27;;;5294:1;5287:4;:8;;;5268:27;5264:1298;;;5302:18;5323;5331:10;5323:5;:18;:::i;:::-;5302:39;;;-1:-1:-1;5350:14:36;;5346:1212;;5372:19;5394:5;:10;;5403:1;5394:10;:23;;5415:2;5394:23;;;5407:5;5394:23;5372:45;;5444:1;5427:14;:18;;;:35;;;;-1:-1:-1;5449:13:36;;;;5427:35;5423:73;;;-1:-1:-1;5488:1:36;5423:73;5522:1;5505:14;:18;;;5501:992;;;5543:8;5536:15;;:4;:15;;;5532:456;;;5561:14;5634;5623:1;5634:14;5580:15;5591:4;5580:8;:15;:::i;:::-;5579:41;;;;:::i;:::-;:45;;;;:::i;:::-;5578:71;;;;:::i;:::-;5561:88;;5674:8;5661:21;;:10;:21;5657:66;;;5706:8;5693:21;;;;5657:66;5739:41;5765:14;5745:10;5739:41;:::i;:::-;5731:49;;;;:::i;:::-;;;5799:8;5792:15;;:4;:15;;;5788:54;;;5825:8;5818:15;;5788:54;5859:4;;-1:-1:-1;5883:31:36;5903:10;5883;:31;:::i;:::-;5871:43;;5553:369;5501:992;;5532:456;5946:4;5936:14;;5970:10;5958:22;;5501:992;;;6021:1;6004:14;:18;;;6000:493;;;6031:25;6103:15;6104:14;6103:15;:::i;:::-;6092:1;6073:15;6074:14;6073:15;:::i;:::-;6060:29;;:4;:29;:::i;:::-;:33;;;;:::i;:::-;6059:60;;;;:::i;:::-;6031:88;;6143:19;6130:32;;:10;:32;6126:86;;;6185:19;6172:32;;;;6126:86;6218:14;6261:15;6262:14;6261:15;:::i;:::-;6235:42;;6241:10;6235:42;:::i;:::-;6218:59;;6299:4;6288:15;;:8;:15;;;6284:95;;;6323:1;6313:11;;6284:95;;;6356:15;6363:8;6356:4;:15;:::i;:::-;6346:25;;6284:95;6397:31;6417:10;6397;:31;:::i;:::-;6385:43;;6024:411;;6000:493;;;6458:4;6448:14;;6481:5;6469:17;;6000:493;5366:1132;5346:1212;;;6520:4;6510:14;;6542:10;6530:22;;5346:1212;5297:1265;5264:1298;5067:1498;;;;;;;;:::o;10139:916:1:-;10192:7;;10276:8;10267:17;;10263:103;;10313:8;10304:17;;;-1:-1:-1;10349:2:1;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:1;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:1;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:1;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:1;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:1;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;10950:66;11042:6;10139:916;-1:-1:-1;;10139:916:1:o;12354:179:3:-;12445:81;12514:2;12518;12522;12461:64;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;12445:15;:81::i;7169:150::-;7242:70;7304:2;7308;7258:53;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;7242:15;:70::i;1243:173:0:-;1298:13;1362:1;1354:5;:9;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1376:31;1385:21;1400:5;1385:14;:21::i;:::-;1376:8;:31::i;:::-;1337:71;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1323:86;;1243:173;;;:::o;36163:208:3:-;36272:92;36348:2;36352;36356;36360;36288:75;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;36272:15;:92::i;12174:174::-;12259:82;12329:2;12333;12337;12275:65;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;12259:15;:82::i;12713:174::-;12798:82;12868:2;12872;12876;12814:65;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;12798:15;:82::i;860:186:36:-;933:7;;192:10:47;173:29;;;;236:2;224:14;;;;932:31:36;;;;967:75;;;;;;;;;;;;;;;;;;994:5;1001:19;1018:1;1001:19;;:16;:19::i;247:250:47:-;321:18;349:40;388:1;374:10;355:29;;349:40;:::i;:::-;345:44;-1:-1:-1;397:33:47;429:1;410:14;422:2;410:14;;;;397:33;:::i;:::-;393:37;-1:-1:-1;448:45:47;476:17;;;449:23;470:2;449:23;;;;448:45;:::i;:::-;434:59;247:250;-1:-1:-1;;;;247:250:47:o;11741:963:35:-;11932:16;;;11878:18;11932:16;;;;;;;;;;;11913:35;;;;;;;;;;;;;;;;;;;;;;;;;;11878:18;;;;11913:35;;11932:16;11913:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11973:20;;12011:10;;;;11913:35;;-1:-1:-1;11973:20:35;12011:10;12029:5;:19;;;;;;;;:::i;:::-;;12025:89;;12080:8;12071:17;;;;;;;;:::i;:::-;:5;:17;;;;;;;;:::i;:::-;;:38;;12106:2;12071:38;;;12096:1;12071:38;12055:54;;12025:89;12135:1;12121:10;:15;;;;:38;;;;-1:-1:-1;12149:10:35;12140:5;:19;;;;;;;;:::i;:::-;;;12121:38;12117:584;;;12239:1;12227:4;:9;;;:13;;;:35;;;;;12257:5;12244:18;;:10;:18;;;12227:35;12223:474;;;12329:13;12344:16;12364:103;12386:10;12403:4;:13;;;12423:4;:10;;;12440:4;:9;;;12456:5;12364:15;:103::i;:::-;12328:139;;;;12479:95;12503:8;12513:4;12519:7;12528:9;12539:14;12555:8;12565;12479:23;:95::i;:::-;12473:101;;12264:316;;12223:474;;;12598:93;12622:8;12632:4;12638;:9;;;12649:5;12656:14;12672:8;12682;12598:23;:93::i;:::-;12592:99;;12223:474;11909:795;;;11741:963;;;;;;;;:::o;7356:883::-;7523:13;7538:17;7566:21;7592:25;7622:12;7639:29;7675:72;7693:4;:13;;;7708:5;7715;7722:4;:10;;;7734:12;7675:17;:72::i;:::-;7561:186;;;;;;;;7765:1;7756:6;:10;;;7752:175;;;7773:149;7795:18;7819:98;;;;;;;;7846:23;7855:4;:13;;;7846:23;;7386:13:36;7429:16;;;:7;:16;;;;;;;7320:131;7846:23:35;7819:98;;;;;;7913:2;7881:28;7890:19;7881:28;;;;:::i;:::-;7880:35;;;;:::i;7773:149::-;7935:7;7930:238;7952:1;7948;:5;;;7930:238;;;7995:1;7969:11;:14;;;;;;;;;;:::i;:::-;;;;;:28;;;7965:199;;8005:153;8028:18;8053:99;;;;;;;;8080:11;8092:1;8080:14;;;;;;;;;:::i;:::-;;;;;8053:99;;;;;;8129:12;8144:4;8129:19;8106:43;;:19;:43;;;;:::i;8005:153::-;7955:3;;;;:::i;:::-;;;;7930:238;;;-1:-1:-1;8182:16:35;;8216:19;;-1:-1:-1;7356:883:35;;-1:-1:-1;;;;;;;;7356:883:35:o;37784:203:3:-;37887:93;37964:2;37968;37972;37976;37903:76;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;851:129;922:51;965:7;934:29;922:51::i;:::-;851:129;:::o;1047:213:2:-;1093:7;1232:1;1227;:6;;:15;;1241:1;1240:2;;1227:15;;;-1:-1:-1;1236:1:2;1047:213::o;12707:2277:35:-;13212:9;13243:1;13231:4;:9;;;:13;;;:29;;;;-1:-1:-1;13248:12:35;;;;13231:29;13227:177;;;13374:25;13385:4;:13;;;13374:10;:25::i;:::-;13369:1;13352:4;:13;;;:18;;;;13351:48;;;;:::i;:::-;13331:68;;:17;;;:68;13227:177;13408:172;13427:1;13481:32;13498:14;13481:32;;:16;:32::i;:::-;13433:81;;;;;;;;:::i;:::-;;;;;;;;;;;;;;13557:17;;;;;;;:7;13433:81;13557:17;;;13519:8;;13532:4;;13408:14;:172::i;:::-;13641:19;13646:14;13641:1;:19;:::i;:::-;13617;13622:14;13617:1;:19;:::i;:::-;13590:17;;;;13611:1;13590:22;13589:48;13590:22;13589:48;:71;13585:267;;13679:17;;;;13673:31;;13699:4;13679:24;13673:2;:31;:::i;:::-;13822:17;;;;13667:37;;-1:-1:-1;13842:4:35;13822:24;13812:1;13777:28;13782:23;;;13777:1;:28;:::i;:::-;13775:31;13769:1;13748:4;:17;;;:22;;;;13740:31;;:67;13734:79;;;;13733:114;;;;:::i;:::-;13709:138;;:17;;;:138;13585:267;13872:8;13860:20;;;;;;;;:::i;:::-;:8;:20;;;;;;;;:::i;:::-;;13856:858;;13903:10;13891:8;:22;;;;;;;;:::i;:::-;;13887:823;;13939:8;13925:22;;;;;;;;:::i;:::-;:4;:10;;;:22;;;;;;;;:::i;:::-;;13921:166;;13970:1;13956:4;:10;;:15;;;;;;;:::i;:::-;;;;;-1:-1:-1;13887:823:35;;13921:166;14005:1;13991:4;:10;;:15;;;;;;;:::i;:::-;;;;;-1:-1:-1;14029:13:35;;;;;14052:1;:19;;;;;;;;14051:28;;14029:51;;;14013:67;;;13887:823;;;14116:8;14102:22;;;;;;;;:::i;:::-;:4;:10;;;:22;;;;;;;;:::i;:::-;;14098:612;;14201:13;;;;;14223:1;:19;;;;;;;;14201:42;;;14185:58;;;14249:10;;;:15;;14263:1;;14249:10;:15;;14263:1;;14249:15;:::i;14098:612::-;14294:8;14280:22;;;;;;;;:::i;:::-;:4;:10;;;:22;;;;;;;;:::i;:::-;;14276:434;;14373:10;14361:8;:22;;;;;;;;:::i;:::-;;:42;;14401:1;14346:4;:10;;:58;;;;;;;:::i;14276:434::-;14505:10;14493:8;:22;;;;;;;;:::i;:::-;;14489:221;;14639:1;14625:4;:10;;:15;;;;;;;:::i;:::-;;;;;-1:-1:-1;14662:13:35;;;;;14684:1;:19;;;;;;;;14662:42;;;14646:58;;;14489:221;14718:28;;;;;14750:19;;;;:9;;;:19;14774:178;;14718:20;;14853:32;;;;:16;:32::i;:::-;14799:87;;;;;;;;:::i;14774:178::-;14957:16;;;:6;:16;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14976:4;;14957:16;;:23;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;14957:23:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12707:2277;;-1:-1:-1;;;;;;;12707:2277:35:o;180:463:3:-;265:22;131:42;265:40;;594:1;571;541:7;535:14;510:2;501:7;497:16;461:14;434:5;402:211;381:246;367:270;180:463;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:180:48:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:48;;14:180;-1:-1:-1;14:180:48:o;199:220::-;267:20;;327:66;316:78;;306:89;;296:117;;409:1;406;399:12;424:155;483:5;528:3;519:6;514:3;510:16;506:26;503:46;;;545:1;542;535:12;503:46;-1:-1:-1;567:6:48;424:155;-1:-1:-1;424:155:48:o;584:162::-;678:42;671:5;667:54;660:5;657:65;647:93;;736:1;733;726:12;751:532;872:6;880;888;896;949:3;937:9;928:7;924:23;920:33;917:53;;;966:1;963;956:12;917:53;989:29;1008:9;989:29;:::i;:::-;979:39;;1065:2;1054:9;1050:18;1037:32;1027:42;;1088:62;1142:7;1137:2;1126:9;1122:18;1088:62;:::i;:::-;1078:72;;1200:3;1189:9;1185:19;1172:33;1214:39;1247:5;1214:39;:::i;:::-;751:532;;;;-1:-1:-1;751:532:48;;-1:-1:-1;;751:532:48:o;1288:171::-;1355:20;;1415:18;1404:30;;1394:41;;1384:69;;1449:1;1446;1439:12;1464:184;1522:6;1575:2;1563:9;1554:7;1550:23;1546:32;1543:52;;;1591:1;1588;1581:12;1543:52;1614:28;1632:9;1614:28;:::i;:::-;1604:38;1464:184;-1:-1:-1;;;1464:184:48:o;1653:380::-;1729:8;1739:6;1793:3;1786:4;1778:6;1774:17;1770:27;1760:55;;1811:1;1808;1801:12;1760:55;-1:-1:-1;1834:20:48;;1877:18;1866:30;;1863:50;;;1909:1;1906;1899:12;1863:50;1946:4;1938:6;1934:17;1922:29;;2006:3;1999:4;1989:6;1986:1;1982:14;1974:6;1970:27;1966:38;1963:47;1960:67;;;2023:1;2020;2013:12;1960:67;1653:380;;;;;:::o;2038:761::-;2176:6;2184;2192;2200;2208;2261:3;2249:9;2240:7;2236:23;2232:33;2229:53;;;2278:1;2275;2268:12;2229:53;2317:9;2304:23;2336:39;2369:5;2336:39;:::i;:::-;2394:5;-1:-1:-1;2446:2:48;2431:18;;2418:32;;-1:-1:-1;2501:2:48;2486:18;;2473:32;2528:18;2517:30;;2514:50;;;2560:1;2557;2550:12;2514:50;2599:83;2674:7;2665:6;2654:9;2650:22;2599:83;:::i;:::-;2701:8;;-1:-1:-1;2573:109:48;-1:-1:-1;2755:38:48;;-1:-1:-1;2789:2:48;2774:18;;2755:38;:::i;:::-;2745:48;;2038:761;;;;;;;;:::o;2804:614::-;2889:6;2897;2950:2;2938:9;2929:7;2925:23;2921:32;2918:52;;;2966:1;2963;2956:12;2918:52;3006:9;2993:23;3035:18;3076:2;3068:6;3065:14;3062:34;;;3092:1;3089;3082:12;3062:34;3130:6;3119:9;3115:22;3105:32;;3175:7;3168:4;3164:2;3160:13;3156:27;3146:55;;3197:1;3194;3187:12;3146:55;3237:2;3224:16;3263:2;3255:6;3252:14;3249:34;;;3279:1;3276;3269:12;3249:34;3332:7;3327:2;3317:6;3314:1;3310:14;3306:2;3302:23;3298:32;3295:45;3292:65;;;3353:1;3350;3343:12;3292:65;3384:2;3376:11;;;;;3406:6;;-1:-1:-1;2804:614:48;;-1:-1:-1;;;;2804:614:48:o;3423:337::-;3499:6;3507;3560:2;3548:9;3539:7;3535:23;3531:32;3528:52;;;3576:1;3573;3566:12;3528:52;3599:29;3618:9;3599:29;:::i;:::-;3589:39;;3678:2;3667:9;3663:18;3650:32;3691:39;3724:5;3691:39;:::i;:::-;3749:5;3739:15;;;3423:337;;;;;:::o;3765:118::-;3851:5;3844:13;3837:21;3830:5;3827:32;3817:60;;3873:1;3870;3863:12;3888:1055;4049:6;4057;4065;4073;4081;4089;4097;4150:3;4138:9;4129:7;4125:23;4121:33;4118:53;;;4167:1;4164;4157:12;4118:53;4206:9;4193:23;4225:39;4258:5;4225:39;:::i;:::-;4283:5;-1:-1:-1;4335:2:48;4320:18;;4307:32;;-1:-1:-1;4390:2:48;4375:18;;4362:32;4417:18;4406:30;;4403:50;;;4449:1;4446;4439:12;4403:50;4488:83;4563:7;4554:6;4543:9;4539:22;4488:83;:::i;:::-;4590:8;;-1:-1:-1;4462:109:48;-1:-1:-1;4644:38:48;;-1:-1:-1;4678:2:48;4663:18;;4644:38;:::i;:::-;4634:48;;4734:3;4723:9;4719:19;4706:33;4748:30;4770:7;4748:30;:::i;:::-;4797:7;-1:-1:-1;4856:3:48;4841:19;;4828:33;4870:41;4828:33;4870:41;:::i;:::-;4930:7;4920:17;;;3888:1055;;;;;;;;;;:::o;4948:306::-;5043:6;5051;5104:3;5092:9;5083:7;5079:23;5075:33;5072:53;;;5121:1;5118;5111:12;5072:53;5157:9;5144:23;5134:33;;5186:62;5240:7;5235:2;5224:9;5220:18;5186:62;:::i;:::-;5176:72;;4948:306;;;;;:::o;5512:184::-;5564:77;5561:1;5554:88;5661:4;5658:1;5651:15;5685:4;5682:1;5675:15;5701:128;5768:9;;;5789:11;;;5786:37;;;5803:18;;:::i;6136:245::-;6203:6;6256:2;6244:9;6235:7;6231:23;6227:32;6224:52;;;6272:1;6269;6262:12;6224:52;6304:9;6298:16;6323:28;6345:5;6323:28;:::i;6386:125::-;6451:9;;;6472:10;;;6469:36;;;6485:18;;:::i;6516:269::-;6573:6;6626:2;6614:9;6605:7;6601:23;6597:32;6594:52;;;6642:1;6639;6632:12;6594:52;6681:9;6668:23;6731:4;6724:5;6720:16;6713:5;6710:27;6700:55;;6751:1;6748;6741:12;8527:184;8579:77;8576:1;8569:88;8676:4;8673:1;8666:15;8700:4;8697:1;8690:15;8716:146;8787:20;;8836:1;8826:12;;8816:40;;8852:1;8849;8842:12;8867:670;8949:6;9002:2;8990:9;8981:7;8977:23;8973:32;8970:52;;;9018:1;9015;9008:12;8970:52;9051:2;9045:9;9093:2;9085:6;9081:15;9162:6;9150:10;9147:22;9126:18;9114:10;9111:34;9108:62;9105:242;;;9203:77;9200:1;9193:88;9304:4;9301:1;9294:15;9332:4;9329:1;9322:15;9105:242;9363:2;9356:22;9402:28;9420:9;9402:28;:::i;:::-;9394:6;9387:44;9464:41;9501:2;9490:9;9486:18;9464:41;:::i;:::-;9459:2;9447:15;;9440:66;9451:6;8867:670;-1:-1:-1;;;8867:670:48:o;9542:168::-;9615:9;;;9646;;9663:15;;;9657:22;;9643:37;9633:71;;9684:18;;:::i;9715:184::-;9767:77;9764:1;9757:88;9864:4;9861:1;9854:15;9888:4;9885:1;9878:15;9904:195;9943:3;9974:66;9967:5;9964:77;9961:103;;10044:18;;:::i;:::-;-1:-1:-1;10091:1:48;10080:13;;9904:195::o;10104:184::-;10156:77;10153:1;10146:88;10253:4;10250:1;10243:15;10277:4;10274:1;10267:15;10293:290;10370:1;10363:5;10360:12;10350:200;;10406:77;10403:1;10396:88;10507:4;10504:1;10497:15;10535:4;10532:1;10525:15;10350:200;10559:18;;10293:290::o;10588:1068::-;10892:2;10904:21;;;10877:18;;10960:22;;;10844:4;11040:6;11013:3;10998:19;;10844:4;11074:393;11088:6;11085:1;11082:13;11074:393;;;11180:18;11153:25;11171:6;11153:25;:::i;:::-;11149:50;11144:3;11137:63;11223:4;11260:38;11294:2;11286:6;11282:15;11260:38;:::i;:::-;11311:49;11356:2;11351:3;11347:12;11333;11311:49;:::i;:::-;-1:-1:-1;;11383:4:48;11442:15;;;;11407:12;;;;;11110:1;11103:9;11074:393;;;-1:-1:-1;11537:66:48;11525:79;;;;11518:4;11503:20;;11496:109;-1:-1:-1;;11636:4:48;11621:20;11614:36;11484:3;10588:1068;-1:-1:-1;;10588:1068:48:o;11661:184::-;11713:77;11710:1;11703:88;11810:4;11807:1;11800:15;11834:4;11831:1;11824:15;11850:120;11890:1;11916;11906:35;;11921:18;;:::i;:::-;-1:-1:-1;11955:9:48;;11850:120::o;11975:173::-;12043:8;12084:10;;;12072;;;12068:27;;12107:12;;;12104:38;;;12122:18;;:::i;:::-;12104:38;11975:173;;;;:::o;12408:250::-;12493:1;12503:113;12517:6;12514:1;12511:13;12503:113;;;12593:11;;;12587:18;12574:11;;;12567:39;12539:2;12532:10;12503:113;;;-1:-1:-1;;12650:1:48;12632:16;;12625:27;12408:250::o;12663:437::-;12915:17;12910:3;12903:30;12885:3;12962:6;12956:13;12978:75;13046:6;13041:2;13036:3;13032:12;13025:4;13017:6;13013:17;12978:75;:::i;:::-;13073:16;;;;13091:2;13069:25;;12663:437;-1:-1:-1;;12663:437:48:o;13105:148::-;13193:4;13172:12;;;13186;;;13168:31;;13211:13;;13208:39;;;13227:18;;:::i;13258:175::-;13295:3;13339:4;13332:5;13328:16;13368:4;13359:7;13356:17;13353:43;;13376:18;;:::i;:::-;13425:1;13412:15;;13258:175;-1:-1:-1;;13258:175:48:o;13438:611::-;13495:3;13533:5;13527:12;13560:6;13555:3;13548:19;13586:4;13615:2;13610:3;13606:12;13599:19;;13652:2;13645:5;13641:14;13673:1;13683:341;13697:6;13694:1;13691:13;13683:341;;;13756:13;;13798:9;;13809:18;13794:34;13782:47;;13868:11;;13862:18;13893:49;13929:12;;;13862:18;13893:49;:::i;:::-;-1:-1:-1;13971:4:48;13962:14;;;;;13999:15;;;;13719:1;13712:9;13683:341;;;-1:-1:-1;14040:3:48;;13438:611;-1:-1:-1;;;;;13438:611:48:o;14054:526::-;14335:6;14324:9;14317:25;14378:2;14373;14362:9;14358:18;14351:30;14298:4;14398:60;14454:2;14443:9;14439:18;14431:6;14398:60;:::i;:::-;14390:68;;14506:66;14498:6;14494:79;14489:2;14478:9;14474:18;14467:107;14054:526;;;;;;:::o;14585:382::-;14838:6;14827:9;14820:25;14881:2;14876;14865:9;14861:18;14854:30;14801:4;14901:60;14957:2;14946:9;14942:18;14934:6;14901:60;:::i;15383:184::-;15453:6;15506:2;15494:9;15485:7;15481:23;15477:32;15474:52;;;15522:1;15519;15512:12;15474:52;-1:-1:-1;15545:16:48;;15383:184;-1:-1:-1;15383:184:48:o;15572:151::-;15662:4;15655:12;;;15641;;;15637:31;;15680:14;;15677:40;;;15697:18;;:::i;15728:444::-;15980:24;15975:3;15968:37;15950:3;16034:6;16028:13;16050:75;16118:6;16113:2;16108:3;16104:12;16097:4;16089:6;16085:17;16050:75;:::i;:::-;16145:16;;;;16163:2;16141:25;;15728:444;-1:-1:-1;;15728:444:48:o;16177:296::-;16357:2;16342:18;;16369:40;16346:9;16391:6;16369:40;:::i;:::-;16418:49;16463:2;16452:9;16448:18;16440:6;16418:49;:::i;16478:425::-;16729:8;16724:3;16717:21;16699:3;16767:6;16761:13;16783:74;16850:6;16846:1;16841:3;16837:11;16830:4;16822:6;16818:17;16783:74;:::i;:::-;16877:16;;;;16895:1;16873:24;;16478:425;-1:-1:-1;;16478:425:48:o;16908:165::-;16946:1;16980:4;16977:1;16973:12;17004:3;16994:37;;17011:18;;:::i;:::-;17063:3;17056:4;17053:1;17049:12;17045:22;17040:27;;;16908:165;;;;:::o;17078:225::-;17182:4;17161:12;;;17175;;;17157:31;17208:22;;;;17249:24;;;17239:58;;17277:18;;:::i;17308:170::-;17375:8;17403:10;;;17415;;;17399:27;;17438:11;;;17435:37;;;17452:18;;:::i;17483:237::-;17516:3;17563:5;17560:1;17549:20;17593:66;17584:7;17581:79;17578:105;;17663:18;;:::i;:::-;17703:1;17699:15;;17483:237;-1:-1:-1;;17483:237:48:o;17725:330::-;17767:3;17805:5;17799:12;17832:6;17827:3;17820:19;17848:76;17917:6;17910:4;17905:3;17901:14;17894:4;17887:5;17883:16;17848:76;:::i;:::-;17969:2;17957:15;17974:66;17953:88;17944:98;;;;18044:4;17940:109;;17725:330;-1:-1:-1;;17725:330:48:o;18060:546::-;18305:2;18294:9;18287:21;18268:4;18331:45;18372:2;18361:9;18357:18;18349:6;18331:45;:::i;:::-;18424:9;18416:6;18412:22;18407:2;18396:9;18392:18;18385:50;18458:33;18484:6;18476;18458:33;:::i;:::-;18444:47;;18539:9;18531:6;18527:22;18522:2;18511:9;18507:18;18500:50;18567:33;18593:6;18585;18567:33;:::i;:::-;18559:41;18060:546;-1:-1:-1;;;;;;18060:546:48:o;18611:383::-;18808:2;18797:9;18790:21;18771:4;18834:45;18875:2;18864:9;18860:18;18852:6;18834:45;:::i;:::-;18927:9;18919:6;18915:22;18910:2;18899:9;18895:18;18888:50;18955:33;18981:6;18973;18955:33;:::i;:::-;18947:41;18611:383;-1:-1:-1;;;;;18611:383:48:o;18999:496::-;19178:3;19216:6;19210:13;19232:66;19291:6;19286:3;19279:4;19271:6;19267:17;19232:66;:::i;:::-;19361:13;;19320:16;;;;19383:70;19361:13;19320:16;19430:4;19418:17;;19383:70;:::i;:::-;19469:20;;18999:496;-1:-1:-1;;;;18999:496:48:o;19500:711::-;19793:3;19782:9;19775:22;19756:4;19820:46;19861:3;19850:9;19846:19;19838:6;19820:46;:::i;:::-;19914:9;19906:6;19902:22;19897:2;19886:9;19882:18;19875:50;19948:33;19974:6;19966;19948:33;:::i;:::-;19934:47;;20029:9;20021:6;20017:22;20012:2;20001:9;19997:18;19990:50;20063:33;20089:6;20081;20063:33;:::i;:::-;20049:47;;20144:9;20136:6;20132:22;20127:2;20116:9;20112:18;20105:50;20172:33;20198:6;20190;20172:33;:::i;:::-;20164:41;19500:711;-1:-1:-1;;;;;;;19500:711:48:o;20216:454::-;20441:2;20430:9;20423:21;20404:4;20467:45;20508:2;20497:9;20493:18;20485:6;20467:45;:::i;:::-;20560:9;20552:6;20548:22;20543:2;20532:9;20528:18;20521:50;20588:33;20614:6;20606;20588:33;:::i;:::-;20580:41;;;20657:6;20652:2;20641:9;20637:18;20630:34;20216:454;;;;;;:::o;20675:503::-;20900:2;20889:9;20882:21;20863:4;20926:45;20967:2;20956:9;20952:18;20944:6;20926:45;:::i;:::-;21019:9;21011:6;21007:22;21002:2;20991:9;20987:18;20980:50;21047:33;21073:6;21065;21047:33;:::i;:::-;21039:41;;;21128:42;21120:6;21116:55;21111:2;21100:9;21096:18;21089:83;20675:503;;;;;;:::o;21183:245::-;21279:1;21250:16;;;21268;;;;21246:39;21309:10;21300:20;;21331:66;21322:76;;21297:102;21294:128;;;21402:18;;:::i;21433:180::-;21500:18;21538:10;;;21550;;;21534:27;;21573:11;;;21570:37;;;21587:18;;:::i;21618:668::-;21891:3;21880:9;21873:22;21854:4;21918:46;21959:3;21948:9;21944:19;21936:6;21918:46;:::i;:::-;22012:9;22004:6;22000:22;21995:2;21984:9;21980:18;21973:50;22046:33;22072:6;22064;22046:33;:::i;:::-;22032:47;;22127:42;22119:6;22115:55;22110:2;22099:9;22095:18;22088:83;22219:9;22211:6;22207:22;22202:2;22191:9;22187:18;22180:50;22247:33;22273:6;22265;22247:33;:::i;22291:452::-;22543:32;22538:3;22531:45;22513:3;22605:6;22599:13;22621:75;22689:6;22684:2;22679:3;22675:12;22668:4;22660:6;22656:17;22621:75;:::i;:::-;22716:16;;;;22734:2;22712:25;;22291:452;-1:-1:-1;;22291:452:48:o;22748:482::-;22837:1;22880:5;22837:1;22894:330;22915:7;22905:8;22902:21;22894:330;;;23034:4;22966:66;22962:77;22956:4;22953:87;22950:113;;;23043:18;;:::i;:::-;23093:7;23083:8;23079:22;23076:55;;;23113:16;;;;23076:55;23192:22;;;;23152:15;;;;22894:330;;;22898:3;22748:482;;;;;:::o;23235:866::-;23284:5;23314:8;23304:80;;-1:-1:-1;23355:1:48;23369:5;;23304:80;23403:4;23393:76;;-1:-1:-1;23440:1:48;23454:5;;23393:76;23485:4;23503:1;23498:59;;;;23571:1;23566:130;;;;23478:218;;23498:59;23528:1;23519:10;;23542:5;;;23566:130;23603:3;23593:8;23590:17;23587:43;;;23610:18;;:::i;:::-;-1:-1:-1;;23666:1:48;23652:16;;23681:5;;23478:218;;23780:2;23770:8;23767:16;23761:3;23755:4;23752:13;23748:36;23742:2;23732:8;23729:16;23724:2;23718:4;23715:12;23711:35;23708:77;23705:159;;;-1:-1:-1;23817:19:48;;;23849:5;;23705:159;23896:34;23921:8;23915:4;23896:34;:::i;:::-;24026:6;23958:66;23954:79;23945:7;23942:92;23939:118;;;24037:18;;:::i;:::-;24075:20;;23235:866;-1:-1:-1;;;23235:866:48:o;24106:140::-;24164:5;24193:47;24234:4;24224:8;24220:19;24214:4;24193:47;:::i;24251:131::-;24311:5;24340:36;24367:8;24361:4;24340:36;:::i;24387:242::-;24424:4;24473:16;;;24455;;;;24451:39;24515:66;24505:77;;24594:4;24584:15;;24502:98;24499:124;;;24603:18;;:::i;24634:238::-;24671:3;24700:16;;;24718;;;;24696:39;24759:4;24750:14;;24775:66;24766:76;;24747:96;24744:122;;;24846:18;;:::i;24877:499::-;25139:34;25134:3;25127:47;25204:6;25199:2;25194:3;25190:12;25183:28;25109:3;25240:6;25234:13;25256:73;25322:6;25317:2;25312:3;25308:12;25303:2;25295:6;25291:15;25256:73;:::i;:::-;25349:16;;;;25367:2;25345:25;;24877:499;-1:-1:-1;;24877:499:48:o"
        },
        "gasEstimates": {
          "creation": {
            "codeDepositCost": "4530400",
            "executionCost": "infinite",
            "totalCost": "infinite"
          },
          "external": {
            "acknowledgeMissedReveal(address,bytes32,(uint64,uint8)[],bytes24)": "infinite",
            "acknowledgeMissedRevealByBurningAllReserve()": "infinite",
            "addToReserve(uint256,(uint256,uint256,uint8,bytes32,bytes32))": "infinite",
            "cancelCommitment()": "infinite",
            "makeCommitment(bytes24,address)": "infinite",
            "makeCommitmentWithExtraReserve(bytes24,uint256,(uint256,uint256,uint8,bytes32,bytes32),address)": "infinite",
            "poke(uint64)": "infinite",
            "pokeMultiple(uint64[])": "infinite",
            "reveal(address,bytes32,(uint64,uint8)[],bytes24,bool,address)": "infinite",
            "withdrawFromReserve(uint256)": "infinite"
          }
        },
        "methodIdentifiers": {
          "acknowledgeMissedReveal(address,bytes32,(uint64,uint8)[],bytes24)": "599a71c6",
          "acknowledgeMissedRevealByBurningAllReserve()": "1fdd8a69",
          "addToReserve(uint256,(uint256,uint256,uint8,bytes32,bytes32))": "d6710112",
          "cancelCommitment()": "afa1e2d1",
          "makeCommitment(bytes24,address)": "ae37a62d",
          "makeCommitmentWithExtraReserve(bytes24,uint256,(uint256,uint256,uint8,bytes32,bytes32),address)": "10837a39",
          "poke(uint64)": "4dd3ab23",
          "pokeMultiple(uint64[])": "8b8fc3a1",
          "reveal(address,bytes32,(uint64,uint8)[],bytes24,bool,address)": "d4019783",
          "withdrawFromReserve(uint256)": "0a8bcdb9"
        }
      },
      "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20WithIERC2612\",\"name\":\"tokens\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"burnAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commitPhaseDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revealPhaseDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"maxLife\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"numTokensPerGems\",\"type\":\"uint256\"},{\"internalType\":\"contract ITime\",\"name\":\"time\",\"type\":\"address\"}],\"internalType\":\"struct UsingStratagemsTypes.Config\",\"name\":\"config\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CanStillReveal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CommitmentHashNotMatching\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GameNotStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InCommitmentPhase\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InRevealPhase\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEpoch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFurtherMoves\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NothingToReveal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PreviousCommitmentNotRevealed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"}],\"name\":\"ReserveTooLow\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"epoch\",\"type\":\"uint24\"}],\"name\":\"CommitmentCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"epoch\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"bytes24\",\"name\":\"commitmentHash\",\"type\":\"bytes24\"}],\"name\":\"CommitmentMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"epoch\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"bytes24\",\"name\":\"commitmentHash\",\"type\":\"bytes24\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"position\",\"type\":\"uint64\"},{\"internalType\":\"enum UsingStratagemsTypes.Color\",\"name\":\"color\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct UsingStratagemsTypes.Move[]\",\"name\":\"moves\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bytes24\",\"name\":\"furtherMoves\",\"type\":\"bytes24\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newReserveAmount\",\"type\":\"uint256\"}],\"name\":\"CommitmentRevealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"epoch\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBurnt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes24\",\"name\":\"furtherMoves\",\"type\":\"bytes24\"}],\"name\":\"CommitmentVoid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"position\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum UsingStratagemsTypes.Color\",\"name\":\"oldColor\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum UsingStratagemsTypes.Color\",\"name\":\"newColor\",\"type\":\"uint8\"}],\"name\":\"MoveProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountDeposited\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"ReserveDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"ReserveWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"position\",\"type\":\"uint64\"},{\"internalType\":\"enum UsingStratagemsTypes.Color\",\"name\":\"color\",\"type\":\"uint8\"}],\"internalType\":\"struct UsingStratagemsTypes.Move[]\",\"name\":\"moves\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes24\",\"name\":\"furtherMoves\",\"type\":\"bytes24\"}],\"name\":\"acknowledgeMissedReveal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acknowledgeMissedRevealByBurningAllReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokensAmountToAdd\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct UsingStratagemsTypes.Permit\",\"name\":\"permit\",\"type\":\"tuple\"}],\"name\":\"addToReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelCommitment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes24\",\"name\":\"commitmentHash\",\"type\":\"bytes24\"},{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"makeCommitment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes24\",\"name\":\"commitmentHash\",\"type\":\"bytes24\"},{\"internalType\":\"uint256\",\"name\":\"tokensAmountToAdd\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct UsingStratagemsTypes.Permit\",\"name\":\"permit\",\"type\":\"tuple\"},{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"makeCommitmentWithExtraReserve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"position\",\"type\":\"uint64\"}],\"name\":\"poke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64[]\",\"name\":\"positions\",\"type\":\"uint64[]\"}],\"name\":\"pokeMultiple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"position\",\"type\":\"uint64\"},{\"internalType\":\"enum UsingStratagemsTypes.Color\",\"name\":\"color\",\"type\":\"uint8\"}],\"internalType\":\"struct UsingStratagemsTypes.Move[]\",\"name\":\"moves\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes24\",\"name\":\"furtherMoves\",\"type\":\"bytes24\"},{\"internalType\":\"bool\",\"name\":\"useReserve\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"reveal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFromReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ReserveTooLow(uint256,uint256)\":[{\"params\":{\"expected\":\"amount required to proceed\",\"inReserve\":\"amount in reserver as the time of the call\"}}]},\"events\":{\"CommitmentCancelled(address,uint24)\":{\"params\":{\"epoch\":\"epoch number on which this commit belongs to\",\"player\":\"account taking the staking risk (can be a different account than the one controlling the gems)\"}},\"CommitmentMade(address,uint24,bytes24)\":{\"params\":{\"commitmentHash\":\"the hash of moves\",\"epoch\":\"epoch number on which this commit belongs to\",\"player\":\"account taking the staking risk (can be a different account than the one controlling the gems)\"}},\"CommitmentRevealed(address,uint24,bytes24,(uint64,uint8)[],bytes24,uint256)\":{\"params\":{\"commitmentHash\":\"the hash of the moves\",\"epoch\":\"epoch number on which this commit belongs to\",\"furtherMoves\":\"hash of further moves, unless bytes32(0) which indicate end.\",\"moves\":\"the moves\",\"player\":\"account who commited\"}},\"CommitmentVoid(address,uint24,uint256,bytes24)\":{\"params\":{\"amountBurnt\":\"amount of token to burn\",\"epoch\":\"epoch number on which this commit belongs to\",\"furtherMoves\":\"hash of further moves, unless bytes32(0) which indicate end.\",\"player\":\"the account that made the commitment\"}},\"MoveProcessed(uint64,address,uint8,uint8)\":{\"params\":{\"newColor\":\"color that takes over\",\"oldColor\":\"previous color of the cell\",\"player\":\"account making the move\",\"position\":\"cell at which the move take place\"}},\"ReserveDeposited(address,uint256,uint256)\":{\"params\":{\"amountDeposited\":\"the number of tokens deposited\",\"newAmount\":\"the number of tokens in reserver as a result\",\"player\":\"account receiving the token in the reserve\"}},\"ReserveWithdrawn(address,uint256,uint256)\":{\"params\":{\"amountWithdrawn\":\"the number of tokens withdrawnn\",\"newAmount\":\"the number of tokens in reserver as a result\",\"player\":\"account withdrawing the tokens\"}}},\"kind\":\"dev\",\"methods\":{\"acknowledgeMissedReveal(address,bytes32,(uint64,uint8)[],bytes24)\":{\"params\":{\"furtherMoves\":\"if moves cannot be contained in one tx, further moves are represented by a hash to reveal too\",\"moves\":\"the actual moves\",\"player\":\"the account who committed the move\",\"secret\":\"the secret used to make the commit\"}},\"addToReserve(uint256,(uint256,uint256,uint8,bytes32,bytes32))\":{\"params\":{\"permit\":\"permit EIP2612, .value = zero if not needed\",\"tokensAmountToAdd\":\"amount of tokens to add\"}},\"makeCommitment(bytes24,address)\":{\"params\":{\"commitmentHash\":\"the hash of the moves\",\"payee\":\"address to send ETH to along the commitment. Can be used to pay for reveal\"}},\"makeCommitmentWithExtraReserve(bytes24,uint256,(uint256,uint256,uint8,bytes32,bytes32),address)\":{\"params\":{\"commitmentHash\":\"the has of the moves\",\"payee\":\"address to send ETH to along the commitment. Can be used to pay for reveal\",\"permit\":\"permit EIP2612, value = zero if not needed\",\"tokensAmountToAdd\":\"amount of tokens to add to the reserve. the resulting total must be enough to cover the moves\"}},\"poke(uint64)\":{\"params\":{\"position\":\"the cell position\"}},\"pokeMultiple(uint64[])\":{\"params\":{\"positions\":\"cell positions to collect from\"}},\"reveal(address,bytes32,(uint64,uint8)[],bytes24,bool,address)\":{\"params\":{\"furtherMoves\":\"if moves cannot be contained in one tx, further moves are represented by a hash to reveal too  Note that you have to that have enough moves (specified by MAX_NUM_MOVES_PER_HASH = 32)\",\"moves\":\"the actual moves\",\"payee\":\"address to send ETH to along the reveal\",\"player\":\"the account who committed the move\",\"secret\":\"the secret used to make the commit\",\"useReserve\":\"whether the tokens are taken from the reserve or from approvals.  This allow player to keep their reserve intact and use it on their next move.  Note that this require the Stratagems contract to have enough allowance.\"}},\"withdrawFromReserve(uint256)\":{\"params\":{\"amount\":\"number of tokens to withdraw\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"CanStillReveal()\":[{\"notice\":\"Player have to reveal if they can Stratagems will prevent them from acknowledging missed reveal if there is still time to reveal.\"}],\"CommitmentHashNotMatching()\":[{\"notice\":\"Player have to reveal their commitment using the exact same move values  If they provide different value, the commitment hash will differ and Stratagems will reject their reveal.\"}],\"GameNotStarted()\":[{\"notice\":\"Game has not started yet, can't perform any action\"}],\"InCommitmentPhase()\":[{\"notice\":\"When in Commit phase, player can make new commitment but they cannot reveal their move yet.\"}],\"InRevealPhase()\":[{\"notice\":\"When in Reveal phase, it is not possible to commit new moves or cancel previous commitment  During Reveal phase, players have to reveal their commitment, if not already done.\"}],\"InvalidEpoch()\":[{\"notice\":\"Player can only reveal their move in the same epoch they commited.abi  If a player reveal later it can only do to minimize the reserve burn cost by calling : `acknowledgeMissedReveal`\"}],\"InvalidFurtherMoves()\":[{\"notice\":\"Player can make arbitrary number of moves per epoch. To do so they group moves into (MAX_NUM_MOVES_PER_HASH = 32) moves  This result in a recursive series of hash that they can then submit in turn while revealing.  The limit  (MAX_NUM_MOVES_PER_HASH = 32) ensure a reveal batch fits in a block.\"}],\"NothingToReveal()\":[{\"notice\":\"Player can only reveal moves they commited.\"}],\"PreviousCommitmentNotRevealed()\":[{\"notice\":\"Previous commitment need to be revealed before making a new one. Even if the corresponding reveal phase has passed.\\\\  It is also not possible to withdraw any amount from reserve until the commitment is revealed.\\\\If player lost the information to reveal, it can acknowledge failure which will burn all its reserve.\\\\\"}],\"ReserveTooLow(uint256,uint256)\":[{\"notice\":\"to make a commitment you always need at least one `config.numTokensPerGems` amount in reserve  Player also need one `config.numTokensPerGems`  per moves during the Reveal phase.\"}]},\"events\":{\"CommitmentCancelled(address,uint24)\":{\"notice\":\"A player has cancelled its current commitment (before it reached the reveal phase)\"},\"CommitmentMade(address,uint24,bytes24)\":{\"notice\":\"A player has commited to make a move and reveal it on the reveal phase\"},\"CommitmentRevealed(address,uint24,bytes24,(uint64,uint8)[],bytes24,uint256)\":{\"notice\":\"Player has revealed its previous commitment\"},\"CommitmentVoid(address,uint24,uint256,bytes24)\":{\"notice\":\"A player has canceled a previous commitment by burning some tokens\"},\"MoveProcessed(uint64,address,uint8,uint8)\":{\"notice\":\"A move has been revealed.\"},\"ReserveDeposited(address,uint256,uint256)\":{\"notice\":\"Player has deposited token in the reserve, allowing it to use that much in game\"},\"ReserveWithdrawn(address,uint256,uint256)\":{\"notice\":\"Player have withdrawn token from the reserve\"}},\"kind\":\"user\",\"methods\":{\"acknowledgeMissedReveal(address,bytes32,(uint64,uint8)[],bytes24)\":{\"notice\":\"called by player if they missed the reveal phase and want to minimze the token loss.  By providing the moves, they will be slashed only the amount of token required to make the moves\"},\"acknowledgeMissedRevealByBurningAllReserve()\":{\"notice\":\"should only be called as last resort this will burn all tokens in reserve If player has access to the secret, better call `acknowledgeMissedReveal`\"},\"addToReserve(uint256,(uint256,uint256,uint8,bytes32,bytes32))\":{\"notice\":\"called by players to add tokens to their reserve\"},\"cancelCommitment()\":{\"notice\":\"called by players to cancel their current commitment  Can only be called during the commit phase in which the commitment was made  It cannot be called afterward\"},\"makeCommitment(bytes24,address)\":{\"notice\":\"called by players to commit their moves  this can be called multiple time in the same epoch, the last call overriding the previous.  When a commitment is made, it needs to be revealed in the reveal phase of the same epoch.abi  If missed, player can still reveal its moves but none of them will be resolved.   The player would lose its associated reserved amount.\"},\"makeCommitmentWithExtraReserve(bytes24,uint256,(uint256,uint256,uint8,bytes32,bytes32),address)\":{\"notice\":\"called to make a commitment along with tokens to add to the reserve\"},\"pokeMultiple(uint64[])\":{\"notice\":\"poke and collect the tokens won across multiple cells\"},\"reveal(address,bytes32,(uint64,uint8)[],bytes24,bool,address)\":{\"notice\":\"called by player to reveal their moves  this is where the core logic of the game takes place  This is where the game board evolves  The game is designed so that reveal order does not matter\"},\"withdrawFromReserve(uint256)\":{\"notice\":\"called by players to withdraw tokens from the reserve  can only be called if no commitments are pending  Note that while you can withdraw after commiting, note that if you do not have enough tokens  you'll have your commitment failing.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/game/routes/StratagemsSetters.sol\":\"StratagemsSetters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.4.22 <0.9.0;\\n\\nlibrary console {\\n    address constant CONSOLE_ADDRESS =\\n        0x000000000000000000636F6e736F6c652e6c6f67;\\n\\n    function _sendLogPayloadImplementation(bytes memory payload) internal view {\\n        address consoleAddress = CONSOLE_ADDRESS;\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            pop(\\n                staticcall(\\n                    gas(),\\n                    consoleAddress,\\n                    add(payload, 32),\\n                    mload(payload),\\n                    0,\\n                    0\\n                )\\n            )\\n        }\\n    }\\n\\n    function _castToPure(\\n      function(bytes memory) internal view fnIn\\n    ) internal pure returns (function(bytes memory) pure fnOut) {\\n        assembly {\\n            fnOut := fnIn\\n        }\\n    }\\n\\n    function _sendLogPayload(bytes memory payload) internal pure {\\n        _castToPure(_sendLogPayloadImplementation)(payload);\\n    }\\n\\n    function log() internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n    }\\n    function logInt(int256 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(int256)\\\", p0));\\n    }\\n\\n    function logUint(uint256 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n    }\\n\\n    function logString(string memory p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n    }\\n\\n    function logBool(bool p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n    }\\n\\n    function logAddress(address p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n    }\\n\\n    function logBytes(bytes memory p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n    }\\n\\n    function logBytes1(bytes1 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n    }\\n\\n    function logBytes2(bytes2 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n    }\\n\\n    function logBytes3(bytes3 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n    }\\n\\n    function logBytes4(bytes4 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n    }\\n\\n    function logBytes5(bytes5 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n    }\\n\\n    function logBytes6(bytes6 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n    }\\n\\n    function logBytes7(bytes7 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n    }\\n\\n    function logBytes8(bytes8 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n    }\\n\\n    function logBytes9(bytes9 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n    }\\n\\n    function logBytes10(bytes10 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n    }\\n\\n    function logBytes11(bytes11 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n    }\\n\\n    function logBytes12(bytes12 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n    }\\n\\n    function logBytes13(bytes13 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n    }\\n\\n    function logBytes14(bytes14 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n    }\\n\\n    function logBytes15(bytes15 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n    }\\n\\n    function logBytes16(bytes16 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n    }\\n\\n    function logBytes17(bytes17 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n    }\\n\\n    function logBytes18(bytes18 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n    }\\n\\n    function logBytes19(bytes19 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n    }\\n\\n    function logBytes20(bytes20 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n    }\\n\\n    function logBytes21(bytes21 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n    }\\n\\n    function logBytes22(bytes22 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n    }\\n\\n    function logBytes23(bytes23 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n    }\\n\\n    function logBytes24(bytes24 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n    }\\n\\n    function logBytes25(bytes25 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n    }\\n\\n    function logBytes26(bytes26 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n    }\\n\\n    function logBytes27(bytes27 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n    }\\n\\n    function logBytes28(bytes28 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n    }\\n\\n    function logBytes29(bytes29 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n    }\\n\\n    function logBytes30(bytes30 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n    }\\n\\n    function logBytes31(bytes31 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n    }\\n\\n    function logBytes32(bytes32 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n    }\\n\\n    function log(uint256 p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n    }\\n\\n    function log(string memory p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n    }\\n\\n    function log(bool p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n    }\\n\\n    function log(address p0) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n    }\\n\\n    function log(uint256 p0, uint256 p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256)\\\", p0, p1));\\n    }\\n\\n    function log(uint256 p0, string memory p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string)\\\", p0, p1));\\n    }\\n\\n    function log(uint256 p0, bool p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool)\\\", p0, p1));\\n    }\\n\\n    function log(uint256 p0, address p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address)\\\", p0, p1));\\n    }\\n\\n    function log(string memory p0, uint256 p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256)\\\", p0, p1));\\n    }\\n\\n    function log(string memory p0, string memory p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n    }\\n\\n    function log(string memory p0, bool p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n    }\\n\\n    function log(string memory p0, address p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n    }\\n\\n    function log(bool p0, uint256 p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256)\\\", p0, p1));\\n    }\\n\\n    function log(bool p0, string memory p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n    }\\n\\n    function log(bool p0, bool p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n    }\\n\\n    function log(bool p0, address p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n    }\\n\\n    function log(address p0, uint256 p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256)\\\", p0, p1));\\n    }\\n\\n    function log(address p0, string memory p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n    }\\n\\n    function log(address p0, bool p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n    }\\n\\n    function log(address p0, address p1) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, string memory p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, string memory p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, string memory p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, string memory p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, bool p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, bool p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, bool p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, bool p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, address p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, address p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, address p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, address p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, uint256 p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, uint256 p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, uint256 p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, uint256 p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, string memory p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, string memory p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, string memory p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, string memory p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, bool p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, bool p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, bool p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, bool p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, address p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, address p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, address p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(string memory p0, address p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, uint256 p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, uint256 p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, uint256 p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, uint256 p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, string memory p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, string memory p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, string memory p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, string memory p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, bool p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, bool p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, bool p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, bool p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, address p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, address p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, address p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(bool p0, address p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, uint256 p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, uint256 p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, uint256 p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, uint256 p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, string memory p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, string memory p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, string memory p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, string memory p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, bool p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, bool p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, bool p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, bool p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, address p1, uint256 p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, address p1, string memory p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, address p1, bool p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n    }\\n\\n    function log(address p0, address p1, address p2) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, uint256 p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, string memory p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, bool p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(uint256 p0, address p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, uint256 p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, string memory p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, bool p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(string memory p0, address p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, uint256 p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, string memory p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, bool p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(bool p0, address p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, uint256 p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, string memory p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, bool p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, uint256 p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, uint256 p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, uint256 p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, uint256 p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, string memory p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, string memory p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, string memory p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, string memory p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, bool p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, bool p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, bool p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, bool p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, address p2, uint256 p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint256)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, address p2, string memory p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, address p2, bool p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n    }\\n\\n    function log(address p0, address p1, address p2, address p3) internal pure {\\n        _sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n    }\\n\\n}\\n\",\"keccak256\":\"0x7434453e6d3b7d0e5d0eb7846ffdbc27f0ccf3b163591263739b628074dc103a\",\"license\":\"MIT\"},\"solidity-kit/solc_0.8/ERC165/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IERC165 {\\n    /// @notice Query if a contract implements an interface\\n    /// @param interfaceID The interface identifier, as specified in ERC-165\\n    /// @dev Interface identification is specified in ERC-165. This function\\n    ///  uses less than 30,000 gas.\\n    /// @return `true` if the contract implements `interfaceID` and\\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\\n    function supportsInterface(bytes4 interfaceID) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x0bbdb7cf3d2c6acf95398c0ef54cb0e6ae8a3e6ce6f18fafeb0aa55cb74fb8fd\",\"license\":\"MIT\"},\"solidity-kit/solc_0.8/ERC20/ERC2612/interfaces/IERC20WithIERC2612.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/IERC20.sol\\\";\\nimport \\\"./IERC2612.sol\\\";\\n\\ninterface IERC20WithIERC2612 is IERC20, IERC2612 {}\\n\",\"keccak256\":\"0x66100d98de50a396d46feb17a2b2b400b13f033f5e01b45e95901e61a4feef05\",\"license\":\"MIT\"},\"solidity-kit/solc_0.8/ERC20/ERC2612/interfaces/IERC2612.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/IERC20Errors.sol\\\";\\n\\ninterface IERC2612 {\\n    /// @notice The signature do not match the expected signer\\n    error InvalidSignature();\\n    /// @notice The permit has expired\\n    /// @param currentTime time at which the error happen\\n    /// @param deadline the deadline\\n    error DeadlineOver(uint256 currentTime, uint256 deadline);\\n\\n    /// @notice allow `spender` to spend `value` amount of token on behalf of `owner`\\n    /// @param owner owner of the tokens\\n    /// @param spender address allowed to spend on behalf of the owner.\\n    /// @param value amount of token allowed to be spent\\n    /// @param deadline timestamp in seconds after which the permit is not valid.\\n    /// @param v signature part v\\n    /// @param r signature part r\\n    /// @param s signature part s\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /// @notice return the current nonce of the owner\\n    /// @param owner address queried\\n    /// @return nonce nonce value\\n    function nonces(address owner) external view returns (uint256 nonce);\\n\\n    /// @notice EIP-712 Domain separator hash\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x4cfe3a61d7721761dd90ceb55c77d5d7ecaeb153d567c40d3b5ca33e266df2ea\",\"license\":\"MIT\"},\"solidity-kit/solc_0.8/ERC20/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/IERC20Errors.sol\\\";\\n\\ninterface IERC20 {\\n    /// @notice trigger when tokens are transferred, including zero value transfers.\\n    /// @param from the account the tokens are sent from\\n    /// @param to the account the tokens are sent to\\n    /// @param value number of tokens sent\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /// @notice trigger on approval amount being set.\\n    ///   Note that Transfer events need to be considered to compute the current allowance.\\n    /// @param owner the account approving the `spender`\\n    /// @param spender the account allowed to spend\\n    /// @param value the amount granted\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /// @notice Returns the total token supply.\\n    function totalSupply() external view returns (uint256);\\n\\n    /// @notice Returns the number of decimals the token uses.\\n    function decimals() external view returns (uint8);\\n\\n    /// @notice Returns the symbol of the token.\\n    function symbol() external view returns (string memory);\\n\\n    /// @notice Returns the name of the token.\\n    function name() external view returns (string memory);\\n\\n    /// @notice Returns the account balance of another account with address `owner`.\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    /// @notice Transfers `amount` of tokens to address `to`.\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /// @notice Returns the amount which `spender` is still allowed to withdraw from `owner`.\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /// @notice Allows `spender` to withdraw from your account multiple times, up to `amount`.\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /// @notice Transfers `amount` tokens from address `from` to address `to`.\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x15bb1e4e1340b29eefc06b8826fcf9e6455e25ba972709672da7d3788777133f\",\"license\":\"MIT\"},\"solidity-kit/solc_0.8/ERC20/interfaces/IERC20Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice The msg value do not match the expected value\\n/// @param provided msg.value amount provided\\n/// @param expected value expected\\nerror InvalidMsgValue(uint256 provided, uint256 expected);\\n/// @notice The total amount provided do not match the expected value\\n/// @param provided msg.value amount provided\\n/// @param expected value expected\\nerror InvalidTotalAmount(uint256 provided, uint256 expected);\\n/// @notice An invalid address is specified (for example: zero address)\\n/// @param addr invalid address\\nerror InvalidAddress(address addr);\\n/// @notice the amount requested exceed the allowance\\n/// @param currentAllowance the current allowance\\n/// @param expected amount expected\\nerror NotAuthorizedAllowance(uint256 currentAllowance, uint256 expected);\\n/// @notice the amount requested exceed the balance\\n/// @param currentBalance the current balance\\n/// @param expected amount expected\\nerror NotEnoughTokens(uint256 currentBalance, uint256 expected);\\n\",\"keccak256\":\"0xc8ab4cfee19338da32d2fc5473e1ee740bf608c59196ebd16de74294c4813ae9\",\"license\":\"MIT\"},\"solidity-kit/solc_0.8/ERC721/interfaces/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../ERC165/interfaces/IERC165.sol\\\";\\nimport \\\"../../utils/GenericErrors.sol\\\";\\n\\ninterface IERC721Supply {\\n    /// @notice return the total number of token in existence\\n    function totalSupply() external view returns (uint256);\\n}\\n\\ninterface IERC721 is IERC165 {\\n    /// @notice Triggered when a token is transferred\\n    /// @param from the account the token is sent from\\n    /// @param to the account the token is sent to\\n    /// @param tokenID id of the token being sent\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenID);\\n\\n    /// @notice Triggered when a token is approved to be sent by another account\\n    ///  Note tat the approval get reset when a Transfer event for that same token is emitted.\\n    /// @param owner current owner of the token\\n    /// @param approved account who can know transfer on the owner's behalf\\n    /// @param tokenID id of the token being approved\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenID);\\n\\n    /// @notice Triggered when an account approve or disaprove another to transfer on its behalf\\n    /// @param owner the account granting rights over all of its token\\n    /// @param operator account who can know transfer on the owner's behalf\\n    /// @param approved whether it is approved or not\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /// @notice The token does not exist\\n    /// @param tokenID id of the expected token\\n    error NonExistentToken(uint256 tokenID);\\n    /// @notice The address from which the token is sent is not the current owner\\n    /// @param provided the address expected to be the current owner\\n    /// @param currentOwner the current owner\\n    error NotOwner(address provided, address currentOwner);\\n    /// @notice An invalid address is specified (for example: zero address)\\n    /// @param addr invalid address\\n    error InvalidAddress(address addr);\\n    /// @notice The Transfer was rejected by the destination\\n    error TransferRejected();\\n    /// @notice The Nonce overflowed, make a transfer to self to allow new nonces.\\n    error NonceOverflow();\\n\\n    /// @notice Get the number of tokens owned by an address.\\n    /// @param owner The address to look for.\\n    /// @return balance The number of tokens owned by the address.\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /// @notice Get the owner of a token.\\n    /// @param tokenID The id of the token.\\n    /// @return owner The address of the token owner.\\n    function ownerOf(uint256 tokenID) external view returns (address owner);\\n\\n    /// @notice Transfer a token between 2 addresses letting the receiver knows of the transfer.\\n    /// @param from The sender of the token.\\n    /// @param to The recipient of the token.\\n    /// @param tokenID The id of the token.\\n    /// @param data Additional data.\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenID,\\n        bytes calldata data\\n    ) external;\\n\\n    /// @notice Transfer a token between 2 addresses letting the receiver know of the transfer.\\n    /// @param from The send of the token.\\n    /// @param to The recipient of the token.\\n    /// @param tokenID The id of the token.\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenID\\n    ) external;\\n\\n    /// @notice Transfer a token between 2 addresses.\\n    /// @param from The sender of the token.\\n    /// @param to The recipient of the token.\\n    /// @param tokenID The id of the token.\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenID\\n    ) external;\\n\\n    /// @notice Approve an operator to transfer a specific token on the senders behalf.\\n    /// @param operator The address receiving the approval.\\n    /// @param tokenID The id of the token.\\n    function approve(address operator, uint256 tokenID) external;\\n\\n    /// @notice Set the approval for an operator to manage all the tokens of the sender.\\n    /// @param operator The address receiving the approval.\\n    /// @param approved The determination of the approval.\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /// @notice Get the approved operator for a specific token.\\n    /// @param tokenID The id of the token.\\n    /// @return operator The address of the operator.\\n    function getApproved(uint256 tokenID) external view returns (address operator);\\n\\n    /// @notice Check if the sender approved the operator to transfer any of its tokens.\\n    /// @param owner The address of the owner.\\n    /// @param operator The address of the operator.\\n    /// @return isOperator The status of the approval.\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xfc57636452848e89a81850fe10e3ab1d5d7f5780d55ca0722a38fd59a44fd8ef\",\"license\":\"MIT\"},\"solidity-kit/solc_0.8/ERC721/interfaces/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\n\\ninterface IERC721Metadata is IERC721 {\\n    /// @notice A descriptive name for a collection of NFTs in this contract\\n    function name() external view returns (string memory name);\\n\\n    /// @notice An abbreviated name for NFTs in this contract\\n    function symbol() external view returns (string memory symbol);\\n\\n    /// @notice A distinct Uniform Resource Identifier (URI) for a given asset.\\n    /// @dev Throws if `tokenID` is not a valid NFT. URIs are defined in RFC\\n    ///  3986. The URI may point to a JSON file that conforms to the \\\"ERC721\\n    ///  Metadata JSON Schema\\\".\\n    /// @param tokenID id of the token being queried.\\n    function tokenURI(uint256 tokenID) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x8a4ff84c39ad5c6bbf3e5486d3687bc1e15b96835ede5761f1922cf7a72f3354\",\"license\":\"MIT\"},\"solidity-kit/solc_0.8/debug/time/interfaces/ITime.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ITime {\\n    function timestamp() external view returns (uint256);\\n}\\n\\ninterface ITimeSetter {\\n    event TimeIncreased(uint256 newTime, uint256 delta);\\n\\n    function increaseTime(uint256 delta) external;\\n}\\n\",\"keccak256\":\"0xeb0fa861febbb5f5956ea9f48a88c812671564d249ddd8c5c00740e922eb056d\",\"license\":\"MIT\"},\"solidity-kit/solc_0.8/utils/GenericErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @notice Not authorized to perform this operation\\nerror NotAuthorized();\\n\",\"keccak256\":\"0x333aa48943e66849a9350384e7ec2553b93e8a8a12b8ad300d3341f7c98b60fd\",\"license\":\"MIT\"},\"src/game/interface/IStratagems.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport 'solidity-kit/solc_0.8/ERC721/interfaces/IERC721.sol';\\nimport 'solidity-kit/solc_0.8/ERC721/interfaces/IERC721Metadata.sol';\\nimport 'solidity-kit/solc_0.8/ERC165/interfaces/IERC165.sol';\\nimport './UsingStratagemsTypes.sol';\\nimport './UsingStratagemsEvents.sol';\\n\\n\\ninterface IStratagemsGetters is UsingStratagemsTypes, UsingStratagemsEvents {\\n\\t/// @notice return updated cell (based on current epoch)\\n\\t/// @param id the cell id\\n\\tfunction getCell(uint256 id) external view returns (FullCell memory cell);\\n\\n\\t/// @notice return the list of updated cells (based on current epoch) whose ids is given\\n\\t/// @param ids the list of cell ids\\n\\tfunction getCells(uint256[] memory ids) external view returns (FullCell[] memory cells);\\n\\n\\t/// @notice the number of token in reserve per account\\n\\t///  This is used to slash player who do not reveal their moves\\n\\t///  The amount can be greater than the number of token required for the next move\\n\\t///  This allow player to potentially hide their intention.\\n\\t/// @param account the address to retrived the amount in reserve of.\\n\\tfunction getTokensInReserve(address account) external view returns (uint256 amount);\\n\\n\\t/// @notice The commitment to be revealed. zeroed if no commitment need to be made.\\n\\t/// @param account the address of which to retrieve the commitment\\n\\tfunction getCommitment(address account) external view returns (Commitment memory commitment);\\n\\n\\t/// @notice return the config used to initialise the Game\\n\\tfunction getConfig() external view returns (Config memory config);\\n}\\n\\ninterface IStratagemsSetters is UsingStratagemsTypes, UsingStratagemsEvents {\\n\\n\\t/// @notice called by players to add tokens to their reserve\\n\\t/// @param tokensAmountToAdd amount of tokens to add\\n\\t/// @param permit permit EIP2612, .value = zero if not needed\\n\\tfunction addToReserve(uint256 tokensAmountToAdd, Permit calldata permit) external;\\n\\n\\t/// @notice called by players to commit their moves\\n\\t///  this can be called multiple time in the same epoch, the last call overriding the previous.\\n\\t///  When a commitment is made, it needs to be revealed in the reveal phase of the same epoch.abi\\n\\t///  If missed, player can still reveal its moves but none of them will be resolved.\\n\\t///   The player would lose its associated reserved amount.\\n\\t/// @param commitmentHash the hash of the moves\\n\\t/// @param payee address to send ETH to along the commitment. Can be used to pay for reveal\\n\\tfunction makeCommitment(bytes24 commitmentHash, address payable payee) external payable;\\n\\n\\t/// @notice called by players to cancel their current commitment\\n\\t///  Can only be called during the commit phase in which the commitment was made\\n\\t///  It cannot be called afterward\\n\\tfunction cancelCommitment() external;\\n\\n\\t/// @notice called to make a commitment along with tokens to add to the reserve\\n\\t/// @param commitmentHash the has of the moves\\n\\t/// @param tokensAmountToAdd amount of tokens to add to the reserve. the resulting total must be enough to cover the moves\\n\\t/// @param permit permit EIP2612, value = zero if not needed\\n\\t/// @param payee address to send ETH to along the commitment. Can be used to pay for reveal\\n\\tfunction makeCommitmentWithExtraReserve(\\n\\t\\tbytes24 commitmentHash,\\n\\t\\tuint256 tokensAmountToAdd,\\n\\t\\tPermit calldata permit,\\n\\t\\taddress payable payee\\n\\t) external payable;\\n\\n\\t/// @notice called by players to withdraw tokens from the reserve\\n\\t///  can only be called if no commitments are pending\\n\\t///  Note that while you can withdraw after commiting, note that if you do not have enough tokens\\n\\t///  you'll have your commitment failing.\\n\\t/// @param amount number of tokens to withdraw\\n\\tfunction withdrawFromReserve(uint256 amount) external;\\n\\n\\t/// @notice called by player to reveal their moves\\n\\t///  this is where the core logic of the game takes place\\n\\t///  This is where the game board evolves\\n\\t///  The game is designed so that reveal order does not matter\\n\\t/// @param player the account who committed the move\\n\\t/// @param secret the secret used to make the commit\\n\\t/// @param moves the actual moves\\n\\t/// @param furtherMoves if moves cannot be contained in one tx, further moves are represented by a hash to reveal too\\n\\t///  Note that you have to that have enough moves (specified by MAX_NUM_MOVES_PER_HASH = 32)\\n\\t/// @param useReserve whether the tokens are taken from the reserve or from approvals.\\n\\t///  This allow player to keep their reserve intact and use it on their next move.\\n\\t///  Note that this require the Stratagems contract to have enough allowance.\\n\\t/// @param payee address to send ETH to along the reveal\\n\\tfunction reveal(\\n\\t\\taddress player,\\n\\t\\tbytes32 secret,\\n\\t\\tMove[] calldata moves,\\n\\t\\tbytes24 furtherMoves,\\n\\t\\tbool useReserve,\\n\\t\\taddress payable payee\\n\\t) external payable;\\n\\n\\t/// @notice called by player if they missed the reveal phase and want to minimze the token loss.\\n\\t///  By providing the moves, they will be slashed only the amount of token required to make the moves\\n\\t/// @param player the account who committed the move\\n\\t/// @param secret the secret used to make the commit\\n\\t/// @param moves the actual moves\\n\\t/// @param furtherMoves if moves cannot be contained in one tx, further moves are represented by a hash to reveal too\\n\\tfunction acknowledgeMissedReveal(\\n\\t\\taddress player,\\n\\t\\tbytes32 secret,\\n\\t\\tMove[] calldata moves,\\n\\t\\tbytes24 furtherMoves\\n\\t) external;\\n\\n\\t/// @notice should only be called as last resort\\n\\t/// this will burn all tokens in reserve\\n\\t/// If player has access to the secret, better call `acknowledgeMissedReveal`\\n\\tfunction acknowledgeMissedRevealByBurningAllReserve() external;\\n\\n\\t/// @notice poke a position, resolving its virtual state.\\n\\t//  If dead as a result, it will reward neighboor enemies colors\\n\\t/// @param position the cell position\\n\\tfunction poke(uint64 position) external;\\n\\n\\t/// @notice poke and collect the tokens won across multiple cells\\n\\t/// @param positions cell positions to collect from\\n\\tfunction pokeMultiple(uint64[] calldata positions) external;\\n}\\n\\ninterface IStratagems is IStratagemsSetters, IStratagemsGetters, IERC721, IERC721Metadata {}\\n\",\"keccak256\":\"0x9acdaf22ad3ed3634757eefab964d6d3f67be22d081d6002e7e6d97276e5e71c\",\"license\":\"AGPL-3.0\"},\"src/game/interface/UsingStratagemsErrors.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\ninterface UsingStratagemsErrors {\\n\\t/// @notice Game has not started yet, can't perform any action\\n\\terror GameNotStarted();\\n\\n\\t/// @notice When in Reveal phase, it is not possible to commit new moves or cancel previous commitment\\n\\t///  During Reveal phase, players have to reveal their commitment, if not already done.\\n\\terror InRevealPhase();\\n\\n\\t/// @notice When in Commit phase, player can make new commitment but they cannot reveal their move yet.\\n\\terror InCommitmentPhase();\\n\\n\\t/// @notice Previous commitment need to be revealed before making a new one. Even if the corresponding reveal phase has passed.\\\\\\n\\t///  It is also not possible to withdraw any amount from reserve until the commitment is revealed.\\\\\\n\\t/// @notice If player lost the information to reveal, it can acknowledge failure which will burn all its reserve.\\\\\\n\\terror PreviousCommitmentNotRevealed();\\n\\n\\t/// @notice to make a commitment you always need at least one `config.numTokensPerGems` amount in reserve\\n\\t///  Player also need one `config.numTokensPerGems`  per moves during the Reveal phase.\\n\\t/// @param inReserve amount in reserver as the time of the call\\n\\t/// @param expected amount required to proceed\\n\\terror ReserveTooLow(uint256 inReserve, uint256 expected);\\n\\n\\t/// @notice Player have to reveal their commitment using the exact same move values\\n\\t///  If they provide different value, the commitment hash will differ and Stratagems will reject their reveal.\\n\\terror CommitmentHashNotMatching();\\n\\n\\t/// @notice Player can only reveal moves they commited.\\n\\terror NothingToReveal();\\n\\n\\t/// @notice Player can only reveal their move in the same epoch they commited.abi\\n\\t///  If a player reveal later it can only do to minimize the reserve burn cost by calling : `acknowledgeMissedReveal`\\n\\terror InvalidEpoch();\\n\\n\\t/// @notice Player can make arbitrary number of moves per epoch. To do so they group moves into (MAX_NUM_MOVES_PER_HASH = 32) moves\\n\\t///  This result in a recursive series of hash that they can then submit in turn while revealing.\\n\\t///  The limit  (MAX_NUM_MOVES_PER_HASH = 32) ensure a reveal batch fits in a block.\\n\\terror InvalidFurtherMoves();\\n\\n\\t/// @notice Player have to reveal if they can\\n\\t/// Stratagems will prevent them from acknowledging missed reveal if there is still time to reveal.\\n\\terror CanStillReveal();\\n}\\n\",\"keccak256\":\"0xe6fd556d5df60bba43c3ade39792f1a3fbba2fcc6b25a14cb5da193763c8f68d\",\"license\":\"AGPL-3.0\"},\"src/game/interface/UsingStratagemsEvents.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport './UsingStratagemsTypes.sol';\\n\\ninterface UsingStratagemsEvents is UsingStratagemsTypes {\\n\\t/// @notice A player has commited to make a move and reveal it on the reveal phase\\n\\t/// @param player account taking the staking risk (can be a different account than the one controlling the gems)\\n\\t/// @param epoch epoch number on which this commit belongs to\\n\\t/// @param commitmentHash the hash of moves\\n\\tevent CommitmentMade(address indexed player, uint24 indexed epoch, bytes24 commitmentHash);\\n\\n\\t/// @notice A player has cancelled its current commitment (before it reached the reveal phase)\\n\\t/// @param player account taking the staking risk (can be a different account than the one controlling the gems)\\n\\t/// @param epoch epoch number on which this commit belongs to\\n\\tevent CommitmentCancelled(address indexed player, uint24 indexed epoch);\\n\\n\\t/// @notice A player has canceled a previous commitment by burning some tokens\\n\\t/// @param player the account that made the commitment\\n\\t/// @param epoch epoch number on which this commit belongs to\\n\\t/// @param amountBurnt amount of token to burn\\n\\t/// @param furtherMoves hash of further moves, unless bytes32(0) which indicate end.\\n\\tevent CommitmentVoid(address indexed player, uint24 indexed epoch, uint256 amountBurnt, bytes24 furtherMoves);\\n\\n\\t/// @notice Player has revealed its previous commitment\\n\\t/// @param player account who commited\\n\\t/// @param epoch epoch number on which this commit belongs to\\n\\t/// @param commitmentHash the hash of the moves\\n\\t/// @param moves the moves\\n\\t/// @param furtherMoves hash of further moves, unless bytes32(0) which indicate end.\\n\\tevent CommitmentRevealed(\\n\\t\\taddress indexed player,\\n\\t\\tuint24 indexed epoch,\\n\\t\\tbytes24 indexed commitmentHash,\\n\\t\\tMove[] moves,\\n\\t\\tbytes24 furtherMoves,\\n\\t\\tuint256 newReserveAmount\\n\\t);\\n\\n\\t/// @notice Player have withdrawn token from the reserve\\n\\t/// @param player account withdrawing the tokens\\n\\t/// @param amountWithdrawn the number of tokens withdrawnn\\n\\t/// @param newAmount the number of tokens in reserver as a result\\n\\tevent ReserveWithdrawn(address indexed player, uint256 amountWithdrawn, uint256 newAmount);\\n\\n\\t/// @notice Player has deposited token in the reserve, allowing it to use that much in game\\n\\t/// @param player account receiving the token in the reserve\\n\\t/// @param amountDeposited the number of tokens deposited\\n\\t/// @param newAmount the number of tokens in reserver as a result\\n\\tevent ReserveDeposited(address indexed player, uint256 amountDeposited, uint256 newAmount);\\n\\n\\t// --------------------------------------------------------------------------------------------\\n\\t// Event to make it easier to check what is happening\\n\\t// TODO get rid ?\\n\\t// --------------------------------------------------------------------------------------------\\n\\t/// @notice A move has been revealed.\\n\\t/// @param position cell at which the move take place\\n\\t/// @param player account making the move\\n\\t/// @param oldColor previous color of the cell\\n\\t/// @param newColor color that takes over\\n\\tevent MoveProcessed(uint64 indexed position, address indexed player, Color oldColor, Color newColor);\\n}\\n\",\"keccak256\":\"0x90512f4570147b6168558c04704bded4743f3cb8a03c23ddeac95e71c7ae3bc1\",\"license\":\"AGPL-3.0\"},\"src/game/interface/UsingStratagemsTypes.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport 'solidity-kit/solc_0.8/ERC721/interfaces/IERC721.sol';\\nimport 'solidity-kit/solc_0.8/ERC165/interfaces/IERC165.sol';\\nimport 'solidity-kit/solc_0.8/ERC20/ERC2612/interfaces/IERC20WithIERC2612.sol';\\nimport 'solidity-kit/solc_0.8/debug/time/interfaces/ITime.sol';\\n\\ninterface UsingStratagemsTypes {\\n\\t// --------------------------------------------------------------------------------------------\\n\\t// EXTERNAL TYPES\\n\\t// --------------------------------------------------------------------------------------------\\n\\n\\t/// @notice The set of possible color (None indicate the Cell is empty)\\n\\tenum Color {\\n\\t\\tNone,\\n\\t\\tBlue,\\n\\t\\tRed,\\n\\t\\tGreen,\\n\\t\\tYellow,\\n\\t\\tPurple,\\n\\t\\tEvil\\n\\t}\\n\\n\\t/// @notice Move struct that define position and color\\n\\tstruct Move {\\n\\t\\tuint64 position; // TODO make it bigger ? uint32 * uint32 is probably infinitely big enough\\n\\t\\tColor color;\\n\\t}\\n\\n\\t/// @notice Permit struct to authorize EIP2612 ERC20 contracts\\n\\tstruct Permit {\\n\\t\\tuint256 value;\\n\\t\\tuint256 deadline;\\n\\t\\tuint8 v;\\n\\t\\tbytes32 r;\\n\\t\\tbytes32 s;\\n\\t}\\n\\n\\t/// @notice Config struct to configure the game instance\\n\\tstruct Config {\\n\\t\\tIERC20WithIERC2612 tokens;\\n\\t\\taddress payable burnAddress;\\n\\t\\tuint256 startTime;\\n\\t\\tuint256 commitPhaseDuration;\\n\\t\\tuint256 revealPhaseDuration;\\n\\t\\tuint8 maxLife;\\n\\t\\tuint256 numTokensPerGems;\\n\\t\\tITime time;\\n\\t}\\n\\n\\t/// @notice Cell struct representing the current state of a cell\\n\\tstruct FullCell {\\n\\t\\taddress owner;\\n\\t\\tuint24 lastEpochUpdate;\\n\\t\\tuint24 epochWhenTokenIsAdded;\\n\\t\\tColor color;\\n\\t\\tuint8 life;\\n\\t\\tint8 delta;\\n\\t\\tuint8 enemyMap;\\n\\t\\tuint8 distribution;\\n\\t}\\n\\n\\t// --------------------------------------------------------------------------------------------\\n\\t// STORAGE TYPES\\n\\t// --------------------------------------------------------------------------------------------\\n\\tstruct Cell {\\n\\t\\tuint24 lastEpochUpdate;\\n\\t\\tuint24 epochWhenTokenIsAdded;\\n\\t\\tColor color;\\n\\t\\tuint8 life;\\n\\t\\tint8 delta;\\n\\t\\tuint8 enemyMap;\\n\\t\\tuint8 distribution; // this encode who is left to be given reward (4 left most bits) and the reard (4 most right bits)\\n\\t}\\n\\n\\tstruct Commitment {\\n\\t\\tbytes24 hash;\\n\\t\\tuint24 epoch;\\n\\t}\\n\\n\\t// --------------------------------------------------------------------------------------------\\n\\t// INTERNAL TYPES\\n\\t// --------------------------------------------------------------------------------------------\\n\\n\\tstruct TokenTransfer {\\n\\t\\taddress payable to;\\n\\t\\tuint256 amount;\\n\\t}\\n\\n\\tstruct TokenTransferCollection {\\n\\t\\tTokenTransfer[] transfers;\\n\\t\\tuint256 numTransfers;\\n\\t}\\n\\n\\tstruct MoveTokens {\\n\\t\\tuint256 tokensPlaced;\\n\\t\\tuint256 tokensBurnt;\\n\\t\\tuint256 tokensReturned;\\n\\t}\\n}\\n\",\"keccak256\":\"0x4362472f7b9a891c5d555f2bbabc363f3e8cb86f925957c5a09b5e6ea7c3102d\",\"license\":\"AGPL-3.0\"},\"src/game/internal/UsingStratagemsSetters.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport './UsingStratagemsState.sol';\\nimport '../interface/UsingStratagemsEvents.sol';\\nimport './UsingStratagemsUtils.sol';\\nimport '../../utils/PositionUtils.sol';\\n\\nabstract contract UsingStratagemsSetters is UsingStratagemsState, UsingStratagemsUtils {\\n\\tusing PositionUtils for uint64;\\n\\n\\tconstructor(Config memory config) UsingStratagemsState(config) {}\\n\\n\\tfunction _makeCommitment(address player, bytes24 commitmentHash, uint256 inReserve) internal {\\n\\t\\tCommitment storage commitment = _commitments[player];\\n\\n\\t\\t(uint24 epoch, bool commiting) = _epoch();\\n\\n\\t\\tif (!commiting) {\\n\\t\\t\\trevert InRevealPhase();\\n\\t\\t}\\n\\t\\tif (commitment.epoch != 0 && commitment.epoch != epoch) {\\n\\t\\t\\trevert PreviousCommitmentNotRevealed();\\n\\t\\t}\\n\\n\\t\\tcommitment.hash = commitmentHash;\\n\\t\\tcommitment.epoch = epoch;\\n\\n\\t\\t// for withdrawal, we still require a minimal reserve so player cannot change their mind without losing at least one token\\n\\t\\t// TODO we might want to increase that value to 10x as 10 moves might quite common, at least on some networks\\n\\t\\tif (inReserve < NUM_TOKENS_PER_GEMS) {\\n\\t\\t\\t// TODO? special error for this case ?\\n\\t\\t\\trevert ReserveTooLow(inReserve, NUM_TOKENS_PER_GEMS);\\n\\t\\t}\\n\\n\\t\\temit CommitmentMade(player, epoch, commitmentHash);\\n\\t}\\n\\n\\tfunction _resolveMoves(\\n\\t\\taddress player,\\n\\t\\tuint24 epoch,\\n\\t\\tMove[] memory moves,\\n\\t\\taddress tokenGiver\\n\\t) internal returns (uint256 newReserveAmount) {\\n\\t\\t// max number of transfer is (4+1) * moves.length\\n\\t\\t// (for each move's cell's neighbours potentially being a different account)\\n\\t\\t// limiting the number of move per commitment reveal to 32 or, even more probably, should cover this unlikely scenario\\n\\t\\tTokenTransferCollection memory transferCollection = TokenTransferCollection({\\n\\t\\t\\ttransfers: new TokenTransfer[](moves.length * 5),\\n\\t\\t\\tnumTransfers: 0\\n\\t\\t});\\n\\t\\tMoveTokens memory tokens;\\n\\t\\tfor (uint256 i = 0; i < moves.length; i++) {\\n\\t\\t\\t(uint256 placed, uint256 burnt, uint256 returned) = _computeMove(\\n\\t\\t\\t\\ttransferCollection,\\n\\t\\t\\t\\tplayer,\\n\\t\\t\\t\\tepoch,\\n\\t\\t\\t\\tmoves[i]\\n\\t\\t\\t);\\n\\n\\t\\t\\ttokens.tokensPlaced += placed;\\n\\t\\t\\ttokens.tokensBurnt += burnt;\\n\\t\\t\\ttokens.tokensReturned += returned;\\n\\t\\t}\\n\\n\\t\\tlogger.logTransfers(0, 'resolveMoves', transferCollection);\\n\\n\\t\\t_multiTransfer(TOKENS, transferCollection);\\n\\n\\t\\tnewReserveAmount = _tokensInReserve[player];\\n\\n\\t\\t// Note: even if funds can comes from outside the reserve, we still check it\\n\\t\\t// This ensure player have to have a reserve and cannot escape the slash if not\\n\\t\\tif (newReserveAmount < tokens.tokensPlaced + tokens.tokensBurnt) {\\n\\t\\t\\trevert ReserveTooLow(newReserveAmount, tokens.tokensPlaced + tokens.tokensBurnt);\\n\\t\\t}\\n\\t\\tif (tokenGiver == address(0)) {\\n\\t\\t\\tnewReserveAmount -= tokens.tokensPlaced + tokens.tokensBurnt;\\n\\t\\t\\t_tokensInReserve[player] = newReserveAmount;\\n\\t\\t} else {\\n\\t\\t\\tif (tokens.tokensPlaced != 0) {\\n\\t\\t\\t\\t// TODO use TransferCollection too here\\n\\t\\t\\t\\tTOKENS.transferFrom(tokenGiver, address(this), tokens.tokensPlaced);\\n\\t\\t\\t}\\n\\t\\t\\tif (tokens.tokensBurnt != 0) {\\n\\t\\t\\t\\t// TODO use TransferCollection too here\\n\\t\\t\\t\\tTOKENS.transferFrom(tokenGiver, BURN_ADDRESS, tokens.tokensBurnt);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t// option to return in reserve ?\\n\\t\\t// TODO use TransferCollection too here\\n\\t\\tif (tokens.tokensReturned != 0) {\\n\\t\\t\\t// console.log(\\\"tokensReturned\\\");\\n\\t\\t\\t// console.log(tokens.tokensReturned);\\n\\t\\t\\tTOKENS.transfer(player, tokens.tokensReturned);\\n\\t\\t}\\n\\t}\\n\\n\\tfunction _countBits(uint8 n) internal pure returns (uint8 count) {\\n\\t\\twhile (n != 0) {\\n\\t\\t\\tn = n & (n - 1);\\n\\t\\t\\tcount++;\\n\\t\\t}\\n\\t}\\n\\n\\t// Note on COLLISION\\n\\t// If one color was used more than other, we could consider the cell having N owner and N times the number of tokens\\n\\t// such cells would be a good target for others\\n\\t// On the other end, on winning agains other cells, owner of such cell would have to divide the winnings\\n\\t// TODO revisit this\\n\\t// we could also refund the part\\n\\t// so if there is 3 green 2 blue and 1 red, then green win and the cell become green\\n\\t// player we put blue or red get refunded their respective gems\\n\\t// the players we put green get refunded 2/3 so that the cell still contains only 1\\n\\t// if there was 3 green and 3 blue and 1 red then the cell becomes black\\n\\t// every player get refunded 6/7 so that the black cell only has 1\\n\\t// note that the issue with green winning above is that winnings need to be distributed to all 3 players we put green\\n\\t// and since the number is technically unbounded, we have to use a splitter contract where player withdraw their winnings\\n\\t// this add UX complexity and some cost for withdrawals\\n\\tfunction _computeMove(\\n\\t\\tTokenTransferCollection memory transferCollection,\\n\\t\\taddress player,\\n\\t\\tuint24 epoch,\\n\\t\\tMove memory move\\n\\t) internal returns (uint256 tokensPlaced, uint256 tokensBurnt, uint256 tokensReturned) {\\n\\t\\tCell memory currentState = _getUpdatedCell(move.position, epoch);\\n\\n\\t\\tlogger.logCell(\\n\\t\\t\\t0,\\n\\t\\t\\tstring.concat('_computeMove at epoch ', Strings.toString(epoch)),\\n\\t\\t\\tmove.position,\\n\\t\\t\\tcurrentState,\\n\\t\\t\\taddress(uint160(_owners[move.position]))\\n\\t\\t);\\n\\n\\t\\t// we might have distribution still to do\\n\\t\\tuint8 distribution = currentState.distribution;\\n\\t\\tif (currentState.life == 0 && currentState.lastEpochUpdate != 0) {\\n\\t\\t\\t// if we just died, currentState.lastEpochUpdate > 0\\n\\t\\t\\t// we have to distribute to all\\n\\t\\t\\tdistribution = (currentState.enemyMap << 4) + _countBits(currentState.enemyMap);\\n\\n\\t\\t\\t/// we are now dead for real\\n\\t\\t\\tcurrentState.lastEpochUpdate = 0;\\n\\t\\t}\\n\\n\\t\\t// we then apply our move:\\n\\n\\t\\t// first we do some validity checks\\n\\t\\tif (move.color == Color.None) {\\n\\t\\t\\tif (currentState.life != MAX_LIFE || _ownerOf(move.position) != player) {\\n\\t\\t\\t\\t// invalid move\\n\\t\\t\\t\\treturn (0, 0, NUM_TOKENS_PER_GEMS);\\n\\t\\t\\t}\\n\\n\\t\\t\\t_collectTransfer(transferCollection, TokenTransfer({to: payable(player), amount: NUM_TOKENS_PER_GEMS}));\\n\\t\\t}\\n\\t\\t// then we consider the case of collision and transform such move as Color Evil\\n\\t\\telse if (currentState.epochWhenTokenIsAdded == epoch) {\\n\\t\\t\\tif (currentState.life != 0) {\\n\\t\\t\\t\\tmove.color = Color.Evil;\\n\\t\\t\\t\\t// TODO Add further stake, or do we burn? or return?\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t// invalid move, on top of a MAX, that become None ?\\n\\t\\t\\t\\treturn (0, 0, NUM_TOKENS_PER_GEMS);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t(int8 newDelta, uint8 newEnemyMap) = _propagate(\\n\\t\\t\\ttransferCollection,\\n\\t\\t\\tmove,\\n\\t\\t\\tepoch,\\n\\t\\t\\tcurrentState.color,\\n\\t\\t\\tdistribution\\n\\t\\t);\\n\\n\\t\\temit MoveProcessed(move.position, player, currentState.color, move.color);\\n\\t\\tcurrentState.color = move.color;\\n\\t\\tcurrentState.distribution = 0;\\n\\t\\tcurrentState.epochWhenTokenIsAdded = epoch; // used to prevent overwriting, even Color.None\\n\\n\\t\\tif (currentState.color == Color.None) {\\n\\t\\t\\tcurrentState.life = 0;\\n\\t\\t\\tcurrentState.lastEpochUpdate = 0;\\n\\t\\t\\tcurrentState.delta = 0;\\n\\t\\t\\tcurrentState.enemyMap = 0;\\n\\t\\t\\t_owners[move.position] = 0;\\n\\t\\t\\ttokensReturned = NUM_TOKENS_PER_GEMS;\\n\\t\\t} else {\\n\\t\\t\\ttokensPlaced = NUM_TOKENS_PER_GEMS;\\n\\n\\t\\t\\tcurrentState.enemyMap = newEnemyMap;\\n\\n\\t\\t\\tcurrentState.delta = newDelta;\\n\\t\\t\\tcurrentState.life = 1;\\n\\t\\t\\tcurrentState.lastEpochUpdate = epoch;\\n\\t\\t\\tif (currentState.color == Color.Evil) {\\n\\t\\t\\t\\t_owners[move.position] = uint256(uint160(0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF));\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t_owners[move.position] = uint256(uint160(player));\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t_cells[move.position] = currentState;\\n\\n\\t\\tlogger.logCell(\\n\\t\\t\\t0,\\n\\t\\t\\tstring.concat('AFTER ', Strings.toString(epoch)),\\n\\t\\t\\tmove.position,\\n\\t\\t\\tcurrentState,\\n\\t\\t\\taddress(uint160(_owners[move.position]))\\n\\t\\t);\\n\\t}\\n\\n\\tfunction _propagate(\\n\\t\\tTokenTransferCollection memory transferCollection,\\n\\t\\tMove memory move,\\n\\t\\tuint24 epoch,\\n\\t\\tColor color,\\n\\t\\tuint8 distribution\\n\\t) internal returns (int8 newDelta, uint8 newEnemyMap) {\\n\\t\\t(\\n\\t\\t\\tint8 newComputedDelta,\\n\\t\\t\\tuint8 newComputedEnemyMap,\\n\\t\\t\\tuint8 numDue,\\n\\t\\t\\taddress[4] memory ownersToPay\\n\\t\\t) = _updateNeighbours(move.position, epoch, color, move.color, distribution);\\n\\n\\t\\tif (numDue > 0) {\\n\\t\\t\\t_collectTransfer(\\n\\t\\t\\t\\ttransferCollection,\\n\\t\\t\\t\\tTokenTransfer({to: payable(_ownerOf(move.position)), amount: (numDue * NUM_TOKENS_PER_GEMS) / 12})\\n\\t\\t\\t);\\n\\t\\t}\\n\\t\\tfor (uint8 i = 0; i < 4; i++) {\\n\\t\\t\\tif (ownersToPay[i] != address(0)) {\\n\\t\\t\\t\\t_collectTransfer(\\n\\t\\t\\t\\t\\ttransferCollection,\\n\\t\\t\\t\\t\\tTokenTransfer({to: payable(ownersToPay[i]), amount: (NUM_TOKENS_PER_GEMS / (distribution & 0x0f))})\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tnewDelta = newComputedDelta;\\n\\t\\tnewEnemyMap = newComputedEnemyMap;\\n\\t}\\n\\n\\tfunction _poke(TokenTransferCollection memory transferCollection, uint64 position) internal {\\n\\t\\t(uint24 epoch, ) = _epoch();\\n\\t\\tCell memory currentState = _getUpdatedCell(position, epoch);\\n\\n\\t\\tlogger.logCell(\\n\\t\\t\\t0,\\n\\t\\t\\tstring.concat('_poke at epoch ', Strings.toString(epoch)),\\n\\t\\t\\tposition,\\n\\t\\t\\tcurrentState,\\n\\t\\t\\taddress(uint160(_owners[position]))\\n\\t\\t);\\n\\n\\t\\t// we might have distribution still to do\\n\\t\\tuint8 distribution = currentState.distribution;\\n\\t\\tif (currentState.life == 0 && currentState.lastEpochUpdate != 0) {\\n\\t\\t\\t// if we just died, currentState.lastEpochUpdate > 0\\n\\t\\t\\t// we have to distribute to all\\n\\t\\t\\tdistribution = (currentState.enemyMap << 4) + _countBits(currentState.enemyMap);\\n\\n\\t\\t\\t/// we are now dead for real\\n\\t\\t\\tcurrentState.lastEpochUpdate = 0;\\n\\t\\t}\\n\\n\\t\\t(, , uint8 numDue, address[4] memory ownersToPay) = _updateNeighbours(\\n\\t\\t\\tposition,\\n\\t\\t\\tepoch,\\n\\t\\t\\tcurrentState.color,\\n\\t\\t\\tcurrentState.color,\\n\\t\\t\\tdistribution\\n\\t\\t);\\n\\n\\t\\tif (numDue > 0) {\\n\\t\\t\\t_collectTransfer(\\n\\t\\t\\t\\ttransferCollection,\\n\\t\\t\\t\\tTokenTransfer({to: payable(_ownerOf(position)), amount: numDue * NUM_TOKENS_PER_GEMS})\\n\\t\\t\\t);\\n\\t\\t}\\n\\t\\tfor (uint8 i = 0; i < 4; i++) {\\n\\t\\t\\tif (ownersToPay[i] != address(0)) {\\n\\t\\t\\t\\t_collectTransfer(\\n\\t\\t\\t\\t\\ttransferCollection,\\n\\t\\t\\t\\t\\tTokenTransfer({to: payable(ownersToPay[i]), amount: NUM_TOKENS_PER_GEMS})\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tcurrentState.distribution = 0;\\n\\t\\t_cells[position] = currentState;\\n\\t}\\n\\n\\tfunction _updateNeighbours(\\n\\t\\tuint64 position,\\n\\t\\tuint24 epoch,\\n\\t\\tColor oldColor,\\n\\t\\tColor newColor,\\n\\t\\tuint8 distribution\\n\\t) internal returns (int8 newDelta, uint8 newenemyMap, uint8 numDue, address[4] memory ownersToPay) {\\n\\t\\tunchecked {\\n\\t\\t\\tlogger.logPosition('from', position);\\n\\n\\t\\t\\tint8 enemyOrFriend;\\n\\t\\t\\tuint8 due;\\n\\t\\t\\t{\\n\\t\\t\\t\\tuint64 upPosition = position.offset(0, -1);\\n\\t\\t\\t\\tlogger.logPosition('upPosition', upPosition);\\n\\t\\t\\t\\t(enemyOrFriend, due) = _updateCell(upPosition, epoch, 2, oldColor, newColor);\\n\\t\\t\\t\\tif (enemyOrFriend < 0) {\\n\\t\\t\\t\\t\\tnewenemyMap = newenemyMap | 1;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tnumDue += due;\\n\\t\\t\\t\\tif ((distribution >> 4) & 4 == 4) {\\n\\t\\t\\t\\t\\t// TODO?: if we decide to group owner in the cell struct, we should get the cell in memory in that function\\n\\t\\t\\t\\t\\townersToPay[0] = _ownerOf(upPosition);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tnewDelta += enemyOrFriend;\\n\\t\\t\\t}\\n\\t\\t\\t{\\n\\t\\t\\t\\tuint64 leftPosition = position.offset(-1, 0);\\n\\t\\t\\t\\tlogger.logPosition('leftPosition', leftPosition);\\n\\t\\t\\t\\t(enemyOrFriend, due) = _updateCell(leftPosition, epoch, 3, oldColor, newColor);\\n\\t\\t\\t\\tif (enemyOrFriend < 0) {\\n\\t\\t\\t\\t\\tnewenemyMap = newenemyMap | 2;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tnumDue += due;\\n\\t\\t\\t\\tif ((distribution >> 4) & 8 == 8) {\\n\\t\\t\\t\\t\\townersToPay[1] = _ownerOf(leftPosition);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tnewDelta += enemyOrFriend;\\n\\t\\t\\t}\\n\\n\\t\\t\\t{\\n\\t\\t\\t\\tuint64 downPosition = position.offset(0, 1);\\n\\t\\t\\t\\tlogger.logPosition('downPosition', downPosition);\\n\\t\\t\\t\\t(enemyOrFriend, due) = _updateCell(downPosition, epoch, 0, oldColor, newColor);\\n\\t\\t\\t\\tif (enemyOrFriend < 0) {\\n\\t\\t\\t\\t\\tnewenemyMap = newenemyMap | 4;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tnumDue += due;\\n\\t\\t\\t\\tif ((distribution >> 4) & 1 == 1) {\\n\\t\\t\\t\\t\\townersToPay[2] = _ownerOf(downPosition);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tnewDelta += enemyOrFriend;\\n\\t\\t\\t}\\n\\t\\t\\t{\\n\\t\\t\\t\\tuint64 rightPosition = position.offset(1, 0);\\n\\t\\t\\t\\tlogger.logPosition('rightPosition', rightPosition);\\n\\t\\t\\t\\t(enemyOrFriend, due) = _updateCell(rightPosition, epoch, 1, oldColor, newColor);\\n\\t\\t\\t\\tif (enemyOrFriend < 0) {\\n\\t\\t\\t\\t\\tnewenemyMap = newenemyMap | 8;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tnumDue += due;\\n\\t\\t\\t\\tif ((distribution >> 4) & 2 == 2) {\\n\\t\\t\\t\\t\\townersToPay[3] = _ownerOf(rightPosition);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tnewDelta += enemyOrFriend;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t/// @dev This update the cell in storage\\n\\tfunction _updateCell(\\n\\t\\tuint64 position,\\n\\t\\tuint24 epoch,\\n\\t\\tuint8 neighbourIndex,\\n\\t\\tColor oldColor,\\n\\t\\tColor newColor\\n\\t) internal returns (int8 enemyOrFriend, uint8 due) {\\n\\t\\tCell memory cell = _cells[position];\\n\\n\\t\\tuint24 lastUpdate = cell.lastEpochUpdate;\\n\\t\\tColor color = cell.color;\\n\\t\\tif (color != Color.None) {\\n\\t\\t\\tenemyOrFriend = color == newColor ? int8(1) : int8(-1);\\n\\t\\t}\\n\\t\\tif (lastUpdate >= 1 && color != Color.None) {\\n\\t\\t\\t// we only consider cell with color that are not dead\\n\\t\\t\\tif (cell.life > 0 && lastUpdate < epoch) {\\n\\t\\t\\t\\t// of there is life to update we compute the new life\\n\\t\\t\\t\\t(uint8 newLife, uint24 epochUsed) = _computeNewLife(\\n\\t\\t\\t\\t\\tlastUpdate,\\n\\t\\t\\t\\t\\tcell.enemyMap,\\n\\t\\t\\t\\t\\tcell.delta,\\n\\t\\t\\t\\t\\tcell.life,\\n\\t\\t\\t\\t\\tepoch\\n\\t\\t\\t\\t);\\n\\t\\t\\t\\tdue = _updateCellFromNeighbor(position, cell, newLife, epochUsed, neighbourIndex, oldColor, newColor);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tdue = _updateCellFromNeighbor(position, cell, cell.life, epoch, neighbourIndex, oldColor, newColor);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tfunction _updateCellFromNeighbor(\\n\\t\\tuint64 position, // position of the cell to be updated\\n\\t\\tCell memory cell, // cell to be updated\\n\\t\\tuint8 newLife, // new life value for the celll\\n\\t\\tuint24 epoch, // epoch at which the update occured (epochUsed TODO: confirm its use)\\n\\t\\tuint8 neighbourIndex, // the neighbor triggering the update and for which we return whether it should receive its due\\n\\t\\tColor oldColor, // old color of that neighbor\\n\\t\\tColor newColor // new color of that neighbor\\n\\t) internal returns (uint8 due) {\\n\\t\\tif (cell.life > 0 && newLife == 0) {\\n\\t\\t\\t// we just died, we establish the distributionMap and counts\\n\\t\\t\\tcell.distribution = (cell.enemyMap << 4) + _countBits(cell.enemyMap);\\n\\t\\t}\\n\\n\\t\\tlogger.logCell(\\n\\t\\t\\t0,\\n\\t\\t\\tstring.concat('_updateCellFromNeighbor  index', Strings.toString(neighbourIndex)),\\n\\t\\t\\tposition,\\n\\t\\t\\tcell,\\n\\t\\t\\taddress(uint160(_owners[position]))\\n\\t\\t);\\n\\n\\t\\tif ((cell.distribution >> 4) & (2 ** neighbourIndex) == 2 ** neighbourIndex) {\\n\\t\\t\\tdue = 12 / (cell.distribution & 0x0f);\\n\\t\\t\\tcell.distribution =\\n\\t\\t\\t\\t(uint8(uint256(cell.distribution >> 4) & (~(2 ** uint256(neighbourIndex)))) << 4) +\\n\\t\\t\\t\\t(cell.distribution & 0x0f);\\n\\t\\t}\\n\\n\\t\\tif (oldColor != newColor) {\\n\\t\\t\\tif (newColor == Color.None) {\\n\\t\\t\\t\\tif (cell.color == oldColor) {\\n\\t\\t\\t\\t\\tcell.delta -= 1;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tcell.delta += 1;\\n\\t\\t\\t\\t\\tcell.enemyMap = cell.enemyMap & uint8((1 << neighbourIndex) ^ 0xFF);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (cell.color == oldColor) {\\n\\t\\t\\t\\t// then newColor is different (see assert above)\\n\\t\\t\\t\\tcell.enemyMap = cell.enemyMap | uint8(1 << neighbourIndex);\\n\\t\\t\\t\\tcell.delta -= 2;\\n\\t\\t\\t} else if (cell.color == newColor) {\\n\\t\\t\\t\\t// then old color was different\\n\\t\\t\\t\\tcell.delta += (oldColor == Color.None ? int8(1) : int8(2));\\n\\t\\t\\t\\tcell.enemyMap = cell.enemyMap & uint8((1 << neighbourIndex) ^ 0xFF);\\n\\t\\t\\t} else if (oldColor == Color.None) {\\n\\t\\t\\t\\t// if there were no oldCOlor and the newColor is not your (already checked in previous if clause)\\n\\t\\t\\t\\tcell.delta -= 1;\\n\\t\\t\\t\\tcell.enemyMap = cell.enemyMap | uint8(1 << neighbourIndex);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tcell.lastEpochUpdate = epoch;\\n\\t\\tcell.life = newLife;\\n\\n\\t\\tlogger.logCell(\\n\\t\\t\\t0,\\n\\t\\t\\tstring.concat('AFTER _updateCellFromNeighbor  index', Strings.toString(neighbourIndex)),\\n\\t\\t\\tposition,\\n\\t\\t\\tcell,\\n\\t\\t\\taddress(uint160(_owners[position]))\\n\\t\\t);\\n\\n\\t\\t_cells[position] = cell;\\n\\t}\\n}\\n\",\"keccak256\":\"0xb833a7780b19683766402e6fa8c3b01516c4d9dc62fc86bf412974bad1d941f1\",\"license\":\"AGPL-3.0\"},\"src/game/internal/UsingStratagemsState.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport './UsingStratagemsStore.sol';\\nimport '../interface/UsingStratagemsEvents.sol';\\nimport '../interface/UsingStratagemsErrors.sol';\\nimport './UsingVirtualTime.sol';\\nimport '../../utils/PositionUtils.sol';\\n\\n// TODO use hardhat-preprocessor\\nimport 'hardhat/console.sol';\\nimport '@openzeppelin/contracts/utils/Strings.sol';\\n\\nlibrary logger {\\n\\tusing PositionUtils for uint64;\\n\\n\\taddress constant CONSOLE_ADDRESS = 0x000000000000000000636F6e736F6c652e6c6f67;\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\t/// @solidity memory-safe-assembly\\n\\t\\tassembly {\\n\\t\\t\\tpop(staticcall(gas(), consoleAddress, add(payload, 32), mload(payload), 0, 0))\\n\\t\\t}\\n\\t}\\n\\n\\t// _sendLogPayload(abi.encodeWithSignature('log(string,int256,int256)', 'cell %s', x, y));\\n\\n\\tfunction logPosition(string memory title, uint64 pos) internal view {\\n\\t\\t(int32 x, int32 y) = pos.toXY();\\n\\t\\tconsole.log('%s: (%s,%s)', title, Strings.toString(x), Strings.toString(y));\\n\\t}\\n\\n\\tfunction logCell(\\n\\t\\tuint8 ii,\\n\\t\\tstring memory title,\\n\\t\\tuint64 id,\\n\\t\\tUsingStratagemsTypes.Cell memory cell,\\n\\t\\taddress owner\\n\\t) internal view {\\n\\t\\tstring memory indent = ii == 0 ? '' : ii == 1 ? '    ' : ii == 2 ? '        ' : '            ';\\n\\t\\t// string memory indent = '';\\n\\t\\tconsole.log('%s%s', indent, title);\\n\\t\\t(int32 x, int32 y) = id.toXY();\\n\\t\\tconsole.log('%s-------------------------------------------------------------', indent);\\n\\t\\tconsole.log('%scell (%s,%s)', indent, Strings.toString(x), Strings.toString(y));\\n\\t\\tconsole.log('%s-------------------------------------------------------------', indent);\\n\\t\\tconsole.log('%s - lastEpochUpdate:  %s', indent, cell.lastEpochUpdate);\\n\\t\\tconsole.log('%s - epochWhenTokenIsAdded:  %s', indent, cell.epochWhenTokenIsAdded);\\n\\t\\tconsole.log('%s - color:  %s', indent, uint8(cell.color));\\n\\t\\tconsole.log('%s - life:  %s', indent, cell.life);\\n\\t\\tconsole.log('%s - distribution:  %s', indent, cell.distribution);\\n\\t\\tconsole.log('%s - owner:  %s', indent, owner);\\n\\t\\tconsole.log('%s - delta: %s', indent, Strings.toString(cell.delta));\\n\\t\\tconsole.log('%s - enemyMap:  %s', indent, cell.enemyMap);\\n\\t\\tconsole.log('%s-------------------------------------------------------------', indent);\\n\\t}\\n\\n\\tfunction logTransfers(\\n\\t\\tuint8 ii,\\n\\t\\tstring memory title,\\n\\t\\tUsingStratagemsTypes.TokenTransferCollection memory transferCollection\\n\\t) internal pure {\\n\\t\\tstring memory indent = ii == 0 ? '' : ii == 1 ? '    ' : ii == 2 ? '        ' : '            ';\\n\\t\\t// string memory indent = '';\\n\\t\\tconsole.log('%s%s', indent, title);\\n\\t\\tconsole.log('%s-------------------------------------------------------------', indent);\\n\\t\\tfor (uint256 i = 0; i < transferCollection.numTransfers; i++) {\\n\\t\\t\\tconsole.log(\\n\\t\\t\\t\\t'%stransfer (%s,%s)',\\n\\t\\t\\t\\tindent,\\n\\t\\t\\t\\ttransferCollection.transfers[i].to,\\n\\t\\t\\t\\tStrings.toString(transferCollection.transfers[i].amount)\\n\\t\\t\\t);\\n\\t\\t}\\n\\t\\tconsole.log('%s-------------------------------------------------------------', indent);\\n\\t}\\n}\\n\\nabstract contract UsingStratagemsState is\\n\\tUsingStratagemsStore,\\n\\tUsingStratagemsEvents,\\n\\tUsingStratagemsErrors,\\n\\tUsingVirtualTime\\n{\\n\\t/// @notice The token used for the game. Each gems on the board contains that token\\n\\tIERC20WithIERC2612 internal immutable TOKENS;\\n\\t/// @notice the timestamp (in seconds) at which the game start, it start in the commit phase\\n\\tuint256 internal immutable START_TIME;\\n\\t/// @notice the duration of the commit phase in seconds\\n\\tuint256 internal immutable COMMIT_PHASE_DURATION;\\n\\t/// @notice the duration of the reveal phase in seconds\\n\\tuint256 internal immutable REVEAL_PHASE_DURATION;\\n\\t/// @notice the max number of level a cell can reach in the game\\n\\tuint8 internal immutable MAX_LIFE;\\n\\t/// @notice the number of tokens underlying each gems on the board.\\n\\tuint256 internal immutable NUM_TOKENS_PER_GEMS;\\n\\t/// @notice the address to send the token to when burning\\n\\taddress payable internal immutable BURN_ADDRESS;\\n\\n\\t/// @notice the number of moves a hash represent, after that players make use of furtherMoves\\n\\tuint8 internal constant MAX_NUM_MOVES_PER_HASH = 32;\\n\\n\\t/// @notice Create an instance of a Stratagems game\\n\\t/// @param config configuration options for the game\\n\\tconstructor(Config memory config) UsingVirtualTime(config) {\\n\\t\\tTOKENS = config.tokens;\\n\\t\\tBURN_ADDRESS = config.burnAddress;\\n\\t\\tSTART_TIME = config.startTime;\\n\\t\\tCOMMIT_PHASE_DURATION = config.commitPhaseDuration;\\n\\t\\tREVEAL_PHASE_DURATION = config.revealPhaseDuration;\\n\\t\\tMAX_LIFE = config.maxLife;\\n\\t\\tNUM_TOKENS_PER_GEMS = config.numTokensPerGems;\\n\\t}\\n\\n\\tfunction _epoch() internal view virtual returns (uint24 epoch, bool commiting) {\\n\\t\\tuint256 epochDuration = COMMIT_PHASE_DURATION + REVEAL_PHASE_DURATION;\\n\\t\\tuint256 time = _timestamp();\\n\\t\\tif (time < START_TIME) {\\n\\t\\t\\trevert GameNotStarted();\\n\\t\\t}\\n\\t\\tuint256 timePassed = time - START_TIME;\\n\\t\\tepoch = uint24(timePassed / epochDuration + 2); // epoch start at 2, this make the hypothetical previous reveal phase's epoch to be 1\\n\\t\\tcommiting = timePassed - ((epoch - 2) * epochDuration) < COMMIT_PHASE_DURATION;\\n\\t}\\n\\n\\tfunction _computeNewLife(\\n\\t\\tuint24 lastUpdate,\\n\\t\\tuint8 enemyMap,\\n\\t\\tint8 delta,\\n\\t\\tuint8 life,\\n\\t\\tuint24 epoch\\n\\t) internal view returns (uint8 newLife, uint24 epochUsed) {\\n\\t\\tepochUsed = lastUpdate;\\n\\t\\tif (lastUpdate >= 1 && life > 0) {\\n\\t\\t\\tuint256 epochDelta = epoch - lastUpdate;\\n\\t\\t\\tif (epochDelta > 0) {\\n\\t\\t\\t\\tint8 effectiveDelta = delta != 0 ? delta : -1;\\n\\t\\t\\t\\tif (effectiveDelta < 0 && enemyMap == 0) {\\n\\t\\t\\t\\t\\teffectiveDelta = 0;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (effectiveDelta > 0) {\\n\\t\\t\\t\\t\\tif (life < MAX_LIFE) {\\n\\t\\t\\t\\t\\t\\tuint8 maxEpoch = ((MAX_LIFE - life) + uint8(effectiveDelta) - 1) / uint8(effectiveDelta);\\n\\t\\t\\t\\t\\t\\tif (epochDelta > maxEpoch) {\\n\\t\\t\\t\\t\\t\\t\\tepochDelta = maxEpoch;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tlife += uint8(epochDelta) * uint8(effectiveDelta);\\n\\t\\t\\t\\t\\t\\tif (life > MAX_LIFE) {\\n\\t\\t\\t\\t\\t\\t\\tlife = MAX_LIFE;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tnewLife = life;\\n\\t\\t\\t\\t\\t\\tepochUsed = lastUpdate + uint24(epochDelta);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tnewLife = life;\\n\\t\\t\\t\\t\\t\\tepochUsed = lastUpdate;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else if (effectiveDelta < 0) {\\n\\t\\t\\t\\t\\tuint8 numEpochBeforeDying = (life + uint8(-effectiveDelta) - 1) / uint8(-effectiveDelta);\\n\\t\\t\\t\\t\\tif (epochDelta > numEpochBeforeDying) {\\n\\t\\t\\t\\t\\t\\tepochDelta = numEpochBeforeDying;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tuint8 lifeLoss = uint8(epochDelta) * uint8(-effectiveDelta);\\n\\t\\t\\t\\t\\tif (lifeLoss > life) {\\n\\t\\t\\t\\t\\t\\tnewLife = 0;\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tnewLife = life - lifeLoss;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tepochUsed = lastUpdate + uint24(epochDelta);\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tnewLife = life;\\n\\t\\t\\t\\t\\tepochUsed = epoch;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tnewLife = life;\\n\\t\\t\\t\\tepochUsed = lastUpdate;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tfunction _getUpdatedCell(uint64 position, uint24 epoch) internal view returns (Cell memory updatedCell) {\\n\\t\\t// load from state\\n\\t\\tupdatedCell = _cells[position];\\n\\t\\tuint24 lastUpdate = updatedCell.lastEpochUpdate;\\n\\t\\tint8 delta = updatedCell.delta;\\n\\t\\tuint8 life = updatedCell.life;\\n\\t\\t// logger.logCell(0, 'before update', position, updatedCell, address(uint160(_owners[position])));\\n\\t\\tif (lastUpdate >= 1 && life > 0) {\\n\\t\\t\\t(uint8 newLife, uint24 epochUsed) = _computeNewLife(lastUpdate, updatedCell.enemyMap, delta, life, epoch);\\n\\t\\t\\tupdatedCell.life = newLife;\\n\\t\\t\\tupdatedCell.lastEpochUpdate = epochUsed; // TODO check if this is useful to cap it to epoch where it died\\n\\t\\t}\\n\\t}\\n\\n\\t/// @dev Get the owner of a token.\\n\\t/// @param tokenID The token to query.\\n\\tfunction _ownerOf(uint256 tokenID) internal view virtual returns (address owner) {\\n\\t\\towner = address(uint160(_owners[tokenID]));\\n\\t}\\n}\\n\",\"keccak256\":\"0xb7a8fdd87ec756ebd6e6c40b37196a5dac24b8d40294ee102324be54e638d17c\",\"license\":\"AGPL-3.0\"},\"src/game/internal/UsingStratagemsStore.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport '../interface/UsingStratagemsTypes.sol';\\n\\ncontract UsingStratagemsStore is UsingStratagemsTypes {\\n\\tmapping(uint256 => Cell) internal _cells;\\n\\tmapping(uint256 => uint256) internal _owners; //owner + approval + ... erc721\\n\\n\\tmapping(address => uint256) internal _tokensInReserve;\\n\\tmapping(address => Commitment) internal _commitments;\\n\\n\\t// Operators (also used by ERC721)\\n\\tmapping(address => mapping(address => bool)) internal _operatorsForAll;\\n\\tmapping(uint256 => address) internal _operators;\\n\\n\\t// ERC721 balanceOf\\n\\t// mapping(address => uint256) internal _balances;\\n}\\n\",\"keccak256\":\"0x67d22bbc7eb4513799c8038a35e581d90ee2cb213051850ebd59f4e78cc44a2d\",\"license\":\"AGPL-3.0\"},\"src/game/internal/UsingStratagemsUtils.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport '../interface/UsingStratagemsTypes.sol';\\nimport '../interface/UsingStratagemsErrors.sol';\\n\\nabstract contract UsingStratagemsUtils is UsingStratagemsTypes, UsingStratagemsErrors {\\n\\tfunction _checkHash(\\n\\t\\tbytes24 commitmentHash,\\n\\t\\tbytes32 secret,\\n\\t\\tMove[] memory moves,\\n\\t\\tbytes24 furtherMoves\\n\\t) internal pure {\\n\\t\\tif (furtherMoves != bytes24(0)) {\\n\\t\\t\\tbytes24 computedHash = bytes24(keccak256(abi.encode(secret, moves, furtherMoves)));\\n\\t\\t\\tif (commitmentHash != computedHash) {\\n\\t\\t\\t\\trevert CommitmentHashNotMatching();\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tbytes24 computedHash = bytes24(keccak256(abi.encode(secret, moves)));\\n\\t\\t\\tif (commitmentHash != computedHash) {\\n\\t\\t\\t\\trevert CommitmentHashNotMatching();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tfunction _collectTransfer(\\n\\t\\tTokenTransferCollection memory transferCollection,\\n\\t\\tTokenTransfer memory newTransfer\\n\\t) internal pure {\\n\\t\\t// we look for the newTransfer address in case it is already present\\n\\t\\tfor (uint256 k = 0; k < transferCollection.numTransfers; k++) {\\n\\t\\t\\tif (transferCollection.transfers[k].to == newTransfer.to) {\\n\\t\\t\\t\\t// if we found we add the amount\\n\\t\\t\\t\\ttransferCollection.transfers[k].amount += newTransfer.amount;\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t// if we did not find that address we add it to the end\\n\\t\\ttransferCollection.transfers[transferCollection.numTransfers].to = newTransfer.to;\\n\\t\\ttransferCollection.transfers[transferCollection.numTransfers].amount = newTransfer.amount;\\n\\t\\t// and increase the size to lookup for next time\\n\\t\\ttransferCollection.numTransfers++;\\n\\t}\\n\\n\\tfunction _multiTransfer(IERC20WithIERC2612 token, TokenTransferCollection memory transferCollection) internal {\\n\\t\\tfor (uint256 i = 0; i < transferCollection.numTransfers; i++) {\\n\\t\\t\\ttoken.transfer(transferCollection.transfers[i].to, transferCollection.transfers[i].amount);\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0x20ffcba1168cd6bf7b408c0265c79c8b56f022d36068e8188833ec3d1a06831d\",\"license\":\"AGPL-3.0\"},\"src/game/internal/UsingVirtualTime.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport '../interface/UsingStratagemsTypes.sol';\\n\\nabstract contract UsingVirtualTime {\\n\\t// TODO use hardhat-preprocessor\\n\\n\\tITime immutable _time;\\n\\n\\tconstructor(UsingStratagemsTypes.Config memory config) {\\n\\t\\t_time = config.time;\\n\\t}\\n\\n\\tfunction _timestamp() internal view returns (uint256) {\\n\\t\\tif (address(_time) == address(0)) {\\n\\t\\t\\treturn block.timestamp;\\n\\t\\t}\\n\\t\\treturn _time.timestamp();\\n\\t}\\n}\\n\",\"keccak256\":\"0x6c1bba64cb0dfac4895bd5f17aa979c1b7b6b386bac34dc1f3474b7d803c432c\",\"license\":\"AGPL-3.0\"},\"src/game/routes/StratagemsSetters.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport '../interface/IStratagems.sol';\\nimport '../internal/UsingStratagemsSetters.sol';\\nimport '../internal/UsingStratagemsUtils.sol';\\n\\ncontract StratagemsSetters is IStratagemsSetters, UsingStratagemsSetters {\\n\\tconstructor(Config memory config) UsingStratagemsSetters(config) {}\\n\\n\\t\\n\\t/// @inheritdoc IStratagemsSetters\\n\\tfunction addToReserve(uint256 tokensAmountToAdd, Permit calldata permit) external {\\n\\t\\tif (tokensAmountToAdd > 0) {\\n\\t\\t\\tuint256 newAmount = _tokensInReserve[msg.sender];\\n\\t\\t\\tnewAmount += tokensAmountToAdd;\\n\\t\\t\\t_tokensInReserve[msg.sender] = newAmount;\\n\\n\\t\\t\\tif (permit.value > 0) {\\n\\t\\t\\t\\tTOKENS.permit(msg.sender, address(this), permit.value, permit.deadline, permit.v, permit.r, permit.s);\\n\\t\\t\\t}\\n\\t\\t\\tTOKENS.transferFrom(msg.sender, address(this), tokensAmountToAdd);\\n\\t\\t\\temit ReserveDeposited(msg.sender, tokensAmountToAdd, newAmount);\\n\\t\\t}\\n\\t}\\n\\n\\t/// @inheritdoc IStratagemsSetters\\n\\tfunction makeCommitment(bytes24 commitmentHash, address payable payee) external payable {\\n\\t\\t_makeCommitment(msg.sender, commitmentHash, _tokensInReserve[msg.sender]);\\n\\t\\tif (payee != address(0)) {\\n\\t\\t\\tpayee.transfer(msg.value);\\n\\t\\t}\\n\\t}\\n\\n\\t/// @inheritdoc IStratagemsSetters\\n\\tfunction makeCommitmentWithExtraReserve(\\n\\t\\tbytes24 commitmentHash,\\n\\t\\tuint256 tokensAmountToAdd,\\n\\t\\tPermit calldata permit,\\n\\t\\taddress payable payee\\n\\t) external payable {\\n\\t\\tuint256 inReserve = _tokensInReserve[msg.sender];\\n\\t\\tinReserve += tokensAmountToAdd;\\n\\t\\t_tokensInReserve[msg.sender] = inReserve;\\n\\n\\t\\t_makeCommitment(msg.sender, commitmentHash, inReserve);\\n\\n\\t\\t// bytes32 PERMIT_TYPEHASH = keccak256(\\n\\t\\t// \\t'Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)'\\n\\t\\t// );\\n\\t\\t// bytes32 digest = keccak256(\\n\\t\\t// \\tabi.encodePacked(\\n\\t\\t// \\t\\t'\\\\x19\\\\x01',\\n\\t\\t// \\t\\tTOKENS.DOMAIN_SEPARATOR(),\\n\\t\\t// \\t\\tkeccak256(abi.encode(PERMIT_TYPEHASH, msg.sender, address(this), permit.value, 0, 0))\\n\\t\\t// \\t)\\n\\t\\t// );\\n\\n\\t\\tif (permit.value > 0) {\\n\\t\\t\\tTOKENS.permit(msg.sender, address(this), permit.value, permit.deadline, permit.v, permit.r, permit.s);\\n\\t\\t}\\n\\n\\t\\tif (tokensAmountToAdd > 0) {\\n\\t\\t\\tTOKENS.transferFrom(msg.sender, address(this), tokensAmountToAdd);\\n\\t\\t\\temit ReserveDeposited(msg.sender, tokensAmountToAdd, inReserve);\\n\\t\\t}\\n\\n\\t\\tif (payee != address(0)) {\\n\\t\\t\\tpayee.transfer(msg.value);\\n\\t\\t}\\n\\t}\\n\\n\\t/// @inheritdoc IStratagemsSetters\\n\\tfunction cancelCommitment() external {\\n\\t\\tCommitment storage commitment = _commitments[msg.sender];\\n\\t\\t(uint24 epoch, bool commiting) = _epoch();\\n\\t\\tif (!commiting) {\\n\\t\\t\\trevert InRevealPhase();\\n\\t\\t}\\n\\t\\tif (commitment.epoch != epoch) {\\n\\t\\t\\trevert PreviousCommitmentNotRevealed();\\n\\t\\t}\\n\\n\\t\\t// Note that we do not reset the hash\\n\\t\\t// This ensure the slot do not get reset and keep the gas cost consistent across execution\\n\\t\\tcommitment.epoch = 0;\\n\\n\\t\\temit CommitmentCancelled(msg.sender, epoch);\\n\\t}\\n\\n\\t/// @inheritdoc IStratagemsSetters\\n\\tfunction withdrawFromReserve(uint256 amount) external {\\n\\t\\tCommitment storage commitment = _commitments[msg.sender];\\n\\n\\t\\t(uint24 epoch, bool commiting) = _epoch();\\n\\n\\t\\tif (commitment.epoch != 0 && (!commiting || commitment.epoch != epoch)) {\\n\\t\\t\\trevert PreviousCommitmentNotRevealed();\\n\\t\\t}\\n\\n\\t\\tuint256 inReserve = _tokensInReserve[msg.sender];\\n\\t\\tif (amount == type(uint256).max) {\\n\\t\\t\\tamount = inReserve;\\n\\t\\t\\tinReserve = 0;\\n\\t\\t} else {\\n\\t\\t\\tif (inReserve < amount) {\\n\\t\\t\\t\\trevert ReserveTooLow(inReserve, amount);\\n\\t\\t\\t}\\n\\t\\t\\tinReserve -= amount;\\n\\t\\t}\\n\\t\\t_tokensInReserve[msg.sender] = inReserve;\\n\\t\\tTOKENS.transfer(msg.sender, amount);\\n\\t\\temit ReserveWithdrawn(msg.sender, amount, inReserve);\\n\\t}\\n\\n\\t/// @inheritdoc IStratagemsSetters\\n\\tfunction reveal(\\n\\t\\taddress player,\\n\\t\\tbytes32 secret,\\n\\t\\tMove[] calldata moves,\\n\\t\\tbytes24 furtherMoves,\\n\\t\\tbool useReserve,\\n\\t\\taddress payable payee\\n\\t) external payable {\\n\\t\\tCommitment storage commitment = _commitments[player];\\n\\t\\t(uint24 epoch, bool commiting) = _epoch();\\n\\n\\t\\tif (commiting) {\\n\\t\\t\\trevert InCommitmentPhase();\\n\\t\\t}\\n\\t\\tif (commitment.epoch == 0) {\\n\\t\\t\\trevert NothingToReveal();\\n\\t\\t}\\n\\t\\tif (commitment.epoch != epoch) {\\n\\t\\t\\trevert InvalidEpoch();\\n\\t\\t}\\n\\n\\t\\t_checkHash(commitment.hash, secret, moves, furtherMoves);\\n\\n\\t\\tuint256 newReserveAmount = _resolveMoves(player, epoch, moves, useReserve ? address(0) : player);\\n\\n\\t\\tbytes24 hashRevealed = commitment.hash;\\n\\t\\tif (furtherMoves != bytes24(0)) {\\n\\t\\t\\tif (moves.length != MAX_NUM_MOVES_PER_HASH) {\\n\\t\\t\\t\\trevert InvalidFurtherMoves();\\n\\t\\t\\t}\\n\\t\\t\\tcommitment.hash = furtherMoves;\\n\\t\\t} else {\\n\\t\\t\\tcommitment.epoch = 0; // used\\n\\t\\t}\\n\\n\\t\\temit CommitmentRevealed(player, epoch, hashRevealed, moves, furtherMoves, newReserveAmount);\\n\\n\\t\\tif (payee != address(0)) {\\n\\t\\t\\tpayee.transfer(msg.value);\\n\\t\\t}\\n\\t}\\n\\n\\t/// @inheritdoc IStratagemsSetters\\n\\tfunction acknowledgeMissedReveal(\\n\\t\\taddress player,\\n\\t\\tbytes32 secret,\\n\\t\\tMove[] calldata moves,\\n\\t\\tbytes24 furtherMoves\\n\\t) external {\\n\\t\\tCommitment storage commitment = _commitments[player];\\n\\t\\t(uint24 epoch, ) = _epoch();\\n\\t\\tif (commitment.epoch == 0 || commitment.epoch == epoch) {\\n\\t\\t\\trevert CanStillReveal();\\n\\t\\t}\\n\\n\\t\\tuint256 numMoves = moves.length;\\n\\n\\t\\t_checkHash(commitment.hash, secret, moves, furtherMoves);\\n\\n\\t\\tif (furtherMoves != bytes24(0)) {\\n\\t\\t\\tif (numMoves != MAX_NUM_MOVES_PER_HASH) {\\n\\t\\t\\t\\trevert InvalidFurtherMoves();\\n\\t\\t\\t}\\n\\t\\t\\tcommitment.hash = furtherMoves;\\n\\t\\t} else {\\n\\t\\t\\tcommitment.epoch = 0; // used\\n\\t\\t}\\n\\n\\t\\tuint256 amount = moves.length;\\n\\t\\t_tokensInReserve[msg.sender] -= amount;\\n\\t\\tTOKENS.transfer(BURN_ADDRESS, amount);\\n\\t\\temit CommitmentVoid(player, epoch, amount, furtherMoves);\\n\\t}\\n\\n\\t/// @inheritdoc IStratagemsSetters\\n\\tfunction acknowledgeMissedRevealByBurningAllReserve() external {\\n\\t\\tCommitment storage commitment = _commitments[msg.sender];\\n\\t\\t(uint24 epoch, ) = _epoch();\\n\\n\\t\\tif (commitment.epoch == 0) {\\n\\t\\t\\trevert NothingToReveal();\\n\\t\\t}\\n\\n\\t\\tif (commitment.epoch == epoch) {\\n\\t\\t\\trevert CanStillReveal();\\n\\t\\t}\\n\\n\\t\\tcommitment.epoch = 0;\\n\\t\\tuint256 amount = _tokensInReserve[msg.sender];\\n\\t\\t_tokensInReserve[msg.sender] = 0;\\n\\t\\tTOKENS.transfer(BURN_ADDRESS, amount);\\n\\n\\t\\t// here we cannot know whether there were further move or even any moves\\n\\t\\t// we just burn all tokens in reserve\\n\\t\\temit CommitmentVoid(msg.sender, epoch, amount, bytes24(0));\\n\\t}\\n\\n\\t/// @inheritdoc IStratagemsSetters\\n\\tfunction poke(uint64 position) external {\\n\\t\\t// max number of transfer is 5 (for each neighbour's potentially being a different account + own cell)\\n\\n\\t\\tTokenTransferCollection memory transferCollection = TokenTransferCollection({\\n\\t\\t\\ttransfers: new TokenTransfer[](5),\\n\\t\\t\\tnumTransfers: 0\\n\\t\\t});\\n\\t\\t_poke(transferCollection, position);\\n\\n\\t\\t_multiTransfer(TOKENS, transferCollection);\\n\\t\\t// TODO events?\\n\\t}\\n\\n\\t/// @inheritdoc IStratagemsSetters\\n\\tfunction pokeMultiple(uint64[] calldata positions) external {\\n\\t\\tuint256 numCells = positions.length;\\n\\t\\t// max number of transfer is 4 * numCells (for each cell's neighbours potentially being a different account + own cell)\\n\\t\\tTokenTransferCollection memory transferCollection = TokenTransferCollection({\\n\\t\\t\\ttransfers: new TokenTransfer[](numCells * 5),\\n\\t\\t\\tnumTransfers: 0\\n\\t\\t});\\n\\t\\tfor (uint256 i = 0; i < numCells; i++) {\\n\\t\\t\\t_poke(transferCollection, positions[i]);\\n\\t\\t}\\n\\t\\t_multiTransfer(TOKENS, transferCollection);\\n\\t\\t// TODO events?\\n\\t}\\n}\\n\",\"keccak256\":\"0x5ed5b8a2ac0bf145dfc55eabd22701327299b57bd7fe96b9fbf4b0751db4b088\",\"license\":\"AGPL-3.0\"},\"src/utils/PositionUtils.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\nlibrary PositionUtils {\\n\\tfunction toXY(uint64 position) internal pure returns (int32 x, int32 y) {\\n\\t\\tx = int32(uint32(position) & 0xFFFFFFFF);\\n\\t\\ty = int32(uint32(position >> 32));\\n\\t}\\n\\n\\tfunction offset(uint64 position, int32 x, int32 y) internal pure returns (uint64 newPosition) {\\n\\t\\tx = int32(uint32(position) & 0xFFFFFFFF) + x;\\n\\t\\ty = int32(uint32(position >> 32)) + y;\\n\\t\\tnewPosition = (uint64(uint32(y)) << 32) + uint64(uint32(x));\\n\\t}\\n}\\n\",\"keccak256\":\"0xa03af20214488f58e3558c9fdfb514b9ff1ca2aaf0818268c0f6a416cf2dc511\",\"license\":\"AGPL-3.0\"}},\"version\":1}",
      "storageLayout": {
        "storage": [
          {
            "astId": 15172,
            "contract": "src/game/routes/StratagemsSetters.sol:StratagemsSetters",
            "label": "_cells",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Cell)12700_storage)"
          },
          {
            "astId": 15176,
            "contract": "src/game/routes/StratagemsSetters.sol:StratagemsSetters",
            "label": "_owners",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_uint256)"
          },
          {
            "astId": 15180,
            "contract": "src/game/routes/StratagemsSetters.sol:StratagemsSetters",
            "label": "_tokensInReserve",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 15185,
            "contract": "src/game/routes/StratagemsSetters.sol:StratagemsSetters",
            "label": "_commitments",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(Commitment)12705_storage)"
          },
          {
            "astId": 15191,
            "contract": "src/game/routes/StratagemsSetters.sol:StratagemsSetters",
            "label": "_operatorsForAll",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
          },
          {
            "astId": 15195,
            "contract": "src/game/routes/StratagemsSetters.sol:StratagemsSetters",
            "label": "_operators",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_address)"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes24": {
            "encoding": "inplace",
            "label": "bytes24",
            "numberOfBytes": "24"
          },
          "t_enum(Color)12626": {
            "encoding": "inplace",
            "label": "enum UsingStratagemsTypes.Color",
            "numberOfBytes": "1"
          },
          "t_int8": {
            "encoding": "inplace",
            "label": "int8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => bool)",
            "numberOfBytes": "32",
            "value": "t_bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_bool)"
          },
          "t_mapping(t_address,t_struct(Commitment)12705_storage)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => struct UsingStratagemsTypes.Commitment)",
            "numberOfBytes": "32",
            "value": "t_struct(Commitment)12705_storage"
          },
          "t_mapping(t_address,t_uint256)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32",
            "value": "t_address"
          },
          "t_mapping(t_uint256,t_struct(Cell)12700_storage)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => struct UsingStratagemsTypes.Cell)",
            "numberOfBytes": "32",
            "value": "t_struct(Cell)12700_storage"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_struct(Cell)12700_storage": {
            "encoding": "inplace",
            "label": "struct UsingStratagemsTypes.Cell",
            "members": [
              {
                "astId": 12686,
                "contract": "src/game/routes/StratagemsSetters.sol:StratagemsSetters",
                "label": "lastEpochUpdate",
                "offset": 0,
                "slot": "0",
                "type": "t_uint24"
              },
              {
                "astId": 12688,
                "contract": "src/game/routes/StratagemsSetters.sol:StratagemsSetters",
                "label": "epochWhenTokenIsAdded",
                "offset": 3,
                "slot": "0",
                "type": "t_uint24"
              },
              {
                "astId": 12691,
                "contract": "src/game/routes/StratagemsSetters.sol:StratagemsSetters",
                "label": "color",
                "offset": 6,
                "slot": "0",
                "type": "t_enum(Color)12626"
              },
              {
                "astId": 12693,
                "contract": "src/game/routes/StratagemsSetters.sol:StratagemsSetters",
                "label": "life",
                "offset": 7,
                "slot": "0",
                "type": "t_uint8"
              },
              {
                "astId": 12695,
                "contract": "src/game/routes/StratagemsSetters.sol:StratagemsSetters",
                "label": "delta",
                "offset": 8,
                "slot": "0",
                "type": "t_int8"
              },
              {
                "astId": 12697,
                "contract": "src/game/routes/StratagemsSetters.sol:StratagemsSetters",
                "label": "enemyMap",
                "offset": 9,
                "slot": "0",
                "type": "t_uint8"
              },
              {
                "astId": 12699,
                "contract": "src/game/routes/StratagemsSetters.sol:StratagemsSetters",
                "label": "distribution",
                "offset": 10,
                "slot": "0",
                "type": "t_uint8"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Commitment)12705_storage": {
            "encoding": "inplace",
            "label": "struct UsingStratagemsTypes.Commitment",
            "members": [
              {
                "astId": 12702,
                "contract": "src/game/routes/StratagemsSetters.sol:StratagemsSetters",
                "label": "hash",
                "offset": 0,
                "slot": "0",
                "type": "t_bytes24"
              },
              {
                "astId": 12704,
                "contract": "src/game/routes/StratagemsSetters.sol:StratagemsSetters",
                "label": "epoch",
                "offset": 24,
                "slot": "0",
                "type": "t_uint24"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint24": {
            "encoding": "inplace",
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "encoding": "inplace",
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      },
      "userdoc": {
        "errors": {
          "CanStillReveal()": [
            {
              "notice": "Player have to reveal if they can Stratagems will prevent them from acknowledging missed reveal if there is still time to reveal."
            }
          ],
          "CommitmentHashNotMatching()": [
            {
              "notice": "Player have to reveal their commitment using the exact same move values  If they provide different value, the commitment hash will differ and Stratagems will reject their reveal."
            }
          ],
          "GameNotStarted()": [
            {
              "notice": "Game has not started yet, can't perform any action"
            }
          ],
          "InCommitmentPhase()": [
            {
              "notice": "When in Commit phase, player can make new commitment but they cannot reveal their move yet."
            }
          ],
          "InRevealPhase()": [
            {
              "notice": "When in Reveal phase, it is not possible to commit new moves or cancel previous commitment  During Reveal phase, players have to reveal their commitment, if not already done."
            }
          ],
          "InvalidEpoch()": [
            {
              "notice": "Player can only reveal their move in the same epoch they commited.abi  If a player reveal later it can only do to minimize the reserve burn cost by calling : `acknowledgeMissedReveal`"
            }
          ],
          "InvalidFurtherMoves()": [
            {
              "notice": "Player can make arbitrary number of moves per epoch. To do so they group moves into (MAX_NUM_MOVES_PER_HASH = 32) moves  This result in a recursive series of hash that they can then submit in turn while revealing.  The limit  (MAX_NUM_MOVES_PER_HASH = 32) ensure a reveal batch fits in a block."
            }
          ],
          "NothingToReveal()": [
            {
              "notice": "Player can only reveal moves they commited."
            }
          ],
          "PreviousCommitmentNotRevealed()": [
            {
              "notice": "Previous commitment need to be revealed before making a new one. Even if the corresponding reveal phase has passed.\\  It is also not possible to withdraw any amount from reserve until the commitment is revealed.\\If player lost the information to reveal, it can acknowledge failure which will burn all its reserve.\\"
            }
          ],
          "ReserveTooLow(uint256,uint256)": [
            {
              "notice": "to make a commitment you always need at least one `config.numTokensPerGems` amount in reserve  Player also need one `config.numTokensPerGems`  per moves during the Reveal phase."
            }
          ]
        },
        "events": {
          "CommitmentCancelled(address,uint24)": {
            "notice": "A player has cancelled its current commitment (before it reached the reveal phase)"
          },
          "CommitmentMade(address,uint24,bytes24)": {
            "notice": "A player has commited to make a move and reveal it on the reveal phase"
          },
          "CommitmentRevealed(address,uint24,bytes24,(uint64,uint8)[],bytes24,uint256)": {
            "notice": "Player has revealed its previous commitment"
          },
          "CommitmentVoid(address,uint24,uint256,bytes24)": {
            "notice": "A player has canceled a previous commitment by burning some tokens"
          },
          "MoveProcessed(uint64,address,uint8,uint8)": {
            "notice": "A move has been revealed."
          },
          "ReserveDeposited(address,uint256,uint256)": {
            "notice": "Player has deposited token in the reserve, allowing it to use that much in game"
          },
          "ReserveWithdrawn(address,uint256,uint256)": {
            "notice": "Player have withdrawn token from the reserve"
          }
        },
        "kind": "user",
        "methods": {
          "acknowledgeMissedReveal(address,bytes32,(uint64,uint8)[],bytes24)": {
            "notice": "called by player if they missed the reveal phase and want to minimze the token loss.  By providing the moves, they will be slashed only the amount of token required to make the moves"
          },
          "acknowledgeMissedRevealByBurningAllReserve()": {
            "notice": "should only be called as last resort this will burn all tokens in reserve If player has access to the secret, better call `acknowledgeMissedReveal`"
          },
          "addToReserve(uint256,(uint256,uint256,uint8,bytes32,bytes32))": {
            "notice": "called by players to add tokens to their reserve"
          },
          "cancelCommitment()": {
            "notice": "called by players to cancel their current commitment  Can only be called during the commit phase in which the commitment was made  It cannot be called afterward"
          },
          "makeCommitment(bytes24,address)": {
            "notice": "called by players to commit their moves  this can be called multiple time in the same epoch, the last call overriding the previous.  When a commitment is made, it needs to be revealed in the reveal phase of the same epoch.abi  If missed, player can still reveal its moves but none of them will be resolved.   The player would lose its associated reserved amount."
          },
          "makeCommitmentWithExtraReserve(bytes24,uint256,(uint256,uint256,uint8,bytes32,bytes32),address)": {
            "notice": "called to make a commitment along with tokens to add to the reserve"
          },
          "pokeMultiple(uint64[])": {
            "notice": "poke and collect the tokens won across multiple cells"
          },
          "reveal(address,bytes32,(uint64,uint8)[],bytes24,bool,address)": {
            "notice": "called by player to reveal their moves  this is where the core logic of the game takes place  This is where the game board evolves  The game is designed so that reveal order does not matter"
          },
          "withdrawFromReserve(uint256)": {
            "notice": "called by players to withdraw tokens from the reserve  can only be called if no commitments are pending  Note that while you can withdraw after commiting, note that if you do not have enough tokens  you'll have your commitment failing."
          }
        },
        "version": 1
      },
      "argsData": "0x0000000000000000000000002d1ecf0a44b19d23cfac37f1ce2399571ed4f7ba000000000000000000000000deaddeaddeaddeaddeaddeaddeaddeaddeaddead000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000143700000000000000000000000000000000000000000000000000000000000000e1000000000000000000000000000000000000000000000000000000000000000070000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000007aa235ff8d217dc9d3f4778c89912bc712d1811b"
    },
    "transaction": {
      "hash": "0xa72ae3f451a57381aed02dafd27ee0ed0dfbe30a8aeaa4ee154ace186eaf1190",
      "origin": "0x61c461ecc993aadeb7e4b47e96d1b8cc37314b20"
    },
    "name": "Stratagems_Implementation_Router_Setters_Route"
  }
]